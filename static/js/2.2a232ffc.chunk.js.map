{"version":3,"sources":["../node_modules/video.js/node_modules/global/window.js","../node_modules/video.js/node_modules/global/document.js","../node_modules/keycode/index.js","../node_modules/react/index.js","../node_modules/mux.js/lib/utils/stream.js","../node_modules/mux.js/lib/mp4/probe.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/webpack/buildin/global.js","../node_modules/global/window.js","../node_modules/mux.js/lib/m2ts/stream-types.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/prop-types/index.js","../node_modules/react-input-range/lib/js/utils/index.js","../node_modules/tsml/tsml.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/function-bind/index.js","../node_modules/is-callable/index.js","../node_modules/mux.js/lib/mp4/transmuxer.js","../node_modules/mux.js/lib/aac/utils.js","../node_modules/autobind-decorator/lib/index.js","../node_modules/mux.js/lib/tools/mp4-inspector.js","../node_modules/xhr/index.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/object-assign/index.js","../node_modules/define-properties/index.js","../node_modules/object-keys/isArguments.js","../node_modules/string.prototype.trim/implementation.js","../node_modules/es-abstract/GetIntrinsic.js","../node_modules/has/src/index.js","../node_modules/string.prototype.trim/polyfill.js","../node_modules/mux.js/lib/mp4/mp4-generator.js","../node_modules/mux.js/lib/m2ts/caption-stream.js","../node_modules/mux.js/lib/tools/caption-packet-parser.js","../node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","../node_modules/react-input-range/lib/js/input-range/label.js","../node_modules/react-dom/index.js","../node_modules/safe-json-parse/tuple.js","../node_modules/mux.js/lib/mp4/index.js","../node_modules/mux.js/lib/tools/ts-inspector.js","../node_modules/react-input-range/lib/js/index.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/pkcs7/dist/pkcs7.es.js","../node_modules/aes-decrypter/dist/aes-decrypter.es.js","../node_modules/video.js/dist/video.es.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/xhr/node_modules/global/window.js","../node_modules/is-function/index.js","../node_modules/parse-headers/parse-headers.js","../node_modules/string.prototype.trim/index.js","../node_modules/function-bind/implementation.js","../node_modules/object-keys/index.js","../node_modules/object-keys/implementation.js","../node_modules/es-abstract/es5.js","../node_modules/es-abstract/helpers/assertRecord.js","../node_modules/es-abstract/helpers/isNaN.js","../node_modules/es-abstract/helpers/isFinite.js","../node_modules/es-abstract/helpers/sign.js","../node_modules/es-abstract/helpers/mod.js","../node_modules/es-to-primitive/es5.js","../node_modules/es-to-primitive/helpers/isPrimitive.js","../node_modules/string.prototype.trim/shim.js","../node_modules/for-each/index.js","../node_modules/xtend/immutable.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/mux.js/lib/utils/bin.js","../node_modules/mux.js/lib/mp4/frame-utils.js","../node_modules/mux.js/lib/mp4/audio-frame-utils.js","../node_modules/mux.js/lib/data/silence.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/mp4/track-decode-info.js","../node_modules/mux.js/lib/m2ts/m2ts.js","../node_modules/mux.js/lib/m2ts/metadata-stream.js","../node_modules/mux.js/lib/codecs/adts.js","../node_modules/mux.js/lib/codecs/h264.js","../node_modules/mux.js/lib/utils/exp-golomb.js","../node_modules/mux.js/lib/aac/index.js","../node_modules/mux.js/lib/mp4/caption-parser.js","../node_modules/mux.js/lib/m2ts/probe.js","../node_modules/react-input-range/lib/js/input-range/input-range.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-input-range/lib/js/input-range/value-transformer.js","../node_modules/react-input-range/lib/js/utils/captialize.js","../node_modules/react-input-range/lib/js/utils/clamp.js","../node_modules/react-input-range/lib/js/utils/distance-to.js","../node_modules/react-input-range/lib/js/utils/is-defined.js","../node_modules/react-input-range/lib/js/utils/is-number.js","../node_modules/react-input-range/lib/js/utils/is-object.js","../node_modules/react-input-range/lib/js/utils/length.js","../node_modules/react-input-range/lib/js/input-range/default-class-names.js","../node_modules/react-input-range/lib/js/input-range/range-prop-type.js","../node_modules/react-input-range/lib/js/input-range/value-prop-type.js","../node_modules/react-input-range/lib/js/input-range/slider.js","../node_modules/react-input-range/lib/js/input-range/track.js","../node_modules/react-input-range/lib/js/input-range/key-codes.js"],"names":["global","win","window","self","module","exports","doccy","topLevel","minDoc","__webpack_require__","document","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","String","codes","toLowerCase","aliases","length","charCodeAt","isEventKey","event","nameOrCode","undefined","code","backspace","tab","enter","shift","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","end","home","left","up","right","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","i","fromCharCode","title","alias","Stream","this","init","listeners","on","type","listener","concat","off","index","indexOf","slice","splice","trigger","callbacks","args","arguments","call","push","apply","dispose","prototype","pipe","destination","data","flushSource","flush","_findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","path","size","subresults","results","byteLength","subarray","buffer","result","reduce","trak","tkhd","version","id","mdhd","fragment","trafs","baseTimes","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","traks","videoTrackIds","forEach","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","findBox","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","d","__webpack_exports__","g","Function","e","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_captialize","get","_interopRequireDefault","default","_clamp","_distanceTo","_isDefined","_isNumber","_isObject","_length","__esModule","clean","s","replace","sa","parse","parseUTCTiming","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","n","isObject","merge","_len","objects","_key","flatten","lists","x","y","from","list","errors","urlToolkit","root","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","trim","alwaysNormalize","basePartsForNormalise","parseURL","Error","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","exec","builtParts","params","query","baseURLPath","newPath","substring","lastIndexOf","url","parts","split","reverse","join","fn","resolveUrl","baseUrl","relativeUrl","test","a","location","href","urlTypeToSegment","_ref","_ref$baseUrl","_ref$source","_ref$range","range","_ref$indexRange","indexRange","segment","uri","resolvedUri","ranges","startRange","parseInt","endRange","byterange","offset","byteRangeToString","segmentRange","static","attributes","duration","_attributes$timescale","sourceDuration","start","ceil","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","now","periodStartWC","periodDuration","segmentCount","availableStart","floor","availableEnd","max","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","segments","number","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","timeline","time","toSegments","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","initSegment","sourceURL","segmentTimeInfo","addSegmentsToPlaylist","playlist","sidx","sidxByteRange","sidxEnd","mediaReferences","references","r","referenceType","startIndex","firstOffset","reference","referencedSize","subsegmentDuration","mergeDiscontiguousPlaylists","playlists","o","acc","_acc$name$segments","name","lang","discontinuity","contentProtection","k","l","discontinuityStarts","addSegmentInfoFromSidx","sidxMapping","sidxKey","sidxMatch","formatAudioPlaylist","_attributes","NAME","BANDWIDTH","bandwidth","CODECS","codecs","endList","targetDuration","mediaSequence","formatVttPlaylist","_ref2","_attributes2","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","RESOLUTION","width","height","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","mimeType","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","master","allowCache","mediaGroups","VIDEO","audio","mainPlaylist","formattedPlaylists","role","language","label","roleLabel","autoselect","organizeAudioPlaylists","subs","organizeVttPlaylists","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","media","sIndex","S","repeat","segmentTime","t","count","nextS","identifierPattern","constructTemplateUrl","values","match","identifier","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Number","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","base","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","element","childNodes","tagName","getContent","textContent","parseDuration","str","_match$slice","year","month","day","hour","minute","second","parseFloat","parsers","mediaPresentationDuration","Date","parsedValue","isNaN","DEFAULT","parseAttributes","el","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","tag","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","node","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","b64Text","decodedString","atob","array","Uint8Array","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","attrs","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","options","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","documentElement","getElementsByTagName","UTCTimingNode","method","parseUTCTimingScheme","implementation","bind","fnToStr","toString","constructorRegex","isES6ClassFn","fnStr","toStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","mp4","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","AacStream","isLikelyAacData","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","b","generateVideoSegmentTimingInfo","baseMediaDecodeTime","startDts","startPts","endDts","endPts","prependedContentDuration","dts","pts","track","adtsFrames","sequenceNumber","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","collectDtsInfo","prop","setEarliestDts","earliestDts","timelineStartInfo","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","frames","moof","mdat","boxes","trimAdtsFramesByEarliestDts","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","prefixWithSilence","samples","generateSampleTable","concatenateFrameData","set","clearDtsInfo","config","pps","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","nalUnitType","sps","gopForFusion","gops","firstGop","lastGop","resetStream_","groupNalsIntoFrames","groupFramesIntoGops","keyFrame","getGopForFusion_","unshift","nalCount","extendFirstKeyFrame","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","concatenateNalData","dtsDistance","nearestGopObj","currentGop","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","text","audioTrack","caption","id3","captions","captionStreams","info","timelineStartPts","endTime","stream","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","MetadataStream","aacStream","audioTimestampRolloverStream","TimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","frame","setTimestamp","timeStamp","audioSegmentStream","codec","setupTsPipeline","packetStream","TransportPacketStream","parseStream","TransportParseStream","elementaryStream","ElementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","CaptionStream","tracks","videoSegmentStream","setBaseMediaDecodeTime","reset","isAac","resetCaptions","Transmuxer","VideoSegmentStream","AudioSegmentStream","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","parseId3TagSize","header","byteIndex","returnSize","parseAdtsSize","lowThree","middle","parseSampleRate","packet","parseAacTimestamp","frameStart","frameSize","unescape","bytes","percentEncode","boundMethod","descriptor","definingProperty","hasOwnProperty","boundFn","Reflect","getOwnPropertyNames","inspectMp4","_textifyMp","parseMp4Date","seconds","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","nalParse","avcStream","avcView","avc1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","avcC","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","btrt","bufferSizeDB","maxBitrate","avgBitrate","esds","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","dref","dataReferences","decodeURIComponent","nals","creationTime","modificationTime","mdia","mfhd","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","referenceId","earliestPresentationTime","referenceCount","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","box","ab","ArrayBuffer","v","z","inspectedMp4","indent","prefix","_byte","line","JSON","stringify","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","isFunction","parseHeaders","xtend","initParams","callback","createXHR","_createXHR","called","response","body","getBody","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","nodeName","getXml","isJson","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","setRequestHeader","isEmpty","beforeSend","send","forEachArray","toUpperCase","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","propIsEnumerable","propertyIsEnumerable","assign","test1","test2","test3","letter","shouldUseNative","symbols","to","val","toObject","hasSymbols","origDefineProperty","supportsDescriptors","_","arePropertyDescriptorsSupported","object","predicate","defineProperties","predicates","props","isArgs","callee","ES","leftWhitespace","rightWhitespace","ToString","CheckObjectCoercible","ThrowTypeError","getProto","getPrototypeOf","__proto__","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","Boolean","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","encodeURIComponent","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","Map","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","Promise","$ %PromisePrototype%","$ %PromiseProto_then%","then","$ %Promise_all%","all","$ %Promise_reject%","reject","$ %Promise_resolve%","resolve","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","ReferenceError","$ %ReferenceErrorPrototype%","$ %Reflect%","$ %RegExp%","RegExp","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","SyntaxError","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","video","payload","setUint32","audioobjecttype","samplingfrequencyindex","trackFragments","videoSample","audioSample","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","fileType","movie","cea708Parser","captionPackets_","ccStreams_","Cea608Stream","cc","sei","userData","newCaptionPackets","parseSei","escapedRBSP","payloadType","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","latestDts_","ignoreNextEqualDts_","numSameDts_","parseCaptionPackets","elem","idx","presortIndex","sort","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","ccData","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","name_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","content","console","error","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","popOn","baseRow","rollUp","paintOn","payloadSize","discardEmulationPreventionBytes","newLength","newData","emulationPreventionBytesPositions","sourceIndex","handleRollover","direction","abs","lastDTS","referenceDTS","type_","Label","_react2","_propTypes2","labelValue","formatLabel","children","createElement","className","classNames","labelContainer","propTypes","isRequired","objectOf","string","func","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","reviver","generator","probe","CaptionParser","StreamTypes","ts","aac","parseAudioPes_","pmt","pesType","pusi","parsed","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","pes","currentFrame","firstKeyFrame","videoPacketContainsKeyFrame","warn","inspectTs_","parsePat","parsePmt","parsePsi_","baseTimestamp","audioCount","sampleRate","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","_inputRange","_inputRange2","_extends","_inheritsLoose","subClass","superClass","create","constructor","_assertThisInitialized","_proto","LineStream","_Stream","_this","nextNewline","attr","ParseStream","customParsers","tagMappers","_this2","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_this3","expression","customType","dataParser","addTagMapper","Parser","lineStream","currentMap","uris","currentUri","defaultMediaGroups","CLOSED-CAPTIONS","currentTimeline","manifest","entry","mediaGroup","rendition","allow-cache","message","endlist","inf","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","program-date-time","targetduration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","comment","custom","chunk","classCallCheck","instance","Constructor","createClass","protoProps","staticProps","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","j","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","c","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","AsyncStream","jobs","delay","timeout_","setPrototypeOf","inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","step","STEP","asyncStream_","decryptChunk_","padded","video_es_version","video_es_inheritsLoose","_setPrototypeOf","p","_construct","Parent","Class","construct","sham","isNativeReflectConstruct","video_es_assertThisInitialized","_taggedTemplateLiteralLoose","strings","raw","video_es_history","video_es_LogByTypeFactory","log","level","lvl","levels","lvlRegExp","window_default","video_es_log","createLogger","logByType","subname","debug","history","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","each","video_es_assign","sources","isPlain","video_es_computedStyle","getComputedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","parent","createQuerier","selector","context","querySelector","ctx","video_es_createEl","properties","propName","tsml_default","setAttribute","attrName","appendContent","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","classToCheck","classList","contains","addClass","classToAdd","add","removeClass","classToRemove","remove","toggleClass","classToToggle","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","findPosition","top","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","createEl","_guid","newGUID","elData","elIdAttr","performance","getData","hasData","removeData","_cleanUpEvents","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","_supportsPassive","addEventListener","passiveEvents","guid","hash","handlersCopy","m","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","any","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","EVENT_MAP","video_es_createStyleElement","style","setTextContent","styleSheet","cssText","uid","bound","video_es_throttle","last","video_es_debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","oldTimeout","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","state","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","charAt","mergeOptions","video_es_Component","Component","ready","play","player_","parentComponent_","options_","id_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","navigator","userAgent","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","cues","cue","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","keycode_default","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","div","addToBody","host","protocol","innerHTML","details","video_es_getAbsoluteURL","getFileExtension","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","video_es_loadTrack","crossOrigin","xhr_default","responseBody","loaded_","tech_","loadHandler","errorHandler","video_es_TextTrack","_Track","TextTrack","settings","srclang","mode","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","setVolume","allowedMediators","MimetypesKind","opus","ogv","mov","m4v","mkv","m4a","mp3","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","video_es_CloseButton","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","h","gm","gh","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_PictureInPictureToggle","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","video_es_set","reduceRight","video_es_get","_this8","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","video_es_style","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","video_es_resolveUrl","url_toolkit_default","resolveManifestRedirect","handleManifestRedirect","req","responseURL","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","isFinalRendition","mediaChange","started","intervalDuration","endSequence","expired","backward","forward","backwardDuration","forwardDuration","video_es_duration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","segmentXhrHeaders","Range","byterangeEnd","byterangeStr","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","mp4Generator","toUnsigned$1","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","sampleForFrame","currentNal","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$1","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","maxSegmentDts","maxSegmentPts","captionPacketParser","streamTypes","_MetadataStream","timestampRolloverStream","parseUtf8","tagParsers","TXXX","WXXX","PRIV","owner","tagSize","dataAlignmentIndicator","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","ptsDtsFlags","packetLength","parsePes","PAT_PID","MP2T_PACKET_LENGTH","_AdtsStream","m2ts_1","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","NalByteStream","bytesLeft","tempLength","isLikelyAacData$1","transmuxer","parseType$2","parse$$1","mp4Inspector$$1","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","decode","presentation","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","playlistUpdate","group","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","requestSidx_","sidxRange","finishProcessingFn","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","mp4_inspector_default","sidxRequestFinished_","mpd_parser_es","masterXml_","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","masterXml","mediaGroupSidx","video_es_filterChangedSidxMappings","updatedMaster","mediaUri","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","keyBytes","decryptSegment","handleProgress","progressFn","stats","progressEvent","loaded","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","segmentKey","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onError","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","renditionSelectionMixin","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","for","u","w","aa","ba","A","B","f","framesToPop","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","refs","updater","F","G","isReactComponent","forceUpdate","H","isPureReactComponent","I","current","J","K","L","ref","__self","__source","M","defaultProps","$$typeof","_owner","N","O","P","Q","keyPrefix","R","U","T",":","ea","fa","V","da","W","X","Children","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","Z","ha","ia","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","dependencies","ta","ua","va","wa","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","animation","transition","Xa","Ya","Za","$a","bb","db","eb","fb","gb","nativeEvent","Interface","isDefaultPrevented","ib","eventPool","jb","destructor","hb","getPooled","persist","eventPhase","cancelable","isTrusted","kb","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","vb","detail","wb","zb","locale","xb","ctrlKey","altKey","metaKey","char","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","datetime","datetime-local","email","tel","week","Mb","Nb","correspondingUseElement","Ob","Pb","Rb","_valueTracker","getValue","setValue","Qb","Sb","checked","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","dc","ec","fc","gc","hc","ic","displayName","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","tc","pc","qc","oc","setAttributeNS","uc","vc","defaultChecked","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","sibling","gd","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","119","120","121","144","145","224","od","pd","dataTransfer","qd","targetTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","Ld","Nd","Od","contentEditable","Qd","focusedElem","selectionRange","Md","compareDocumentPosition","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","ge","he","ie","je","namespaceURI","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","pe","menuitem","area","br","col","embed","hr","img","input","keygen","link","meta","param","wbr","qe","re","is","se","te","ue","ve","we","autoFocus","xe","__html","ye","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Fe","Ge","He","Ie","Je","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","cf","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","contextType","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","zf","Af","_stringRef","Bf","Cf","Df","Ef","Ff","Gf","Hf","If","Jf","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","qg","lastRenderedState","eagerReducer","eagerState","rg","destroy","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hf","We","hydrate","first","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","hh","ih","jh","stack","kh","lh","mh","nh","oh","onClick","onclick","ph","qh","rh","vh","componentWillUnmount","wh","xh","yh","_reactRootContainer","zh","wasMultiple","multiple","Ce","display","uh","hi","Xh","Bh","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","ni","oi","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","Ri","Ti","Mi","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","findFiberByHostInstance","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","_r","previous","priorityLevel","_schedMock","MessageChannel","port2","port1","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","alert","confirm","prompt","define","getPolyfill","boundTrim","that","boundLength","boundArgs","Empty","origKeys","keysShim","originalKeys","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","GetIntrinsic","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","Type","IsPropertyDescriptor","Desc","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","setter","$SyntaxError","Property Descriptor","recordType","argumentName","modulo","remain","isPrimitive","isCallable","ES5internalSlots","actualHint","polyfill","thisArg","len","forEachString","forEachObject","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","substr","region","vals","vals0","integer","lineAlign","snapToLines","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","offsetTop","rects","getClientRects","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","convertCueToDOMTree","cuetext","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","pos","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","getCueAsHTML","scrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","ONE_SECOND_IN_TS","m2tsStreamTypes","ExpGolomb","aacUtils","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","_class","_createClass","_autobindDecorator2","valueTransformer","newObj","_interopRequireWildcard","_defaultClassNames2","_label2","_rangePropType2","_valuePropType2","_slider2","_utils","_keyCodes","_applyDecoratedDescriptor","decorators","initializer","decorator","InputRange","_React$Component","_classCallCheck","_possibleConstructorReturn","startValue","trackNode","isSliderDragging","lastKeyMoved","allowSameValues","ariaLabelledby","ariaControls","draggableTrack","maxValue","minValue","onChangeStart","onChange","onChangeComplete","removeDocumentMouseUpListener","removeDocumentTouchEndListener","disabledInputRange","inputRange","getClientRect","getValueFromProps","isMultiValue","positions","getPositionsFromValues","getTrackClientRect","distanceTo","currentValues","isWithinRange","hasStepDifference","updatePositions","getValueFromPosition","transformedValues","getStepValueFromValue","updateValues","shouldUpdate","updateValue","handleTouchEnd","getPositionFromEvent","updatePosition","prevEvent","_props","_props$value","stepValue","prevPosition","prevValue","LEFT_ARROW","DOWN_ARROW","decrementValue","RIGHT_ARROW","UP_ARROW","incrementValue","_props2","_props2$value","getKeyByPosition","isDefined","handleInteractionStart","handleInteractionEnd","addDocumentMouseUpListener","addDocumentTouchEndListener","percentages","getPercentagesFromValues","getKeys","_props3","onSliderDrag","handleSliderDrag","onSliderKeyDown","handleSliderKeyDown","captialize","getComponentClassName","aria-disabled","onKeyDown","onKeyUp","handleKeyUp","onMouseDown","onTouchStart","handleTouchStart","onTrackDrag","handleTrackDrag","onTrackMouseDown","handleTrackMouseDown","renderSliders","renderHiddenInputs","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","propFullName","secret","getShim","ReactPropTypes","symbol","arrayOf","instanceOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","getPercentageFromPosition","clientRect","sizePerc","getPercentageFromValue","getPositionFromValue","clamp","valuePerStep","pointA","pointB","xDiff","yDiff","_typeof","numA","numB","maxLabel","minLabel","slider","sliderContainer","valueLabel","isNumber","removeDocumentMouseMoveListener","removeDocumentTouchMoveListener","handleTouchMove","addDocumentMouseMoveListener","addDocumentTouchMoveListener","getStyle","aria-labelledby","aria-controls","draggable","trackDragEvent","activeTrackStyle","getActiveTrackStyle"],"mappings":"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","file":"static/js/2.2a232ffc.chunk.js","sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n  win = window;\n} else if (typeof global !== \"undefined\") {\n  win = global;\n} else if (typeof self !== \"undefined\") {\n  win = self;\n} else {\n  win = {};\n}\n\nmodule.exports = win;","var topLevel = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {};\n\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n  doccy = document;\n} else {\n  doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n  if (!doccy) {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n  }\n}\n\nmodule.exports = doccy;","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n    if (hasKeyCode) searchInput = hasKeyCode;\n  } // Numbers\n\n\n  if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n  var search = String(searchInput); // check codes\n\n  var foundNamedKey = codes[search.toLowerCase()];\n  if (foundNamedKey) return foundNamedKey; // check aliases\n\n  var foundNamedKey = aliases[search.toLowerCase()];\n  if (foundNamedKey) return foundNamedKey; // weird character?\n\n  if (search.length === 1) return search.charCodeAt(0);\n  return undefined;\n}\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\n\n\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode;\n\n    if (keyCode === null || keyCode === undefined) {\n      return false;\n    }\n\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n      if (foundNamedKey) {\n        return foundNamedKey === keyCode;\n      } // check aliases\n\n\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n      if (foundNamedKey) {\n        return foundNamedKey === keyCode;\n      }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n\n    return false;\n  }\n};\n\nexports = module.exports = keyCode;\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222 // Helper aliases\n\n};\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n  /*!\n   * Programatically add the following\n   */\n  // lower case chars\n\n};\n\nfor (i = 97; i < 123; i++) {\n  codes[String.fromCharCode(i)] = i - 32;\n} // numbers\n\n\nfor (var i = 48; i < 58; i++) {\n  codes[i - 48] = i;\n} // function keys\n\n\nfor (i = 1; i < 13; i++) {\n  codes['f' + i] = i + 111;\n} // numpad keys\n\n\nfor (i = 0; i < 10; i++) {\n  codes['numpad ' + i] = i + 96;\n}\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\n\nvar names = exports.names = exports.title = {}; // title for backward compat\n// Create reverse mapping\n\nfor (i in codes) {\n  names[codes[i]] = i;\n} // Add aliases\n\n\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias];\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function Stream() {\n  this.init = function () {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    this.on = function (type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n\n\n    this.off = function (type, listener) {\n      var index;\n\n      if (!listeners[type]) {\n        return false;\n      }\n\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n\n\n    this.trigger = function (type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n\n    this.dispose = function () {\n      listeners = {};\n    };\n  };\n};\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\n\n\nStream.prototype.pipe = function (destination) {\n  this.on('data', function (data) {\n    destination.push(data);\n  });\n  this.on('done', function (flushSource) {\n    destination.flush(flushSource);\n  });\n  return destination;\n}; // Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\n\n\nStream.prototype.push = function (data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function (flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\n\nvar _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n_findBox = function findBox(data, path) {\n  var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size = toUnsigned(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of data\n\n\n  return results;\n};\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\n\n\nparseType = function parseType(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\n\n\ntimescale = function timescale(init) {\n  var result = {},\n      traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n  return traks.reduce(function (result, trak) {\n    var tkhd, version, index, id, mdhd;\n    tkhd = _findBox(trak, ['tkhd'])[0];\n\n    if (!tkhd) {\n      return null;\n    }\n\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n    mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (!mdhd) {\n      return null;\n    }\n\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    return result;\n  }, result);\n};\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\n\n\nstartTime = function startTime(timescale, fragment) {\n  var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n  trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n  baseTimes = [].concat.apply([], trafs.map(function (traf) {\n    return _findBox(traf, ['tfhd']).map(function (tfhd) {\n      var id, scale, baseTime; // get the track id from the tfhd\n\n      id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n        var version, result;\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n        if (version === 1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n        }\n\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity; // convert base time to seconds\n\n      return baseTime / scale;\n    });\n  })); // return the minimum\n\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\n\n\ngetVideoTrackIds = function getVideoTrackIds(init) {\n  var traks = _findBox(init, ['moov', 'trak']);\n\n  var videoTrackIds = [];\n  traks.forEach(function (trak) {\n    var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n    var tkhds = _findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function (hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: _findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","var win;\n\nif (typeof window !== \"undefined\") {\n  win = window;\n} else if (typeof global !== \"undefined\") {\n  win = global;\n} else if (typeof self !== \"undefined\") {\n  win = self;\n} else {\n  win = {};\n}\n\nmodule.exports = win;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _captialize = require('./captialize');\n\nObject.defineProperty(exports, 'captialize', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_captialize).default;\n  }\n});\n\nvar _clamp = require('./clamp');\n\nObject.defineProperty(exports, 'clamp', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_clamp).default;\n  }\n});\n\nvar _distanceTo = require('./distance-to');\n\nObject.defineProperty(exports, 'distanceTo', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_distanceTo).default;\n  }\n});\n\nvar _isDefined = require('./is-defined');\n\nObject.defineProperty(exports, 'isDefined', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isDefined).default;\n  }\n});\n\nvar _isNumber = require('./is-number');\n\nObject.defineProperty(exports, 'isNumber', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isNumber).default;\n  }\n});\n\nvar _isObject = require('./is-object');\n\nObject.defineProperty(exports, 'isObject', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isObject).default;\n  }\n});\n\nvar _length = require('./length');\n\nObject.defineProperty(exports, 'length', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_length).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","function clean(s) {\n  return s.replace(/\\n\\r?\\s*/g, '');\n}\n\nmodule.exports = function tsml(sa) {\n  var s = '',\n      i = 0;\n\n  for (; i < arguments.length; i++) {\n    s += clean(sa[i]) + (arguments[i + 1] || '');\n  }\n\n  return s;\n};","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n  // see https://tools.ietf.org/html/rfc1808\n\n  /* jshint ignore:start */\n  (function (root) {\n    /* jshint ignore:end */\n    var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n    var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n    var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n    var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n    var URLToolkit = {\n      // jshint ignore:line\n      // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n      // E.g\n      // With opts.alwaysNormalize = false (default, spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n      // With opts.alwaysNormalize = true (not spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n      buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n        opts = opts || {}; // remove any remaining space and CRLF\n\n        baseURL = baseURL.trim();\n        relativeURL = relativeURL.trim();\n\n        if (!relativeURL) {\n          // 2a) If the embedded URL is entirely empty, it inherits the\n          // entire base URL (i.e., is set equal to the base URL)\n          // and we are done.\n          if (!opts.alwaysNormalize) {\n            return baseURL;\n          }\n\n          var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n          if (!basePartsForNormalise) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n          return URLToolkit.buildURLFromParts(basePartsForNormalise);\n        }\n\n        var relativeParts = URLToolkit.parseURL(relativeURL);\n\n        if (!relativeParts) {\n          throw new Error('Error trying to parse relative URL.');\n        }\n\n        if (relativeParts.scheme) {\n          // 2b) If the embedded URL starts with a scheme name, it is\n          // interpreted as an absolute URL and we are done.\n          if (!opts.alwaysNormalize) {\n            return relativeURL;\n          }\n\n          relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n          return URLToolkit.buildURLFromParts(relativeParts);\n        }\n\n        var baseParts = URLToolkit.parseURL(baseURL);\n\n        if (!baseParts) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n          // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n          // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n          var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n          baseParts.netLoc = pathParts[1];\n          baseParts.path = pathParts[2];\n        }\n\n        if (baseParts.netLoc && !baseParts.path) {\n          baseParts.path = '/';\n        }\n\n        var builtParts = {\n          // 2c) Otherwise, the embedded URL inherits the scheme of\n          // the base URL.\n          scheme: baseParts.scheme,\n          netLoc: relativeParts.netLoc,\n          path: null,\n          params: relativeParts.params,\n          query: relativeParts.query,\n          fragment: relativeParts.fragment\n        };\n\n        if (!relativeParts.netLoc) {\n          // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n          // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n          // (if any) of the base URL.\n          builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n          // path is not relative and we skip to Step 7.\n\n          if (relativeParts.path[0] !== '/') {\n            if (!relativeParts.path) {\n              // 5) If the embedded URL path is empty (and not preceded by a\n              // slash), then the embedded URL inherits the base URL path\n              builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <params> of the base\n              // URL (if any) and\n\n              if (!relativeParts.params) {\n                builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <query> of the base\n                // URL (if any) and we skip to step 7.\n\n                if (!relativeParts.query) {\n                  builtParts.query = baseParts.query;\n                }\n              }\n            } else {\n              // 6) The last segment of the base URL's path (anything\n              // following the rightmost slash \"/\", or the entire path if no\n              // slash is present) is removed and the embedded URL's path is\n              // appended in its place.\n              var baseURLPath = baseParts.path;\n              var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n              builtParts.path = URLToolkit.normalizePath(newPath);\n            }\n          }\n        }\n\n        if (builtParts.path === null) {\n          builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n        }\n\n        return URLToolkit.buildURLFromParts(builtParts);\n      },\n      parseURL: function parseURL(url) {\n        var parts = URL_REGEX.exec(url);\n\n        if (!parts) {\n          return null;\n        }\n\n        return {\n          scheme: parts[1] || '',\n          netLoc: parts[2] || '',\n          path: parts[3] || '',\n          params: parts[4] || '',\n          query: parts[5] || '',\n          fragment: parts[6] || ''\n        };\n      },\n      normalizePath: function normalizePath(path) {\n        // The following operations are\n        // then applied, in order, to the new path:\n        // 6a) All occurrences of \"./\", where \".\" is a complete path\n        // segment, are removed.\n        // 6b) If the path ends with \".\" as a complete path segment,\n        // that \".\" is removed.\n        path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n        // complete path segment not equal to \"..\", are removed.\n        // Removal of these path segments is performed iteratively,\n        // removing the leftmost matching pattern on each iteration,\n        // until no matching pattern remains.\n        // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n        // complete path segment not equal to \"..\", that\n        // \"<segment>/..\" is removed.\n\n        while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n        return path.split('').reverse().join('');\n      },\n      buildURLFromParts: function buildURLFromParts(parts) {\n        return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n      }\n    };\n    /* jshint ignore:start */\n\n    module.exports = URLToolkit;\n  })(commonjsGlobal);\n  /* jshint ignore:end */\n\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\n\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\n\n\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar constructorRegex = /^\\s*class\\b/;\n\nvar isES6ClassFn = function isES6ClassFunction(value) {\n  try {\n    var fnStr = fnToStr.call(value);\n    return constructorRegex.test(fnStr);\n  } catch (e) {\n    return false; // not a function\n  }\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n  try {\n    if (isES6ClassFn(value)) {\n      return false;\n    }\n\n    fnToStr.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (typeof value !== 'function' && typeof value !== 'object') {\n    return false;\n  }\n\n  if (typeof value === 'function' && !value.prototype) {\n    return true;\n  }\n\n  if (hasToStringTag) {\n    return tryFunctionObject(value);\n  }\n\n  if (isES6ClassFn(value)) {\n    return false;\n  }\n\n  var strClass = toStr.call(value);\n  return strClass === fnClass || strClass === genClass;\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar mp4 = require('./mp4-generator.js');\n\nvar frameUtils = require('./frame-utils');\n\nvar audioFrameUtils = require('./audio-frame-utils');\n\nvar trackDecodeInfo = require('./track-decode-info');\n\nvar m2ts = require('../m2ts/m2ts.js');\n\nvar AdtsStream = require('../codecs/adts.js');\n\nvar H264Stream = require('../codecs/h264').H264Stream;\n\nvar AacStream = require('../aac');\n\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData; // constants\n\n\nvar AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\nvar VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\nvar _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n/**\n * Compare two arrays (even typed) for same-ness\n */\n\n\nvar arrayEquals = function arrayEquals(a, b) {\n  var i;\n\n  if (a.length !== b.length) {\n    return false;\n  } // compare the value of each element in the array\n\n\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n  var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\n_AudioSegmentStream = function AudioSegmentStream(track, options) {\n  var adtsFrames = [],\n      sequenceNumber = 0,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n  options = options || {};\n\n  _AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function (data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        track[prop] = data[prop];\n      });\n    } // buffer audio data until end() is called\n\n\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function (earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function () {\n    var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n\n    track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n    adtsFrames = [];\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    trackDecodeInfo.clearDtsInfo(track);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\n_AudioSegmentStream.prototype = new Stream();\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n_VideoSegmentStream = function VideoSegmentStream(track, options) {\n  var sequenceNumber = 0,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n  options = options || {};\n\n  _VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n  this.gopCache_ = [];\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n\n  this.push = function (nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    } // buffer video until flush() is called\n\n\n    nalUnits.push(nalUnit);\n  };\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n\n\n  this.flush = function () {\n    var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n\n      nalUnits.shift();\n    } // Return early if no video data has been observed\n\n\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    } // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n\n\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n        gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    } // Trim gops to align with gopsToAlignWith\n\n\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n\n\n      trackDecodeInfo.clearDtsInfo(track);\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n\n    track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    this.trigger('processedGopsInfo', gops.map(function (gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n    this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    }); // Keep a maximum of 6 GOPs in the cache\n\n    this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n    nalUnits = [];\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n    moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.resetStream_(); // Continue with the flush process now\n\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function () {\n    trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n\n    config = undefined;\n    pps = undefined;\n  }; // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n\n\n  this.getGopForFusion_ = function (nalUnit) {\n    var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n    allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n    nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      } // The distance between the end of the gop and the start of the nalUnit\n\n\n      dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n\n      if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj || nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n\n    return null;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n\n\n  this.alignGopsAtStart_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      } // current gop starts before the current gop we want to align on. so increment gop\n      // index\n\n\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n\n\n  this.alignGopsAtEnd_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function (total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, {\n      byteLength: 0,\n      duration: 0,\n      nalCount: 0\n    });\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function (newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\n_VideoSegmentStream.prototype = new Stream();\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\n\n_CoalesceStream = function CoalesceStream(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n  this.push = function (output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    } // buffer incoming id3 tags until the final flush\n\n\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    } // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n\n\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\n_CoalesceStream.prototype = new Stream();\n\n_CoalesceStream.prototype.flush = function (flushSource) {\n  var offset = 0,\n      event = {\n    captions: [],\n    captionStreams: {},\n    metadata: [],\n    info: {}\n  },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n  initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n  event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n  // and track definitions\n\n  event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n  event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  } // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n\n\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = caption.startPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n\n    caption.startTime /= 90e3;\n    caption.endTime = caption.endPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  } // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n\n\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = id3.pts;\n\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  } // We add this to every single emitted segment even though we only need\n  // it for the first\n\n\n  event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0; // Emit the built segment\n\n  this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\n\n\n_Transmuxer = function Transmuxer(options) {\n  var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n\n  _Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n    pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n    pipeline.metadataStream.on('timestamp', function (frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n    pipeline.aacStream.on('data', function (data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n    pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n\n    pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n    pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n    pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n    pipeline.elementaryStream.on('data', function (data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length; // scan the tracks listed in the metadata\n\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        } // hook up the video segment stream to the first track with h264 data\n\n\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n          pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n            // When video emits timelineStartInfo data after a flush, we forward that\n            // info to the AudioSegmentStream, if it exists, because video timeline\n            // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n          pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          }); // Set up the final part of the video pipeline\n\n          pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n        }\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  }; // hook up the segment streams once track metadata is delivered\n\n\n  this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function (gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  }; // feed incoming data to the front of the parsing pipeline\n\n\n  this.push = function (data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n\n      hasFlushed = false;\n    }\n\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  }; // flush any buffered data\n\n\n  this.flush = function () {\n    hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n    this.transmuxPipeline_.headOfPipeline.flush();\n  }; // Caption data has to be reset when seeking outside buffered range\n\n\n  this.resetCaptions = function () {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n};\n\n_Transmuxer.prototype = new Stream();\nmodule.exports = {\n  Transmuxer: _Transmuxer,\n  VideoSegmentStream: _VideoSegmentStream,\n  AudioSegmentStream: _AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\nvar isLikelyAacData = function isLikelyAacData(data) {\n  if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n    return true;\n  }\n\n  return false;\n};\n\nvar parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n}; // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\nvar percentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n}; // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\n\n\nvar parseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n  var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n  var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n  return highTwo | middle | lowThree;\n};\n\nvar parseType = function parseType(header, byteIndex) {\n  if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n    return 'timed-metadata';\n  } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n    return 'audio';\n  }\n\n  return null;\n};\n\nvar parseSampleRate = function parseSampleRate(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function parseAacTimestamp(packet) {\n  var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n  frameStart = 10;\n\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  } // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n    if (frameSize < 1) {\n      return null;\n    }\n\n    frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            return size;\n          }\n\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};","/**\n * @copyright 2015, Andrey Popp <8mayday@gmail.com>\n *\n * The decorator may be used on classes or methods\n * ```\n * @autobind\n * class FullBound {}\n *\n * class PartBound {\n *   @autobind\n *   method () {}\n * }\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = autobind;\n\nfunction autobind() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1) {\n    return boundClass.apply(undefined, args);\n  } else {\n    return boundMethod.apply(undefined, args);\n  }\n}\n/**\n * Use boundMethod to bind all methods on the target.prototype\n */\n\n\nfunction boundClass(target) {\n  // (Using reflect to get all keys including symbols)\n  var keys = undefined; // Use Reflect if exists\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    keys = Reflect.ownKeys(target.prototype);\n  } else {\n    keys = Object.getOwnPropertyNames(target.prototype); // use symbols if support is provided\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));\n    }\n  }\n\n  keys.forEach(function (key) {\n    // Ignore special case target method\n    if (key === 'constructor') {\n      return;\n    }\n\n    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key); // Only methods need binding\n\n    if (typeof descriptor.value === 'function') {\n      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));\n    }\n  });\n  return target;\n}\n/**\n * Return a descriptor removing the value and returning a getter\n * The getter will return a .bind version of the function\n * and memoize the result against a symbol on the instance\n */\n\n\nfunction boundMethod(target, key, descriptor) {\n  var fn = descriptor.value;\n\n  if (typeof fn !== 'function') {\n    throw new Error('@autobind decorator can only be applied to methods not: ' + typeof fn);\n  } // In IE11 calling Object.defineProperty has a side-effect of evaluating the\n  // getter for the property which is being replaced. This causes infinite\n  // recursion and an \"Out of stack space\" error.\n\n\n  var definingProperty = false;\n  return {\n    configurable: true,\n    get: function get() {\n      if (definingProperty || this === target.prototype || this.hasOwnProperty(key)) {\n        return fn;\n      }\n\n      var boundFn = fn.bind(this);\n      definingProperty = true;\n      Object.defineProperty(this, key, {\n        value: boundFn,\n        configurable: true,\n        writable: true\n      });\n      definingProperty = false;\n      return boundFn;\n    }\n  };\n}\n\nmodule.exports = exports['default'];","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar inspectMp4,\n    _textifyMp,\n    parseType = require('../mp4/probe').parseType,\n    parseMp4Date = function parseMp4Date(seconds) {\n  return new Date(seconds * 1000 - 2082844800000);\n},\n    parseSampleFlags = function parseSampleFlags(flags) {\n  return {\n    isLeading: (flags[0] & 0x0c) >>> 2,\n    dependsOn: flags[0] & 0x03,\n    isDependedOn: (flags[1] & 0xc0) >>> 6,\n    hasRedundancy: (flags[1] & 0x30) >>> 4,\n    paddingValue: (flags[1] & 0x0e) >>> 1,\n    isNonSyncSample: flags[1] & 0x01,\n    degradationPriority: flags[2] << 8 | flags[3]\n  };\n},\n    nalParse = function nalParse(avcStream) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n    }\n  }\n\n  return result;\n},\n    // registry of handlers for individual mp4 box types\nparse = {\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  avc1: function avc1(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      dataReferenceIndex: view.getUint16(6),\n      width: view.getUint16(24),\n      height: view.getUint16(26),\n      horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n      vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n      frameCount: view.getUint16(40),\n      depth: view.getUint16(74),\n      config: inspectMp4(data.subarray(78, data.byteLength))\n    };\n  },\n  avcC: function avcC(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      configurationVersion: data[0],\n      avcProfileIndication: data[1],\n      profileCompatibility: data[2],\n      avcLevelIndication: data[3],\n      lengthSizeMinusOne: data[4] & 0x03,\n      sps: [],\n      pps: []\n    },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i; // iterate past any SPSs\n\n    offset = 6;\n\n    for (i = 0; i < numOfSequenceParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    } // iterate past any PPSs\n\n\n    numOfPictureParameterSets = data[offset];\n    offset++;\n\n    for (i = 0; i < numOfPictureParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    }\n\n    return result;\n  },\n  btrt: function btrt(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      bufferSizeDB: view.getUint32(0),\n      maxBitrate: view.getUint32(4),\n      avgBitrate: view.getUint32(8)\n    };\n  },\n  esds: function esds(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      esId: data[6] << 8 | data[7],\n      streamPriority: data[8] & 0x1f,\n      decoderConfig: {\n        objectProfileIndication: data[11],\n        streamType: data[12] >>> 2 & 0x3f,\n        bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n        maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n        avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n        decoderConfigDescriptor: {\n          tag: data[24],\n          length: data[25],\n          audioObjectType: data[26] >>> 3 & 0x1f,\n          samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n          channelConfiguration: data[27] >>> 3 & 0x0f\n        }\n      }\n    };\n  },\n  ftyp: function ftyp(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      majorBrand: parseType(data.subarray(0, 4)),\n      minorVersion: view.getUint32(4),\n      compatibleBrands: []\n    },\n        i = 8;\n\n    while (i < data.byteLength) {\n      result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n      i += 4;\n    }\n\n    return result;\n  },\n  dinf: function dinf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  dref: function dref(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      dataReferences: inspectMp4(data.subarray(8))\n    };\n  },\n  hdlr: function hdlr(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      handlerType: parseType(data.subarray(8, 12)),\n      name: ''\n    },\n        i = 8; // parse out the name field\n\n    for (i = 24; i < data.byteLength; i++) {\n      if (data[i] === 0x00) {\n        // the name field is null-terminated\n        i++;\n        break;\n      }\n\n      result.name += String.fromCharCode(data[i]);\n    } // decode UTF-8 to javascript's internal representation\n    // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n    result.name = decodeURIComponent(escape(result.name));\n    return result;\n  },\n  mdat: function mdat(data) {\n    return {\n      byteLength: data.byteLength,\n      nals: nalParse(data)\n    };\n  },\n  mdhd: function mdhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      language: ''\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n    // each field is the packed difference between its ASCII value and 0x60\n\n    language = view.getUint16(i);\n    result.language += String.fromCharCode((language >> 10) + 0x60);\n    result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n    result.language += String.fromCharCode((language & 0x1f) + 0x60);\n    return result;\n  },\n  mdia: function mdia(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mfhd: function mfhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n  },\n  minf: function minf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  mp4a: function mp4a(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      // 6 bytes reserved\n      dataReferenceIndex: view.getUint16(6),\n      // 4 + 4 bytes reserved\n      channelcount: view.getUint16(16),\n      samplesize: view.getUint16(18),\n      // 2 bytes pre_defined\n      // 2 bytes reserved\n      samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n    }; // if there are more bytes to process, assume this is an ISO/IEC\n    // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n    if (data.byteLength > 28) {\n      result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n    }\n\n    return result;\n  },\n  moof: function moof(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  moov: function moov(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvex: function mvex(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvhd: function mvhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // convert fixed-point, base 16 back to a number\n\n    result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    i += 2 * 4;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    i += 6 * 4;\n    result.nextTrackId = view.getUint32(i);\n    return result;\n  },\n  pdin: function pdin(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      rate: view.getUint32(4),\n      initialDelay: view.getUint32(8)\n    };\n  },\n  sdtp: function sdtp(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        i;\n\n    for (i = 4; i < data.byteLength; i++) {\n      result.samples.push({\n        dependsOn: (data[i] & 0x30) >> 4,\n        isDependedOn: (data[i] & 0x0c) >> 2,\n        hasRedundancy: data[i] & 0x03\n      });\n    }\n\n    return result;\n  },\n  sidx: function sidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8),\n      earliestPresentationTime: view.getUint32(12),\n      firstOffset: view.getUint32(16)\n    },\n        referenceCount = view.getUint16(22),\n        i;\n\n    for (i = 24; referenceCount; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  },\n  smhd: function smhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      balance: data[4] + data[5] / 256\n    };\n  },\n  stbl: function stbl(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  stco: function stco(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      chunkOffsets: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 4, entryCount--) {\n      result.chunkOffsets.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stsc: function stsc(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleToChunks: []\n    },\n        i;\n\n    for (i = 8; entryCount; i += 12, entryCount--) {\n      result.sampleToChunks.push({\n        firstChunk: view.getUint32(i),\n        samplesPerChunk: view.getUint32(i + 4),\n        sampleDescriptionIndex: view.getUint32(i + 8)\n      });\n    }\n\n    return result;\n  },\n  stsd: function stsd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleDescriptions: inspectMp4(data.subarray(8))\n    };\n  },\n  stsz: function stsz(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleSize: view.getUint32(4),\n      entries: []\n    },\n        i;\n\n    for (i = 12; i < data.byteLength; i += 4) {\n      result.entries.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stts: function stts(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      timeToSamples: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 8, entryCount--) {\n      result.timeToSamples.push({\n        sampleCount: view.getUint32(i),\n        sampleDelta: view.getUint32(i + 4)\n      });\n    }\n\n    return result;\n  },\n  styp: function styp(data) {\n    return parse.ftyp(data);\n  },\n  tfdt: function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime *= Math.pow(2, 32);\n      result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n    }\n\n    return result;\n  },\n  tfhd: function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  },\n  tkhd: function tkhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4;\n    i += 2 * 4;\n    result.layer = view.getUint16(i);\n    i += 2;\n    result.alternateGroup = view.getUint16(i);\n    i += 2; // convert fixed-point, base 16 back to a number\n\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    return result;\n  },\n  traf: function traf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trak: function trak(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trex: function trex(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4),\n      defaultSampleDescriptionIndex: view.getUint32(8),\n      defaultSampleDuration: view.getUint32(12),\n      defaultSampleSize: view.getUint32(16),\n      sampleDependsOn: data[20] & 0x03,\n      sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n      sampleHasRedundancy: (data[21] & 0x30) >> 4,\n      samplePaddingValue: (data[21] & 0x0e) >> 1,\n      sampleIsDifferenceSample: !!(data[21] & 0x01),\n      sampleDegradationPriority: view.getUint16(22)\n    };\n  },\n  trun: function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  },\n  'url ': function url(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n  },\n  vmhd: function vmhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      graphicsmode: view.getUint16(4),\n      opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n    };\n  }\n};\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\n\n\ninspectMp4 = function inspectMp4(data) {\n  var i = 0,\n      result = [],\n      view,\n      size,\n      type,\n      end,\n      box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n\n  for (var z = 0; z < data.length; ++z) {\n    v[z] = data[z];\n  }\n\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n    box = (parse[type] || function (data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n\n    box.size = size;\n    box.type = type; // store this box and move to the next\n\n    result.push(box);\n    i = end;\n  }\n\n  return result;\n};\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\n\n\n_textifyMp = function textifyMp4(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n  return inspectedMp4.map(function (box, index) {\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n    Object.keys(box).filter(function (key) {\n      return key !== 'type' && key !== 'boxes'; // output all the box properties\n    }).map(function (key) {\n      var prefix = indent + '  ' + key + ': ',\n          value = box[key]; // print out raw bytes as hexademical\n\n      if (value instanceof Uint8Array || value instanceof Uint32Array) {\n        var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n          return ' ' + ('00' + _byte.toString(16)).slice(-2);\n        }).join('').match(/.{1,24}/g);\n\n        if (!bytes) {\n          return prefix + '<>';\n        }\n\n        if (bytes.length === 1) {\n          return prefix + '<' + bytes.join('').slice(1) + '>';\n        }\n\n        return prefix + '<\\n' + bytes.map(function (line) {\n          return indent + '  ' + line;\n        }).join('\\n') + '\\n' + indent + '  >';\n      } // stringify generic objects\n\n\n      return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n        if (index === 0) {\n          return line;\n        }\n\n        return indent + '  ' + line;\n      }).join('\\n');\n    }).join('\\n') + ( // recursively textify the child boxes\n    box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: _textifyMp,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar isFunction = require(\"is-function\");\n\nvar parseHeaders = require(\"parse-headers\");\n\nvar xtend = require(\"xtend\");\n\nmodule.exports = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = xtend(options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  if (xhr.responseType === \"document\") {\n    return xhr.responseXML;\n  }\n\n  var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n  if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n    return xhr.responseXML;\n  }\n\n  return null;\n}\n\nfunction noop() {}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function () {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function () {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function (root) {\n  /* jshint ignore:end */\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n  var URLToolkit = {\n    // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n      opts = opts || {}; // remove any remaining space and CRLF\n\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n\n      var baseParts = URLToolkit.parseURL(baseURL);\n\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function parseURL(url) {\n      var parts = URL_REGEX.exec(url);\n\n      if (!parts) {\n        return null;\n      }\n\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function normalizePath(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function buildURLFromParts(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n  /* jshint ignore:start */\n\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = URLToolkit;else if (typeof define === 'function' && define.amd) define([], function () {\n    return URLToolkit;\n  });else if (typeof exports === 'object') exports[\"URLToolkit\"] = URLToolkit;else root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","'use strict';\n\nvar keys = require('object-keys');\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function isFunction(fn) {\n  return typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {\n  var obj = {};\n\n  try {\n    origDefineProperty(obj, 'x', {\n      enumerable: false,\n      value: obj\n    }); // eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\n    for (var _ in obj) {\n      // jscs:ignore disallowUnusedVariables\n      return false;\n    }\n\n    return obj.x === obj;\n  } catch (e) {\n    /* this is IE 8. */\n    return false;\n  }\n};\n\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function defineProperty(object, name, value, predicate) {\n  if (name in object && (!isFunction(predicate) || !predicate())) {\n    return;\n  }\n\n  if (supportsDescriptors) {\n    origDefineProperty(object, name, {\n      configurable: true,\n      enumerable: false,\n      value: value,\n      writable: true\n    });\n  } else {\n    object[name] = value;\n  }\n};\n\nvar defineProperties = function defineProperties(object, map) {\n  var predicates = arguments.length > 2 ? arguments[2] : {};\n  var props = keys(map);\n\n  if (hasSymbols) {\n    props = concat.call(props, Object.getOwnPropertySymbols(map));\n  }\n\n  for (var i = 0; i < props.length; i += 1) {\n    defineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n  }\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\nmodule.exports = defineProperties;","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n  var str = toStr.call(value);\n  var isArgs = str === '[object Arguments]';\n\n  if (!isArgs) {\n    isArgs = str !== '[object Array]' && value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';\n  }\n\n  return isArgs;\n};","'use strict';\n\nvar bind = require('function-bind');\n\nvar ES = require('es-abstract/es5');\n\nvar replace = bind.call(Function.call, String.prototype.replace);\n/* eslint-disable no-control-regex */\n\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n/* eslint-enable no-control-regex */\n\nmodule.exports = function trim() {\n  var S = ES.ToString(ES.CheckObjectCoercible(this));\n  return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};","'use strict';\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor ? function () {\n  return Object.getOwnPropertyDescriptor(arguments, 'callee').get;\n}() : function () {\n  throw new TypeError();\n};\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) {\n  return x.__proto__;\n}; // eslint-disable-line no-proto\n\n\nvar generator; // = function * () {};\n\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\n\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\n\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\nvar INTRINSICS = {\n  '$ %Array%': Array,\n  '$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n  '$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n  '$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n  '$ %ArrayPrototype%': Array.prototype,\n  '$ %ArrayProto_entries%': Array.prototype.entries,\n  '$ %ArrayProto_forEach%': Array.prototype.forEach,\n  '$ %ArrayProto_keys%': Array.prototype.keys,\n  '$ %ArrayProto_values%': Array.prototype.values,\n  '$ %AsyncFromSyncIteratorPrototype%': undefined,\n  '$ %AsyncFunction%': asyncFunction,\n  '$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n  '$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n  '$ %AsyncGeneratorFunction%': asyncGenFunction,\n  '$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n  '$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n  '$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n  '$ %Boolean%': Boolean,\n  '$ %BooleanPrototype%': Boolean.prototype,\n  '$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n  '$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n  '$ %Date%': Date,\n  '$ %DatePrototype%': Date.prototype,\n  '$ %decodeURI%': decodeURI,\n  '$ %decodeURIComponent%': decodeURIComponent,\n  '$ %encodeURI%': encodeURI,\n  '$ %encodeURIComponent%': encodeURIComponent,\n  '$ %Error%': Error,\n  '$ %ErrorPrototype%': Error.prototype,\n  '$ %eval%': eval,\n  // eslint-disable-line no-eval\n  '$ %EvalError%': EvalError,\n  '$ %EvalErrorPrototype%': EvalError.prototype,\n  '$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n  '$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n  '$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n  '$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n  '$ %Function%': Function,\n  '$ %FunctionPrototype%': Function.prototype,\n  '$ %Generator%': generator ? getProto(generator()) : undefined,\n  '$ %GeneratorFunction%': generatorFunction,\n  '$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n  '$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n  '$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n  '$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n  '$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n  '$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n  '$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n  '$ %isFinite%': isFinite,\n  '$ %isNaN%': isNaN,\n  '$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n  '$ %JSON%': JSON,\n  '$ %JSONParse%': JSON.parse,\n  '$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n  '$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n  '$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n  '$ %Math%': Math,\n  '$ %Number%': Number,\n  '$ %NumberPrototype%': Number.prototype,\n  '$ %Object%': Object,\n  '$ %ObjectPrototype%': Object.prototype,\n  '$ %ObjProto_toString%': Object.prototype.toString,\n  '$ %ObjProto_valueOf%': Object.prototype.valueOf,\n  '$ %parseFloat%': parseFloat,\n  '$ %parseInt%': parseInt,\n  '$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n  '$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n  '$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n  '$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n  '$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n  '$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n  '$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n  '$ %RangeError%': RangeError,\n  '$ %RangeErrorPrototype%': RangeError.prototype,\n  '$ %ReferenceError%': ReferenceError,\n  '$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n  '$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n  '$ %RegExp%': RegExp,\n  '$ %RegExpPrototype%': RegExp.prototype,\n  '$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n  '$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n  '$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n  '$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n  '$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n  '$ %String%': String,\n  '$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n  '$ %StringPrototype%': String.prototype,\n  '$ %Symbol%': hasSymbols ? Symbol : undefined,\n  '$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n  '$ %SyntaxError%': SyntaxError,\n  '$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n  '$ %ThrowTypeError%': ThrowTypeError,\n  '$ %TypedArray%': TypedArray,\n  '$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n  '$ %TypeError%': TypeError,\n  '$ %TypeErrorPrototype%': TypeError.prototype,\n  '$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n  '$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n  '$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n  '$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n  '$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n  '$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n  '$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n  '$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n  '$ %URIError%': URIError,\n  '$ %URIErrorPrototype%': URIError.prototype,\n  '$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n  '$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n  '$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n  '$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n    throw new TypeError('\"allowMissing\" argument must be a boolean');\n  }\n\n  var key = '$ ' + name;\n\n  if (!(key in INTRINSICS)) {\n    throw new SyntaxError('intrinsic ' + name + ' does not exist!');\n  } // istanbul ignore if // hopefully this is impossible to test :-)\n\n\n  if (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n    throw new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n  }\n\n  return INTRINSICS[key];\n};","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = \"\\u200B\";\n\nmodule.exports = function getPolyfill() {\n  if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n    return String.prototype.trim;\n  }\n\n  return implementation;\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n(function () {\n  var i;\n  types = {\n    avc1: [],\n    // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [],\n    // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n  AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // entry_count\n  0x00, 0x00, 0x00, 0x0c, // entry_size\n  0x75, 0x72, 0x6c, 0x20, // 'url' type\n  0x00, // version 0\n  0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, // balance, 0 means centered\n  0x00, 0x00 // reserved\n  ]);\n  STCO = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // sample_size\n  0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x01, // flags\n  0x00, 0x00, // graphicsmode\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n  ]);\n})();\n\nbox = function box(type) {\n  var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length; // calculate the total size we need to allocate\n\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4); // copy the payload into the result\n\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n\n  return result;\n};\n\ndinf = function dinf() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function esds(track) {\n  return box(types.esds, new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  // ES_Descriptor\n  0x03, // tag, ES_DescrTag\n  0x19, // length\n  0x00, 0x00, // ES_ID\n  0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n  // DecoderConfigDescriptor\n  0x04, // tag, DecoderConfigDescrTag\n  0x11, // length\n  0x40, // object type\n  0x15, // streamType\n  0x00, 0x06, 0x00, // bufferSizeDB\n  0x00, 0x00, 0xda, 0xc0, // maxBitrate\n  0x00, 0x00, 0xda, 0xc0, // avgBitrate\n  // DecoderSpecificInfo\n  0x05, // tag, DecoderSpecificInfoTag\n  0x02, // length\n  // ISO/IEC 14496-3, AudioSpecificConfig\n  // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n  track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function ftyp() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function hdlr(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\n\nmdat = function mdat(data) {\n  return box(types.mdat, data);\n};\n\nmdhd = function mdhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x02, // creation_time\n  0x00, 0x00, 0x00, 0x03, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n  0x55, 0xc4, // 'und' language (undetermined)\n  0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n\n  if (track.samplerate) {\n    result[12] = track.samplerate >>> 24 & 0xFF;\n    result[13] = track.samplerate >>> 16 & 0xFF;\n    result[14] = track.samplerate >>> 8 & 0xFF;\n    result[15] = track.samplerate & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\n\nmdia = function mdia(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\n\nmfhd = function mfhd(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n  (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n  ]));\n};\n\nminf = function minf(track) {\n  return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n};\n\nmoof = function moof(sequenceNumber, tracks) {\n  var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n\n  return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\n\n\nmoov = function moov(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\n\nmvex = function mvex(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n\n  return box.apply(null, [types.mvex].concat(boxes));\n};\n\nmvhd = function mvhd(duration) {\n  var bytes = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // creation_time\n  0x00, 0x00, 0x00, 0x02, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n  0x00, 0x01, 0x00, 0x00, // 1.0 rate\n  0x01, 0x00, // 1.0 volume\n  0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n  0xff, 0xff, 0xff, 0xff // next_track_ID\n  ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function sdtp(track) {\n  var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n  // write the sample table\n\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n    bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n  }\n\n  return box(types.sdtp, bytes);\n};\n\nstbl = function stbl(track) {\n  return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n};\n\n(function () {\n  var videoSample, audioSample;\n\n  stsd = function stsd(track) {\n    return box(types.stsd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function videoSample(track) {\n    var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i; // assemble the SPSs\n\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    } // assemble the PPSs\n\n\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push(pps[i].byteLength & 0xFF);\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    (track.width & 0xff00) >> 8, track.width & 0xff, // width\n    (track.height & 0xff00) >> 8, track.height & 0xff, // height\n    0x00, 0x48, 0x00, 0x00, // horizresolution\n    0x00, 0x48, 0x00, 0x00, // vertresolution\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // frame_count\n    0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n    0x00, 0x18, // depth = 24\n    0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n    track.profileIdc, // AVCProfileIndication\n    track.profileCompatibility, // profile_compatibility\n    track.levelIdc, // AVCLevelIndication\n    0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n    box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n    0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n    0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n    );\n  };\n\n  audioSample = function audioSample(track) {\n    return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    // AudioSampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n    (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n    // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n})();\n\ntkhd = function tkhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x07, // flags\n  0x00, 0x00, 0x00, 0x00, // creation_time\n  0x00, 0x00, 0x00, 0x00, // modification_time\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x00, // reserved\n  (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, // layer\n  0x00, 0x00, // alternate_group\n  0x01, 0x00, // non-audio track volume\n  0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n  (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n  ]);\n  return box(types.tkhd, result);\n};\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\n\n\ntraf = function traf(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x3a, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x00, 0x00, 0x00 // default_sample_flags\n  ]));\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n  0x00, 0x00, 0x00, // flags\n  // baseMediaDecodeTime\n  upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n\n  dataOffset = 32 + // tfhd\n  20 + // tfdt\n  8 + // traf header\n  16 + // mfhd\n  8 + // moof header\n  8; // mdat header\n  // audio tracks require less metadata\n\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n  } // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n\n\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n  return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n};\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\n\n\ntrak = function trak(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak, tkhd(track), mdia(track));\n};\n\ntrex = function trex(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]); // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function () {\n  var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n  trunHeader = function trunHeader(samples, offset) {\n    var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [0x00, // version 0\n    0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n    (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n    (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function videoTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 16 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n      sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n      (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function audioTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 8 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function trun(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n})();\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function initSegment(tracks) {\n    var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\n\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function CaptionStream() {\n  CaptionStream.prototype.init.call(this);\n  this.captionPackets_ = [];\n  this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n  this.reset(); // forward data and done events from CCs to this CaptionStream\n\n  this.ccStreams_.forEach(function (cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n};\n\nCaptionStream.prototype = new Stream();\n\nCaptionStream.prototype.push = function (event) {\n  var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  } // parse the sei\n\n\n  sei = cea708Parser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  } // parse out the user data payload\n\n\n  userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n  if (!userData) {\n    return;\n  } // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n\n\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n    this.numSameDts_--;\n\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n\n    return;\n  } // parse out CC data packets and save them for later\n\n\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function () {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function (cc) {\n      cc.flush();\n    }, this);\n    return;\n  } // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n\n\n  this.captionPackets_.forEach(function (elem, idx) {\n    elem.presortIndex = idx;\n  }); // sort caption byte-pairs based on their PTS values\n\n  this.captionPackets_.sort(function (a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n\n    return a.pts - b.pts;\n  });\n  this.captionPackets_.forEach(function (packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    } // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n\n  }, this);\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function (cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function () {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function (ccStream) {\n    ccStream.reset();\n  });\n}; // From the CEA-608 spec:\n\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\n\n\nCaptionStream.prototype.dispatchCea608Packet = function (packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1000;\n};\n\nCaptionStream.prototype.setsChannel2Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1800;\n};\n\nCaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n  return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n}; // ----------------------\n// Session to Application\n// ----------------------\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\n\n\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,\n  // á\n  0x5c: 0xe9,\n  // é\n  0x5e: 0xed,\n  // í\n  0x5f: 0xf3,\n  // ó\n  0x60: 0xfa,\n  // ú\n  0x7b: 0xe7,\n  // ç\n  0x7c: 0xf7,\n  // ÷\n  0x7d: 0xd1,\n  // Ñ\n  0x7e: 0xf1,\n  // ñ\n  0x7f: 0x2588,\n  // █\n  0x0130: 0xae,\n  // ®\n  0x0131: 0xb0,\n  // °\n  0x0132: 0xbd,\n  // ½\n  0x0133: 0xbf,\n  // ¿\n  0x0134: 0x2122,\n  // ™\n  0x0135: 0xa2,\n  // ¢\n  0x0136: 0xa3,\n  // £\n  0x0137: 0x266a,\n  // ♪\n  0x0138: 0xe0,\n  // à\n  0x0139: 0xa0,\n  //\n  0x013a: 0xe8,\n  // è\n  0x013b: 0xe2,\n  // â\n  0x013c: 0xea,\n  // ê\n  0x013d: 0xee,\n  // î\n  0x013e: 0xf4,\n  // ô\n  0x013f: 0xfb,\n  // û\n  0x0220: 0xc1,\n  // Á\n  0x0221: 0xc9,\n  // É\n  0x0222: 0xd3,\n  // Ó\n  0x0223: 0xda,\n  // Ú\n  0x0224: 0xdc,\n  // Ü\n  0x0225: 0xfc,\n  // ü\n  0x0226: 0x2018,\n  // ‘\n  0x0227: 0xa1,\n  // ¡\n  0x0228: 0x2a,\n  // *\n  0x0229: 0x27,\n  // '\n  0x022a: 0x2014,\n  // —\n  0x022b: 0xa9,\n  // ©\n  0x022c: 0x2120,\n  // ℠\n  0x022d: 0x2022,\n  // •\n  0x022e: 0x201c,\n  // “\n  0x022f: 0x201d,\n  // ”\n  0x0230: 0xc0,\n  // À\n  0x0231: 0xc2,\n  // Â\n  0x0232: 0xc7,\n  // Ç\n  0x0233: 0xc8,\n  // È\n  0x0234: 0xca,\n  // Ê\n  0x0235: 0xcb,\n  // Ë\n  0x0236: 0xeb,\n  // ë\n  0x0237: 0xce,\n  // Î\n  0x0238: 0xcf,\n  // Ï\n  0x0239: 0xef,\n  // ï\n  0x023a: 0xd4,\n  // Ô\n  0x023b: 0xd9,\n  // Ù\n  0x023c: 0xf9,\n  // ù\n  0x023d: 0xdb,\n  // Û\n  0x023e: 0xab,\n  // «\n  0x023f: 0xbb,\n  // »\n  0x0320: 0xc3,\n  // Ã\n  0x0321: 0xe3,\n  // ã\n  0x0322: 0xcd,\n  // Í\n  0x0323: 0xcc,\n  // Ì\n  0x0324: 0xec,\n  // ì\n  0x0325: 0xd2,\n  // Ò\n  0x0326: 0xf2,\n  // ò\n  0x0327: 0xd5,\n  // Õ\n  0x0328: 0xf5,\n  // õ\n  0x0329: 0x7b,\n  // {\n  0x032a: 0x7d,\n  // }\n  0x032b: 0x5c,\n  // \\\n  0x032c: 0x5e,\n  // ^\n  0x032d: 0x5f,\n  // _\n  0x032e: 0x7c,\n  // |\n  0x032f: 0x7e,\n  // ~\n  0x0330: 0xc4,\n  // Ä\n  0x0331: 0xe4,\n  // ä\n  0x0332: 0xd6,\n  // Ö\n  0x0333: 0xf6,\n  // ö\n  0x0334: 0xdf,\n  // ß\n  0x0335: 0xa5,\n  // ¥\n  0x0336: 0xa4,\n  // ¤\n  0x0337: 0x2502,\n  // │\n  0x0338: 0xc5,\n  // Å\n  0x0339: 0xe5,\n  // å\n  0x033a: 0xd8,\n  // Ø\n  0x033b: 0xf8,\n  // ø\n  0x033c: 0x250c,\n  // ┌\n  0x033d: 0x2510,\n  // ┐\n  0x033e: 0x2514,\n  // └\n  0x033f: 0x2518 // ┘\n\n};\n\nvar getCharFromCode = function getCharFromCode(code) {\n  if (code === null) {\n    return '';\n  }\n\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n}; // the index of the last row in a CEA-608 display buffer\n\n\nvar BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\n\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\n\nvar createDisplayBuffer = function createDisplayBuffer() {\n  var result = [],\n      i = BOTTOM_ROW + 1;\n\n  while (i--) {\n    result.push('');\n  }\n\n  return result;\n};\n\nvar Cea608Stream = function Cea608Stream(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n  this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n  this.setConstants();\n  this.reset();\n\n  this.push = function (packet) {\n    var data, swap, char0, char1, text; // remove the parity bits\n\n    data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    } // Store control codes\n\n\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n      this.flushDisplayed(packet.pts); // flip memory\n\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n      this.startPts_ = packet.pts;\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts; // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      } // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n\n\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      } // Detect offset control codes and adjust cursor\n\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      } // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n\n\n      if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      } // We have a normal character in char0, and possibly one in char1\n\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n    } // finish data processing\n\n  };\n};\n\nCea608Stream.prototype = new Stream(); // Trigger a cue point that captures the current state of the\n// display buffer\n\nCea608Stream.prototype.flushDisplayed = function (pts) {\n  var content = this.displayed_ // remove spaces from the start and end of the string\n  .map(function (row) {\n    try {\n      return row.trim();\n    } catch (e) {\n      // Ordinarily, this shouldn't happen. However, caption\n      // parsing errors should not throw exceptions and\n      // break playback.\n      // eslint-disable-next-line no-console\n      console.error('Skipping malformed caption.');\n      return '';\n    }\n  }) // combine all text rows to display in one cue\n  .join('\\n') // and remove blank rows from the start and end, but not the middle\n  .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n/**\n * Zero out the data, used for startup and on seek\n */\n\n\nCea608Stream.prototype.reset = function () {\n  this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n  this.formatting_ = [];\n};\n/**\n * Sets up control code and related constants for this instance\n */\n\n\nCea608Stream.prototype.setConstants = function () {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_ = 0x10;\n    this.EXT_ = 0x11;\n    this.CONTROL_ = (0x14 | this.field_) << 8;\n    this.OFFSET_ = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_ = 0x18;\n    this.EXT_ = 0x19;\n    this.CONTROL_ = (0x1c | this.field_) << 8;\n    this.OFFSET_ = 0x1f;\n  } // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n\n\n  this.PADDING_ = 0x0000; // Pop-on Mode\n\n  this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n  this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n  this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n  this.BACKSPACE_ = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\n\n\nCea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\n\n\nCea608Stream.prototype.isExtCharacter = function (char0, char1) {\n  return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\n\n\nCea608Stream.prototype.isMidRowCode = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n};\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\n\n\nCea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n  return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n};\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\n\n\nCea608Stream.prototype.isPAC = function (char0, char1) {\n  return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n};\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\n\n\nCea608Stream.prototype.isColorPAC = function (char1) {\n  return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n};\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\n\n\nCea608Stream.prototype.isNormalChar = function (_char) {\n  return _char >= 0x20 && _char <= 0x7f;\n};\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\n\n\nCea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n}; // Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\n\n\nCea608Stream.prototype.addFormatting = function (pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function (text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n}; // Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\n\n\nCea608Stream.prototype.clearFormatting = function (pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n\n  var text = this.formatting_.reverse().reduce(function (text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n}; // Mode Implementations\n\n\nCea608Stream.prototype.popOn = function (pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function () {\n  var i; // clear out inactive rows\n\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  } // shift displayed rows up\n\n\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  } // clear out the bottom row\n\n\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n}; // exports\n\n\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\n\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\n\nvar parseSei = function parseSei(bytes) {\n  var i = 0,\n      result = {\n    payloadType: -1,\n    payloadSize: 0\n  },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    } // Parse payload type\n\n\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n\n    payloadType += bytes[i++]; // Parse payload size\n\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n\n    payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    } // skip the payload and parse the next message\n\n\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n}; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\nvar parseUserData = function parseUserData(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n  if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n    return null;\n  } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n  if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n    return null;\n  } // finally, user_data_type_code should be 0x03 for caption data\n\n\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  } // return the user_data_type_structure and strip the trailing\n  // marker bits\n\n\n  return sei.payload.subarray(8, sei.payload.length - 1);\n}; // see CEA-708-D, section 4.4\n\n\nvar parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n  var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n  if (!(userData[0] & 0x40)) {\n    return results;\n  } // parse out the cc_data_1 and cc_data_2 fields\n\n\n  count = userData[0] & 0x1f;\n\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    }; // capture cc data when cc_valid is 1\n\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n      results.push(data);\n    }\n  }\n\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n  var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n  while (i < length - 2) {\n    if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n      emulationPreventionBytesPositions.push(i + 2);\n      i += 2;\n    } else {\n      i++;\n    }\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (emulationPreventionBytesPositions.length === 0) {\n    return data;\n  } // Create a new array to hold the NAL unit data\n\n\n  newLength = length - emulationPreventionBytesPositions.length;\n  newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === emulationPreventionBytesPositions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      emulationPreventionBytesPositions.shift();\n    }\n\n    newData[i] = data[sourceIndex];\n  }\n\n  return newData;\n}; // exports\n\n\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function handleRollover(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n\n\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += direction * MAX_TS;\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function TimestampRolloverStream(type) {\n  var lastDTS, referenceDTS;\n  TimestampRolloverStream.prototype.init.call(this);\n  this.type_ = type;\n\n  this.push = function (data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n    lastDTS = data.dts;\n    this.trigger('data', data);\n  };\n\n  this.flush = function () {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function () {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n};\n\nTimestampRolloverStream.prototype = new Stream();\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Label;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @ignore\n * @param {Object} props\n * @param {InputRangeClassNames} props.classNames\n * @param {Function} props.formatLabel\n * @param {string} props.type\n */\n\n\nfunction Label(props) {\n  var labelValue = props.formatLabel ? props.formatLabel(props.children, props.type) : props.children;\n  return _react2.default.createElement('span', {\n    className: props.classNames[props.type + 'Label']\n  }, _react2.default.createElement('span', {\n    className: props.classNames.labelContainer\n  }, labelValue));\n}\n/**\n * @type {Object}\n * @property {Function} children\n * @property {Function} classNames\n * @property {Function} formatLabel\n * @property {Function} type\n */\n\n\nLabel.propTypes = {\n  children: _propTypes2.default.node.isRequired,\n  classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n  formatLabel: _propTypes2.default.func,\n  type: _propTypes2.default.string.isRequired\n};\nmodule.exports = exports['default'];","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","module.exports = SafeParseTuple;\n\nfunction SafeParseTuple(obj, reviver) {\n  var json;\n  var error = null;\n\n  try {\n    json = JSON.parse(obj, reviver);\n  } catch (err) {\n    error = err;\n  }\n\n  return [error, json];\n}","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nmodule.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\n\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\n\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\nvar PES_TIMESCALE = 90000,\n    MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\n\nvar parsePsi_ = function parsePsi_(bytes, pmt) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n\n          break;\n\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n\n          break;\n\n        default:\n          break;\n      } // Found the pat and pmt, we can stop walking the segment\n\n\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\n\n\nvar parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n  var endLoop = false; // Start walking from start of segment to get first audio packet\n\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last audio packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\n\n\nvar parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n  var endLoop = false;\n  var currentFrame = {\n    data: [],\n    size: 0\n  }; // Start walking from start of segment to get first video packet\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                    }\n                  }\n\n                  currentFrame.size = 0;\n                }\n              }\n\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last video packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'video';\n              result.video.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\n\n\nvar adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n\n    segmentInfo.audio.forEach(function (info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n\n    segmentInfo.video.forEach(function (info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n/**\n * inspects the aac data stream for start and end time information\n */\n\n\nvar inspectAac_ = function inspectAac_(bytes) {\n  var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n\n        byteIndex += frameSize;\n        break;\n\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n\n      default:\n        byteIndex++;\n        break;\n    }\n\n    if (endLoop) {\n      return null;\n    }\n  }\n\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n  var result = {\n    audio: [{\n      type: 'audio',\n      dts: timestamp,\n      pts: timestamp\n    }, {\n      type: 'audio',\n      dts: timestamp + audioCount * 1024 * audioTimescale,\n      pts: timestamp + audioCount * 1024 * audioTimescale\n    }]\n  };\n  return result;\n};\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\n\n\nvar inspectTs_ = function inspectTs_(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n  var result = {};\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n\n          break;\n\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\n\n\nvar inspect = function inspect(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || !result.audio && !result.video) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inputRange = require('./input-range/input-range');\n\nvar _inputRange2 = _interopRequireDefault(_inputRange);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @ignore\n * @typedef {Object} ClientRect\n * @property {number} height\n * @property {number} left\n * @property {number} top\n * @property {number} width\n */\n\n/**\n * @typedef {Object} InputRangeClassNames\n * @property {string} activeTrack\n * @property {string} disabledInputRange\n * @property {string} inputRange\n * @property {string} labelContainer\n * @property {string} maxLabel\n * @property {string} minLabel\n * @property {string} slider\n * @property {string} sliderContainer\n * @property {string} track\n * @property {string} valueLabel\n */\n\n/**\n * @typedef {Function} LabelFormatter\n * @param {number} value\n * @param {string} type\n * @return {string}\n */\n\n/**\n * @ignore\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n */\n\n/**\n * @typedef {Object} Range\n * @property {number} min - Min value\n * @property {number} max - Max value\n */\n\n\nexports.default = _inputRange2.default;\nmodule.exports = exports['default'];","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\n\nexport { LineStream, ParseStream, Parser };","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\nvar PADDING = void 0;\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n} // pre-define the padding values\n\n\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\nexport { pad, unpad, version as VERSION };","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0; // Compute double and third tables\n\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x; // Compute MixColumns\n\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  } // Compactify. Considerable speedup on Firefox.\n\n\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n\n  return tables;\n};\n\nvar aesTables = null;\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n\n    if (!aesTables) {\n      aesTables = precompute();\n    } // then make a copy of that object for use\n\n\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey]; // schedule encryption keys\n\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1]; // apply sbox\n\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    } // schedule decryption keys\n\n\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0; // key.length === 2 ?\n\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1]; // load up the tables\n\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;\n      b = b2;\n      c = c2;\n    } // Last round.\n\n\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;\n      a = b;\n      b = c;\n      c = d;\n      d = a2;\n    }\n  };\n\n  return AES;\n}();\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * @file async-stream.js\n */\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\n\n\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\n\n\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n  var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0; // iteration variable\n\n  var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n    this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    } // invoke the done() callback when everything is finished\n\n\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  /**\n   * @private\n   */\n\n\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\n\nexport { decrypt, Decrypter, AsyncStream };","/**\n * @license\n * Video.js 7.6.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\nvar version = \"7.6.0\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom =\n/*#__PURE__*/\nObject.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\n\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events =\n/*#__PURE__*/\nObject.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this; // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\nvar browser =\n/*#__PURE__*/\nObject.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url =\n/*#__PURE__*/\nObject.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n\n    event.stopPropagation();\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {String} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n\n\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\n\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n} // on the player when they happen\n\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // These tags will be excluded entirely.\n\n      var excludedTags = ['textarea']; // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\n\n\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n/**\n * @videojs/http-streaming\n * @version 1.10.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n              return ' ' + ('00' + _byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector$$1 = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector$$1.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector$$1.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector$$1.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        if (updatedMaster) {\n          var sidxKey = generateSidxKey(_this8.media().sidx); // the sidx was updated, so the previous mapping was removed\n\n          if (!_this8.sidxMapping_[sidxKey]) {\n            var playlist = _this8.media();\n\n            _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n              handleManifestRedirects: _this8.handleManifestRedirects\n            }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n              if (!newMaster || !sidx) {\n                throw new Error('failed to request sidx on minimumUpdatePeriod');\n              } // update loader's sidxMapping with parsed sidx box\n\n\n              _this8.sidxMapping_[sidxKey].sidx = sidx;\n              _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                _this8.trigger('minimumUpdatePeriod');\n              }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n              _this8.refreshMedia_(_this8.media().uri);\n\n              return;\n            }));\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"321\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.6\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    r = require(\"scheduler\");\n\nfunction ba(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction x(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ba(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : x(\"227\");\n\nfunction ca(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar da = !1,\n    ea = null,\n    fa = !1,\n    ha = null,\n    ia = {\n  onError: function onError(a) {\n    da = !0;\n    ea = a;\n  }\n};\n\nfunction ja(a, b, c, d, e, f, g, h, l) {\n  da = !1;\n  ea = null;\n  ca.apply(ia, arguments);\n}\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ja.apply(this, arguments);\n\n  if (da) {\n    if (da) {\n      var k = ea;\n      da = !1;\n      ea = null;\n    } else x(\"198\"), k = void 0;\n\n    fa || (fa = !0, ha = k);\n  }\n}\n\nvar la = null,\n    ma = {};\n\nfunction na() {\n  if (la) for (var a in ma) {\n    var b = ma[a],\n        c = la.indexOf(a);\n    -1 < c ? void 0 : x(\"96\", a);\n\n    if (!oa[c]) {\n      b.extractEvents ? void 0 : x(\"97\", a);\n      oa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        pa.hasOwnProperty(h) ? x(\"99\", h) : void 0;\n        pa[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && qa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : x(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction qa(a, b, c) {\n  ra[a] ? x(\"100\", a) : void 0;\n  ra[a] = b;\n  sa[a] = b.eventTypes[c].dependencies;\n}\n\nvar oa = [],\n    pa = {},\n    ra = {},\n    sa = {},\n    ta = null,\n    ua = null,\n    va = null;\n\nfunction wa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = va(c);\n  ka(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction xa(a, b) {\n  null == b ? x(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction ya(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar za = null;\n\nfunction Aa(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      wa(a, b[d], c[d]);\n    } else b && wa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ba = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    la ? x(\"101\") : void 0;\n    la = Array.prototype.slice.call(a);\n    na();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x(\"102\", c) : void 0, ma[c] = d, b = !0);\n      }\n    }\n\n    b && na();\n  }\n};\n\nfunction Ca(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ta(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? x(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Da(a) {\n  null !== a && (za = xa(za, a));\n  a = za;\n  za = null;\n  if (a && (ya(a, Aa), za ? x(\"95\") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;\n}\n\nvar Ea = Math.random().toString(36).slice(2),\n    Fa = \"__reactInternalInstance$\" + Ea,\n    Ga = \"__reactEventHandlers$\" + Ea;\n\nfunction Ha(a) {\n  if (a[Fa]) return a[Fa];\n\n  for (; !a[Fa];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Fa];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ia(a) {\n  a = a[Fa];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ja(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  x(\"33\");\n}\n\nfunction Ka(a) {\n  return a[Ga] || null;\n}\n\nfunction La(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Ma(a, b, c) {\n  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);\n}\n\nfunction Na(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = La(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Ma(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Ma(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Oa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));\n}\n\nfunction Pa(a) {\n  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);\n}\n\nfunction Qa(a) {\n  ya(a, Na);\n}\n\nvar Ra = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Sa(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ta = {\n  animationend: Sa(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Sa(\"Animation\", \"AnimationIteration\"),\n  animationstart: Sa(\"Animation\", \"AnimationStart\"),\n  transitionend: Sa(\"Transition\", \"TransitionEnd\")\n},\n    Ua = {},\n    Va = {};\nRa && (Va = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), \"TransitionEvent\" in window || delete Ta.transitionend.transition);\n\nfunction Wa(a) {\n  if (Ua[a]) return Ua[a];\n  if (!Ta[a]) return a;\n  var b = Ta[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Xa = Wa(\"animationend\"),\n    Ya = Wa(\"animationiteration\"),\n    Za = Wa(\"animationstart\"),\n    $a = Wa(\"transitionend\"),\n    ab = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    bb = null,\n    cb = null,\n    db = null;\n\nfunction eb() {\n  if (db) return db;\n  var a,\n      b = cb,\n      c = b.length,\n      d,\n      e = \"value\" in bb ? bb.value : bb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return db = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction fb() {\n  return !0;\n}\n\nfunction gb() {\n  return !1;\n}\n\nfunction y(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;\n  this.isPropagationStopped = gb;\n  return this;\n}\n\nn(y.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);\n  },\n  persist: function persist() {\n    this.isPersistent = fb;\n  },\n  isPersistent: gb,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = gb;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\ny.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\ny.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  hb(c);\n  return c;\n};\n\nhb(y);\n\nfunction ib(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction jb(a) {\n  a instanceof this ? void 0 : x(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction hb(a) {\n  a.eventPool = [];\n  a.getPooled = ib;\n  a.release = jb;\n}\n\nvar kb = y.extend({\n  data: null\n}),\n    lb = y.extend({\n  data: null\n}),\n    mb = [9, 13, 27, 32],\n    nb = Ra && \"CompositionEvent\" in window,\n    ob = null;\nRa && \"documentMode\" in document && (ob = document.documentMode);\nvar pb = Ra && \"TextEvent\" in window && !ob,\n    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),\n    rb = String.fromCharCode(32),\n    sb = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    tb = !1;\n\nfunction ub(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== mb.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction vb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return vb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      tb = !0;\n      return rb;\n\n    case \"textInput\":\n      return a = b.data, a === rb && tb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction yb(a, b) {\n  if (wb) return \"compositionend\" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return qb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar zb = {\n  eventTypes: sb,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (nb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = sb.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = sb.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = sb.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else wb ? ub(a, c) && (e = sb.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = sb.compositionStart);\n    e ? (qb && \"ko\" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = \"value\" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;\n    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Ab = null,\n    Bb = null,\n    Cb = null;\n\nfunction Db(a) {\n  if (a = ua(a)) {\n    \"function\" !== typeof Ab ? x(\"280\") : void 0;\n    var b = ta(a.stateNode);\n    Ab(a.stateNode, a.type, b);\n  }\n}\n\nfunction Eb(a) {\n  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;\n}\n\nfunction Fb() {\n  if (Bb) {\n    var a = Bb,\n        b = Cb;\n    Cb = Bb = null;\n    Db(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Db(b[a]);\n    }\n  }\n}\n\nfunction Gb(a, b) {\n  return a(b);\n}\n\nfunction Hb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Ib() {}\n\nvar Jb = !1;\n\nfunction Kb(a, b) {\n  if (Jb) return a(b);\n  Jb = !0;\n\n  try {\n    return Gb(a, b);\n  } finally {\n    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();\n  }\n}\n\nvar Lb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Mb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Lb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Nb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Ob(a) {\n  if (!Ra) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Pb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Qb(a) {\n  var b = Pb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Rb(a) {\n  a._valueTracker || (a._valueTracker = Qb(a));\n}\n\nfunction Sb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Pb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nTb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Tb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Ub = /^(.*)[\\\\\\/]/,\n    z = \"function\" === typeof Symbol && Symbol.for,\n    Vb = z ? Symbol.for(\"react.element\") : 60103,\n    Wb = z ? Symbol.for(\"react.portal\") : 60106,\n    Xb = z ? Symbol.for(\"react.fragment\") : 60107,\n    Yb = z ? Symbol.for(\"react.strict_mode\") : 60108,\n    Zb = z ? Symbol.for(\"react.profiler\") : 60114,\n    $b = z ? Symbol.for(\"react.provider\") : 60109,\n    ac = z ? Symbol.for(\"react.context\") : 60110,\n    bc = z ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    cc = z ? Symbol.for(\"react.forward_ref\") : 60112,\n    dc = z ? Symbol.for(\"react.suspense\") : 60113,\n    ec = z ? Symbol.for(\"react.memo\") : 60115,\n    fc = z ? Symbol.for(\"react.lazy\") : 60116,\n    gc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction hc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = gc && a[gc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction ic(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case bc:\n      return \"ConcurrentMode\";\n\n    case Xb:\n      return \"Fragment\";\n\n    case Wb:\n      return \"Portal\";\n\n    case Zb:\n      return \"Profiler\";\n\n    case Yb:\n      return \"StrictMode\";\n\n    case dc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ac:\n      return \"Context.Consumer\";\n\n    case $b:\n      return \"Context.Provider\";\n\n    case cc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ec:\n      return ic(a.type);\n\n    case fc:\n      if (a = 1 === a._status ? a._result : null) return ic(a);\n  }\n  return null;\n}\n\nfunction jc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = ic(a.type);\n        c = null;\n        d && (c = ic(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Ub, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar kc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    lc = Object.prototype.hasOwnProperty,\n    mc = {},\n    nc = {};\n\nfunction oc(a) {\n  if (lc.call(nc, a)) return !0;\n  if (lc.call(mc, a)) return !1;\n  if (kc.test(a)) return nc[a] = !0;\n  mc[a] = !0;\n  return !1;\n}\n\nfunction pc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction qc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || pc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction C(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar D = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  D[b] = new C(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  D[a] = new C(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  D[a] = new C(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  D[a] = new C(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  D[a] = new C(a, 5, !1, a.toLowerCase(), null);\n});\nvar rc = /[\\-:]([a-z])/g;\n\nfunction sc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\n[\"tabIndex\", \"crossOrigin\"].forEach(function (a) {\n  D[a] = new C(a, 1, !1, a.toLowerCase(), null);\n});\n\nfunction tc(a, b, c, d) {\n  var e = D.hasOwnProperty(b) ? D[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction uc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction vc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction wc(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = uc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction xc(a, b) {\n  b = b.checked;\n  null != b && tc(a, \"checked\", b, !1);\n}\n\nfunction yc(a, b) {\n  xc(a, b);\n  var c = uc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? zc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && zc(a, b.type, uc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ac(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction zc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Bc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Cc(a, b, c) {\n  a = y.getPooled(Bc.change, a, b, c);\n  a.type = \"change\";\n  Eb(c);\n  Qa(a);\n  return a;\n}\n\nvar Dc = null,\n    Ec = null;\n\nfunction Fc(a) {\n  Da(a);\n}\n\nfunction Gc(a) {\n  var b = Ja(a);\n  if (Sb(b)) return a;\n}\n\nfunction Hc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Ic = !1;\nRa && (Ic = Ob(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Jc() {\n  Dc && (Dc.detachEvent(\"onpropertychange\", Kc), Ec = Dc = null);\n}\n\nfunction Kc(a) {\n  \"value\" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));\n}\n\nfunction Lc(a, b, c) {\n  \"focus\" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent(\"onpropertychange\", Kc)) : \"blur\" === a && Jc();\n}\n\nfunction Mc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Gc(Ec);\n}\n\nfunction Nc(a, b) {\n  if (\"click\" === a) return Gc(b);\n}\n\nfunction Oc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Gc(b);\n}\n\nvar Pc = {\n  eventTypes: Bc,\n  _isInputEventSupported: Ic,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ja(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Nc);\n    if (f && (f = f(a, b))) return Cc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && zc(e, \"number\", e.value);\n  }\n},\n    Qc = y.extend({\n  view: null,\n  detail: null\n}),\n    Rc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Sc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;\n}\n\nfunction Tc() {\n  return Sc;\n}\n\nvar Uc = 0,\n    Vc = 0,\n    Wc = !1,\n    Xc = !1,\n    Yc = Qc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Tc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Uc;\n    Uc = a.screenX;\n    return Wc ? \"mousemove\" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Vc;\n    Vc = a.screenY;\n    return Xc ? \"mousemove\" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);\n  }\n}),\n    Zc = Yc.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    $c = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ad = {\n  eventTypes: $c,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : Ja(f);\n    e = null == b ? e : Ja(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = La(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = La(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = La(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = La(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = La(b);\n        e = La(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = La(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = La(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Oa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Oa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction bd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar cd = Object.prototype.hasOwnProperty;\n\nfunction dd(a, b) {\n  if (bd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction ed(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction fd(a) {\n  2 !== ed(a) ? x(\"188\") : void 0;\n}\n\nfunction gd(a) {\n  var b = a.alternate;\n  if (!b) return b = ed(a), 3 === b ? x(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return fd(e), a;\n        if (g === d) return fd(e), b;\n        g = g.sibling;\n      }\n\n      x(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : x(\"189\");\n      }\n    }\n    c.alternate !== d ? x(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? x(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction hd(a) {\n  a = gd(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar id = y.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    jd = y.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    kd = Qc.extend({\n  relatedTarget: null\n});\n\nfunction ld(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar md = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    nd = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    od = Qc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = md[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = ld(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? nd[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Tc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? ld(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? ld(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    pd = Yc.extend({\n  dataTransfer: null\n}),\n    qd = Qc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Tc\n}),\n    rd = y.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    sd = Yc.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    td = [[\"abort\", \"abort\"], [Xa, \"animationEnd\"], [Ya, \"animationIteration\"], [Za, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [$a, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    ud = {},\n    vd = {};\n\nfunction wd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  ud[a] = b;\n  vd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  wd(a, !0);\n});\ntd.forEach(function (a) {\n  wd(a, !1);\n});\nvar xd = {\n  eventTypes: ud,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = vd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = vd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === ld(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = od;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = kd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = Yc;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = pd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = qd;\n        break;\n\n      case Xa:\n      case Ya:\n      case Za:\n        a = id;\n        break;\n\n      case $a:\n        a = rd;\n        break;\n\n      case \"scroll\":\n        a = Qc;\n        break;\n\n      case \"wheel\":\n        a = sd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = jd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = Zc;\n        break;\n\n      default:\n        a = y;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Qa(b);\n    return b;\n  }\n},\n    yd = xd.isInteractiveTopLevelEventType,\n    zd = [];\n\nfunction Ad(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ha(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Nb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {\n      var l = oa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));\n    }\n\n    Da(g);\n  }\n}\n\nvar Bd = !0;\n\nfunction E(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Ed(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Cd(a, b) {\n  Hb(Dd, a, b);\n}\n\nfunction Dd(a, b) {\n  if (Bd) {\n    var c = Nb(b);\n    c = Ha(c);\n    null === c || \"number\" !== typeof c.tag || 2 === ed(c) || (c = null);\n\n    if (zd.length) {\n      var d = zd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Kb(Ad, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);\n    }\n  }\n}\n\nvar Fd = {},\n    Gd = 0,\n    Hd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Id(a) {\n  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});\n  return Fd[a[Hd]];\n}\n\nfunction Jd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Kd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Ld(a, b) {\n  var c = Kd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Kd(c);\n  }\n}\n\nfunction Md(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Nd() {\n  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      var c = \"string\" === typeof b.contentWindow.location.href;\n    } catch (d) {\n      c = !1;\n    }\n\n    if (c) a = b.contentWindow;else break;\n    b = Jd(a.document);\n  }\n\n  return b;\n}\n\nfunction Od(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nfunction Pd() {\n  var a = Nd();\n\n  if (Od(a)) {\n    if (\"selectionStart\" in a) var b = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      b = (b = a.ownerDocument) && b.defaultView || window;\n      var c = b.getSelection && b.getSelection();\n\n      if (c && 0 !== c.rangeCount) {\n        b = c.anchorNode;\n        var d = c.anchorOffset,\n            e = c.focusNode;\n        c = c.focusOffset;\n\n        try {\n          b.nodeType, e.nodeType;\n        } catch (A) {\n          b = null;\n          break a;\n        }\n\n        var f = 0,\n            g = -1,\n            h = -1,\n            l = 0,\n            k = 0,\n            m = a,\n            p = null;\n\n        b: for (;;) {\n          for (var t;;) {\n            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);\n            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);\n            3 === m.nodeType && (f += m.nodeValue.length);\n            if (null === (t = m.firstChild)) break;\n            p = m;\n            m = t;\n          }\n\n          for (;;) {\n            if (m === a) break b;\n            p === b && ++l === d && (g = f);\n            p === e && ++k === c && (h = f);\n            if (null !== (t = m.nextSibling)) break;\n            m = p;\n            p = m.parentNode;\n          }\n\n          m = t;\n        }\n\n        b = -1 === g || -1 === h ? null : {\n          start: g,\n          end: h\n        };\n      } else b = null;\n    }\n    b = b || {\n      start: 0,\n      end: 0\n    };\n  } else b = null;\n\n  return {\n    focusedElem: a,\n    selectionRange: b\n  };\n}\n\nfunction Qd(a) {\n  var b = Nd(),\n      c = a.focusedElem,\n      d = a.selectionRange;\n\n  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n          f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ld(c, f);\n      var g = Ld(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n\n    for (a = c; a = a.parentNode;) {\n      1 === a.nodeType && b.push({\n        element: a,\n        left: a.scrollLeft,\n        top: a.scrollTop\n      });\n    }\n\n    \"function\" === typeof c.focus && c.focus();\n\n    for (c = 0; c < b.length; c++) {\n      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n    }\n  }\n}\n\nvar Rd = Ra && \"documentMode\" in document && 11 >= document.documentMode,\n    Sd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Td = null,\n    Ud = null,\n    Vd = null,\n    Wd = !1;\n\nfunction Xd(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if (Wd || null == Td || Td !== Jd(c)) return null;\n  c = Td;\n  \"selectionStart\" in c && Od(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = \"select\", a.target = Td, Qa(a), a);\n}\n\nvar Yd = {\n  eventTypes: Sd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Id(e);\n        f = sa.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ja(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Mb(e) || \"true\" === e.contentEditable) Td = e, Ud = b, Vd = null;\n        break;\n\n      case \"blur\":\n        Vd = Ud = Td = null;\n        break;\n\n      case \"mousedown\":\n        Wd = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return Wd = !1, Xd(c, d);\n\n      case \"selectionchange\":\n        if (Rd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return Xd(c, d);\n    }\n\n    return null;\n  }\n};\nBa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nta = Ka;\nua = Ia;\nva = Ja;\nBa.injectEventPluginsByName({\n  SimpleEventPlugin: xd,\n  EnterLeaveEventPlugin: ad,\n  ChangeEventPlugin: Pc,\n  SelectEventPlugin: Yd,\n  BeforeInputEventPlugin: zb\n});\n\nfunction Zd(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction $d(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = Zd(b.children)) a.children = b;\n  return a;\n}\n\nfunction ae(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + uc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction be(a, b) {\n  null != b.dangerouslySetInnerHTML ? x(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ce(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: uc(c)\n  };\n}\n\nfunction de(a, b) {\n  var c = uc(b.value),\n      d = uc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ee(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar fe = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ge(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction he(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ge(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ie = void 0,\n    je = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== fe.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ie = ie || document.createElement(\"div\");\n    ie.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ie.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction ke(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar le = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    me = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(le).forEach(function (a) {\n  me.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    le[b] = le[a];\n  });\n});\n\nfunction ne(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction oe(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = ne(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar pe = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction qe(a, b) {\n  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : x(\"61\")), null != b.style && \"object\" !== typeof b.style ? x(\"62\", \"\") : void 0);\n}\n\nfunction re(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction se(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Id(a);\n  b = sa[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Ed(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Ed(\"focus\", a);\n          Ed(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Ob(e) && Ed(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === ab.indexOf(e) && E(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction te() {}\n\nvar ue = null,\n    ve = null;\n\nfunction we(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction xe(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar ye = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    ze = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ae = r.unstable_scheduleCallback,\n    Be = r.unstable_cancelCallback;\n\nfunction Ce(a, b, c, d, e) {\n  a[Ga] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && xc(a, e);\n  re(c, d);\n  d = re(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? oe(a, h) : \"dangerouslySetInnerHTML\" === g ? je(a, h) : \"children\" === g ? ke(a, h) : tc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      yc(a, e);\n      break;\n\n    case \"textarea\":\n      de(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction De(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ee(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Fe = [],\n    Ge = -1;\n\nfunction F(a) {\n  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);\n}\n\nfunction G(a, b) {\n  Ge++;\n  Fe[Ge] = a.current;\n  a.current = b;\n}\n\nvar He = {},\n    H = {\n  current: He\n},\n    I = {\n  current: !1\n},\n    Ie = He;\n\nfunction Je(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return He;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction J(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ke(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Le(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Me(a, b, c) {\n  H.current !== He ? x(\"168\") : void 0;\n  G(H, b, a);\n  G(I, c, a);\n}\n\nfunction Ne(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : x(\"108\", ic(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Oe(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || He;\n  Ie = H.current;\n  G(H, b, a);\n  G(I, I.current, a);\n  return !0;\n}\n\nfunction Pe(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : x(\"169\");\n  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);\n  G(I, c, a);\n}\n\nvar Qe = null,\n    Re = null;\n\nfunction Se(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Te(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Qe = Se(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Re = Se(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ue(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction K(a, b, c, d) {\n  return new Ue(a, b, c, d);\n}\n\nfunction Ve(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction We(a) {\n  if (\"function\" === typeof a) return Ve(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === cc) return 11;\n    if (a === ec) return 14;\n  }\n\n  return 2;\n}\n\nfunction Xe(a, b) {\n  var c = a.alternate;\n  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction Ye(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ve(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case Xb:\n      return Ze(c.children, e, f, b);\n\n    case bc:\n      return $e(c, e | 3, f, b);\n\n    case Yb:\n      return $e(c, e | 2, f, b);\n\n    case Zb:\n      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;\n\n    case dc:\n      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case $b:\n          g = 10;\n          break a;\n\n        case ac:\n          g = 9;\n          break a;\n\n        case cc:\n          g = 11;\n          break a;\n\n        case ec:\n          g = 14;\n          break a;\n\n        case fc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      x(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = K(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction Ze(a, b, c, d) {\n  a = K(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction $e(a, b, c, d) {\n  a = K(8, a, d, b);\n  b = 0 === (b & 1) ? Yb : bc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction af(a, b, c) {\n  a = K(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction bf(a, b, c) {\n  b = K(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction cf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  df(b, a);\n}\n\nfunction ef(a, b) {\n  a.didError = !1;\n  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {\n    b < a.latestPingedTime && (a.latestPingedTime = 0);\n    var c = a.latestPendingTime;\n    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));\n    c = a.earliestSuspendedTime;\n    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);\n  }\n  df(0, a);\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  df(b, a);\n}\n\nfunction gf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction df(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction L(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction hf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar jf = new aa.Component().refs;\n\nfunction kf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar tf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.tag = rf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = lf();\n    c = mf(c, a);\n    var d = nf(c);\n    d.tag = sf;\n    void 0 !== b && null !== b && (d.callback = b);\n    of();\n    pf(a, d);\n    qf(a, c);\n  }\n};\n\nfunction uf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;\n}\n\nfunction vf(a, b, c) {\n  var d = !1,\n      e = He;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = tf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction wf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && tf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction xf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));\n  f = a.updateQueue;\n  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar zf = Array.isArray;\n\nfunction Af(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? x(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : x(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === jf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? x(\"284\") : void 0;\n    c._owner ? void 0 : x(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Bf(a, b) {\n  \"textarea\" !== a.type && x(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Cf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = Xe(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;\n    d = Ye(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Af(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function p(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = af(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Vb:\n          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;\n\n        case Wb:\n          return b = bf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;\n      Bf(a, b);\n    }\n\n    return null;\n  }\n\n  function t(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Vb:\n          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case Wb:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Bf(a, c);\n    }\n\n    return null;\n  }\n\n  function A(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Vb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case Wb:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Bf(b, d);\n    }\n\n    return null;\n  }\n\n  function v(e, g, h, k) {\n    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var w = t(e, q, h[u], k);\n\n      if (null === w) {\n        null === q && (q = B);\n        break;\n      }\n\n      a && q && null === w.alternate && b(e, q);\n      g = f(w, g, u);\n      null === m ? l = w : m.sibling = w;\n      m = w;\n      q = B;\n    }\n\n    if (u === h.length) return c(e, q), l;\n\n    if (null === q) {\n      for (; u < h.length; u++) {\n        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); u < h.length; u++) {\n      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = hc(h);\n    \"function\" !== typeof l ? x(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? x(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var v = t(e, q, w.value, k);\n\n      if (null === v) {\n        q || (q = B);\n        break;\n      }\n\n      a && q && null === v.alternate && b(e, q);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      q = B;\n    }\n\n    if (w.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !w.done; u++, w = h.next()) {\n        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !w.done; u++, w = h.next()) {\n      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === Xb && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Vb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === Xb ? f.props.children : f.props, h);\n                d.ref = Af(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case Wb:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = bf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);\n    if (zf(f)) return v(a, d, f, h);\n    if (hc(f)) return R(a, d, f, h);\n    l && Bf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, x(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar Df = Cf(!0),\n    Ef = Cf(!1),\n    Ff = {},\n    N = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? x(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  G(Hf, b, a);\n  G(Gf, a, a);\n  G(N, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : he(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);\n  }\n\n  F(N, a);\n  G(N, b, a);\n}\n\nfunction Kf(a) {\n  F(N, a);\n  F(Gf, a);\n  F(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(N.current);\n  var c = he(b, a.type);\n  b !== c && (G(Gf, a, a), G(N, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (F(N, a), F(Gf, a));\n}\n\nvar Nf = 0,\n    Of = 2,\n    Pf = 4,\n    Qf = 8,\n    Rf = 16,\n    Sf = 32,\n    Tf = 64,\n    Uf = 128,\n    Vf = Tb.ReactCurrentDispatcher,\n    Wf = 0,\n    Xf = null,\n    O = null,\n    P = null,\n    Yf = null,\n    Q = null,\n    Zf = null,\n    $f = 0,\n    ag = null,\n    bg = 0,\n    cg = !1,\n    dg = null,\n    eg = 0;\n\nfunction fg() {\n  x(\"321\");\n}\n\nfunction gg(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!bd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction hg(a, b, c, d, e, f) {\n  Wf = f;\n  Xf = b;\n  P = null !== a ? a.memoizedState : null;\n  Vf.current = null === P ? ig : jg;\n  b = c(d, e);\n\n  if (cg) {\n    do {\n      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);\n    } while (cg);\n\n    dg = null;\n    eg = 0;\n  }\n\n  Vf.current = kg;\n  a = Xf;\n  a.memoizedState = Yf;\n  a.expirationTime = $f;\n  a.updateQueue = ag;\n  a.effectTag |= bg;\n  a = null !== O && null !== O.next;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  a ? x(\"300\") : void 0;\n  return b;\n}\n\nfunction lg() {\n  Vf.current = kg;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  cg = !1;\n  dg = null;\n  eg = 0;\n}\n\nfunction mg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === Q ? Yf = Q = a : Q = Q.next = a;\n  return Q;\n}\n\nfunction ng() {\n  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {\n    null === P ? x(\"310\") : void 0;\n    O = P;\n    var a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      queue: O.queue,\n      baseUpdate: O.baseUpdate,\n      next: null\n    };\n    Q = null === Q ? Yf = a : Q.next = a;\n    P = O.next;\n  }\n  return Q;\n}\n\nfunction og(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction pg(a) {\n  var b = ng(),\n      c = b.queue;\n  null === c ? x(\"311\") : void 0;\n  c.lastRenderedReducer = a;\n\n  if (0 < eg) {\n    var d = c.dispatch;\n\n    if (null !== dg) {\n      var e = dg.get(c);\n\n      if (void 0 !== e) {\n        dg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        bd(f, b.memoizedState) || (qg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        c.lastRenderedState = f;\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    bd(f, b.memoizedState) || (qg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.lastRenderedState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction rg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === ag ? (ag = {\n    lastEffect: null\n  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));\n  return a;\n}\n\nfunction sg(a, b, c, d) {\n  var e = mg();\n  bg |= a;\n  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction tg(a, b, c, d) {\n  var e = ng();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && gg(d, g.deps)) {\n      rg(Nf, c, f, d);\n      return;\n    }\n  }\n\n  bg |= a;\n  e.memoizedState = rg(b, c, f, d);\n}\n\nfunction ug(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction vg() {}\n\nfunction wg(a, b, c) {\n  25 > eg ? void 0 : x(\"301\");\n  var d = a.alternate;\n  if (a === Xf || null !== d && d === Xf) {\n    if (cg = !0, a = {\n      expirationTime: Wf,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    of();\n    var e = lf();\n    e = mf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {\n      var l = b.lastRenderedState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (bd(k, l)) return;\n    } catch (m) {} finally {}\n    qf(a, e);\n  }\n}\n\nvar kg = {\n  readContext: M,\n  useCallback: fg,\n  useContext: fg,\n  useEffect: fg,\n  useImperativeHandle: fg,\n  useLayoutEffect: fg,\n  useMemo: fg,\n  useReducer: fg,\n  useRef: fg,\n  useState: fg,\n  useDebugValue: fg\n},\n    ig = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    mg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return sg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return sg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return sg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = mg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = mg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: a,\n      lastRenderedState: b\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = mg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = mg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: og,\n      lastRenderedState: a\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: vg\n},\n    jg = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return tg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return tg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return tg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: pg,\n  useRef: function useRef() {\n    return ng().memoizedState;\n  },\n  useState: function useState(a) {\n    return pg(og, a);\n  },\n  useDebugValue: vg\n},\n    xg = null,\n    yg = null,\n    zg = !1;\n\nfunction Ag(a, b) {\n  var c = K(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Bg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 13:\n      return !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Cg(a) {\n  if (zg) {\n    var b = yg;\n\n    if (b) {\n      var c = b;\n\n      if (!Bg(a, b)) {\n        b = De(c);\n\n        if (!b || !Bg(a, b)) {\n          a.effectTag |= 2;\n          zg = !1;\n          xg = a;\n          return;\n        }\n\n        Ag(xg, c);\n      }\n\n      xg = a;\n      yg = Ee(b);\n    } else a.effectTag |= 2, zg = !1, xg = a;\n  }\n}\n\nfunction Dg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {\n    a = a.return;\n  }\n\n  xg = a;\n}\n\nfunction Eg(a) {\n  if (a !== xg) return !1;\n  if (!zg) return Dg(a), zg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {\n    Ag(a, b), b = De(b);\n  }\n  Dg(a);\n  yg = xg ? De(a.stateNode) : null;\n  return !0;\n}\n\nfunction Fg() {\n  yg = xg = null;\n  zg = !1;\n}\n\nvar Gg = Tb.ReactCurrentOwner,\n    qg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);\n}\n\nfunction Hg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Ig(b, e);\n  d = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Kg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);\n    a = Ye(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);\n  b.effectTag |= 1;\n  a = Xe(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Lg(a, b, c, d, e, f) {\n  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);\n}\n\nfunction Ng(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Mg(a, b, c, d, e) {\n  var f = J(c) ? Ie : H.current;\n  f = Je(b, f);\n  Ig(b, e);\n  c = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Og(a, b, c, d, e) {\n  if (J(c)) {\n    var f = !0;\n    Oe(b);\n  } else f = !1;\n\n  Ig(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));\n    var m = c.getDerivedStateFromProps,\n        p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    p || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);\n    Pg = !1;\n    var t = b.memoizedState;\n    l = g.state = t;\n    var A = b.updateQueue;\n    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);\n    h !== d || t !== l || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Qg(a, b, c, d, f, e);\n}\n\nfunction Qg(a, b, c, d, e, f) {\n  Ng(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);\n  d = b.stateNode;\n  Gg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Pe(b, c, !0);\n  return b.child;\n}\n\nfunction Rg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction Sg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = Ze(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = Ze(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Ef(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Jg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? x(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = Xe(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Tg(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {\n      if (d < c) {\n        qg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Rg(b);\n            Fg();\n            break;\n\n          case 5:\n            Lf(b);\n            break;\n\n          case 1:\n            J(b.type) && Oe(b);\n            break;\n\n          case 4:\n            Jf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            Ug(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return Sg(a, b, c);\n              b = Jg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Jg(a, b, c);\n      }\n    }\n  } else qg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Je(b, H.current);\n      Ig(b, c);\n      e = hg(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        lg();\n\n        if (J(d)) {\n          var f = !0;\n          Oe(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && kf(b, d, g, a);\n        e.updater = tf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        xf(b, d, a, c);\n        b = Qg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = hf(e);\n      b.type = a;\n      e = b.tag = We(a);\n      f = L(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Mg(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Og(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Hg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Kg(null, b, a, L(a.type, f), d, c);\n          break;\n\n        default:\n          x(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);\n\n    case 3:\n      Rg(b);\n      d = b.updateQueue;\n      null === d ? x(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      yf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Fg(), b = Jg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;\n        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Cg(b), null;\n\n    case 13:\n      return Sg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Ug(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = bd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !I.current) {\n              b = Jg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n                  k = c;\n\n                  for (var m = h.return; null !== m;) {\n                    var p = m.alternate;\n                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);\n\n    case 15:\n      return Lg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);\n  }\n\n  x(\"156\");\n}\n\nvar Vg = {\n  current: null\n},\n    Wg = null,\n    Xg = null,\n    Yg = null;\n\nfunction Ug(a, b) {\n  var c = a.type._context;\n  G(Vg, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Zg(a) {\n  var b = Vg.current;\n  F(Vg, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Ig(a, b) {\n  Wg = a;\n  Yg = Xg = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (qg = !0);\n  a.contextDependencies = null;\n}\n\nfunction M(a, b) {\n  if (Yg !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === Xg ? (null === Wg ? x(\"308\") : void 0, Xg = b, Wg.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : Xg = Xg.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar $g = 0,\n    rf = 1,\n    sf = 2,\n    ah = 3,\n    Pg = !1;\n\nfunction bh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction ch(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: $g,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction dh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = bh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));\n\n  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);\n}\n\nfunction eh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction fh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));\n  return b;\n}\n\nfunction gh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case rf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ah:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case $g:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case sf:\n      Pg = !0;\n  }\n\n  return d;\n}\n\nfunction yf(a, b, c, d, e) {\n  Pg = !1;\n  b = fh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var p = l.expirationTime;\n    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction hh(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  ih(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  ih(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction ih(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction jh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: jc(b)\n  };\n}\n\nfunction kh(a) {\n  a.effectTag |= 4;\n}\n\nvar lh = void 0,\n    mh = void 0,\n    nh = void 0,\n    oh = void 0;\n\nlh = function lh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nmh = function mh() {};\n\nnh = function nh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(N.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = vc(g, f);\n        d = vc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = $d(g, f);\n        d = $d(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = be(g, f);\n        d = be(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = te);\n    }\n\n    qe(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && kh(b);\n  }\n};\n\noh = function oh(a, b, c, d) {\n  c !== d && kh(b);\n};\n\nvar ph = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction qh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = jc(c));\n  null !== c && ic(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && ic(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction rh(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    sh(a, c);\n  } else b.current = null;\n}\n\nfunction th(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Nf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction uh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = ne(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction vh(a) {\n  \"function\" === typeof Re && Re(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              sh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      rh(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        sh(a, f);\n      }\n      break;\n\n    case 5:\n      rh(a);\n      break;\n\n    case 4:\n      wh(a);\n  }\n}\n\nfunction xh(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction yh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (xh(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    x(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      x(\"161\");\n  }\n\n  c.effectTag & 16 && (ke(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || xh(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction wh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? x(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag) {\n      if (null !== b.child) {\n        d = b.stateNode.containerInfo;\n        e = !0;\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n    } else if (vh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction zh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      th(Pf, Qf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ce(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? x(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));\n      null !== a && uh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new ph());\n        c.forEach(function (a) {\n          var c = Ah.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      x(\"163\");\n  }\n}\n\nvar Bh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Ch(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Dh(d);\n    qh(a, b);\n  };\n\n  return c;\n}\n\nfunction Eh(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));\n    var c = b.value,\n        e = b.stack;\n    qh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Gh(a) {\n  switch (a.tag) {\n    case 1:\n      J(a.type) && Ke(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 18:\n      return null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Zg(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Hh = Tb.ReactCurrentDispatcher,\n    Ih = Tb.ReactCurrentOwner,\n    Jh = 1073741822,\n    Kh = !1,\n    T = null,\n    Lh = null,\n    U = 0,\n    Mh = -1,\n    Nh = !1,\n    V = null,\n    Oh = !1,\n    Ph = null,\n    Qh = null,\n    Rh = null,\n    Fh = null;\n\nfunction Sh() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ke(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Le(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Zg(b);\n    }\n\n    a = a.return;\n  }\n  Lh = null;\n  U = 0;\n  Mh = -1;\n  Nh = !1;\n  T = null;\n}\n\nfunction Th() {\n  for (; null !== V;) {\n    var a = V.effectTag;\n    a & 16 && ke(V.stateNode, \"\");\n\n    if (a & 128) {\n      var b = V.alternate;\n      null !== b && (b = b.ref, null !== b && (\"function\" === typeof b ? b(null) : b.current = null));\n    }\n\n    switch (a & 14) {\n      case 2:\n        yh(V);\n        V.effectTag &= -3;\n        break;\n\n      case 6:\n        yh(V);\n        V.effectTag &= -3;\n        zh(V.alternate, V);\n        break;\n\n      case 4:\n        zh(V.alternate, V);\n        break;\n\n      case 8:\n        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);\n    }\n\n    V = V.nextEffect;\n  }\n}\n\nfunction Uh() {\n  for (; null !== V;) {\n    if (V.effectTag & 256) a: {\n      var a = V.alternate,\n          b = V;\n\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Of, Nf, b);\n          break a;\n\n        case 1:\n          if (b.effectTag & 256 && null !== a) {\n            var c = a.memoizedProps,\n                d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n          }\n\n          break a;\n\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break a;\n\n        default:\n          x(\"163\");\n      }\n    }\n    V = V.nextEffect;\n  }\n}\n\nfunction Vh(a, b) {\n  for (; null !== V;) {\n    var c = V.effectTag;\n\n    if (c & 36) {\n      var d = V.alternate,\n          e = V,\n          f = b;\n\n      switch (e.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Rf, Sf, e);\n          break;\n\n        case 1:\n          var g = e.stateNode;\n          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {\n            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);\n            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);\n          }\n          d = e.updateQueue;\n          null !== d && hh(e, d, g, f);\n          break;\n\n        case 3:\n          d = e.updateQueue;\n\n          if (null !== d) {\n            g = null;\n            if (null !== e.child) switch (e.child.tag) {\n              case 5:\n                g = e.child.stateNode;\n                break;\n\n              case 1:\n                g = e.child.stateNode;\n            }\n            hh(e, d, g, f);\n          }\n\n          break;\n\n        case 5:\n          f = e.stateNode;\n          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();\n          break;\n\n        case 6:\n          break;\n\n        case 4:\n          break;\n\n        case 12:\n          break;\n\n        case 13:\n          break;\n\n        case 17:\n          break;\n\n        default:\n          x(\"163\");\n      }\n    }\n\n    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, \"function\" === typeof e ? e(f) : e.current = f));\n    c & 512 && (Ph = a);\n    V = V.nextEffect;\n  }\n}\n\nfunction Wh(a, b) {\n  Rh = Qh = Ph = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        th(Uf, Nf, f);\n        th(Nf, Tf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && sh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && Xh(a, c);\n  X || W || Yh(1073741823, !1);\n}\n\nfunction of() {\n  null !== Qh && Be(Qh);\n  null !== Rh && Rh();\n}\n\nfunction Zh(a, b) {\n  Oh = Kh = !0;\n  a.current === b ? x(\"177\") : void 0;\n  var c = a.pendingCommitExpirationTime;\n  0 === c ? x(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  var d = b.expirationTime,\n      e = b.childExpirationTime;\n  ef(a, e > d ? e : d);\n  Ih.current = null;\n  d = void 0;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ue = Bd;\n  ve = Pd();\n  Bd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    var f = void 0;\n\n    try {\n      Uh();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Th();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  Qd(ve);\n  ve = null;\n  Bd = !!ue;\n  ue = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Vh(a, c);\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  if (null !== d && null !== Ph) {\n    var g = Wh.bind(null, a, d);\n    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {\n      return Ae(g);\n    });\n    Rh = g;\n  }\n\n  Kh = Oh = !1;\n  \"function\" === typeof Qe && Qe(b.stateNode);\n  c = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > c ? b : c;\n  0 === b && (Fh = null);\n  $h(a, b);\n}\n\nfunction ai(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            J(b.type) && Ke(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Le(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;\n            mh(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = If(N.current);\n\n              if (Eg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    p = h;\n                e[Fa] = g;\n                e[Ga] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < ab.length; k++) {\n                      E(ab[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    E(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", e);\n                    E(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", e);\n                    E(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    wc(e, m);\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(e, m), E(\"invalid\", e), se(p, \"onChange\");\n                }\n\n                qe(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Rb(e);\n                    Ac(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Rb(e);\n                    ee(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = te);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && kh(b);\n              } else {\n                m = b;\n                p = f;\n                e = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === fe.html && (l = ge(p));\n                l === fe.html ? \"script\" === p ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof e.is ? k = k.createElement(p, {\n                  is: e.is\n                }) : (k = k.createElement(p), \"select\" === p && (p = k, e.multiple ? p.multiple = !0 : e.size && (p.size = e.size))) : k = k.createElementNS(l, p);\n                e = k;\n                e[Fa] = m;\n                e[Ga] = g;\n                lh(e, b, !1, !1);\n                p = e;\n                k = f;\n                m = g;\n                var t = h,\n                    A = re(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < ab.length; h++) {\n                      E(ab[h], p);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    E(\"error\", p);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", p);\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", p);\n                    E(\"submit\", p);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", p);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    wc(p, m);\n                    h = vc(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = $d(p, m);\n                    break;\n\n                  case \"select\":\n                    p._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(p, m);\n                    h = be(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                qe(k, h);\n                l = void 0;\n                var v = k,\n                    R = p,\n                    u = h;\n\n                for (l in u) {\n                  if (u.hasOwnProperty(l)) {\n                    var q = u[l];\n                    \"style\" === l ? oe(R, q) : \"dangerouslySetInnerHTML\" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : \"children\" === l ? \"string\" === typeof q ? (\"textarea\" !== v || \"\" !== q) && ke(R, q) : \"number\" === typeof q && ke(R, \"\" + q) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Rb(p);\n                    Ac(p, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Rb(p);\n                    ee(p, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && p.setAttribute(\"value\", \"\" + uc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = p;\n                    h.multiple = !!m.multiple;\n                    p = m.value;\n                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (p.onclick = te);\n                }\n\n                (g = we(f, g)) && kh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? x(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? x(\"166\") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            mh(b);\n            break;\n\n          case 10:\n            Zg(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            J(b.type) && Ke(b);\n            break;\n\n          case 18:\n            break;\n\n          default:\n            x(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Gh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction bi(a) {\n  var b = Tg(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = ai(a));\n  Ih.current = null;\n  return b;\n}\n\nfunction ci(a, b) {\n  Kh ? x(\"243\") : void 0;\n  of();\n  Kh = !0;\n  var c = Hh.current;\n  Hh.current = kg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !di();) {\n        T = bi(T);\n      } else for (; null !== T;) {\n        T = bi(T);\n      }\n    } catch (u) {\n      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {\n        null === T ? x(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Dh(u);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = u;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var p = m;\n              m = l;\n              var t = -1,\n                  A = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var v = m.alternate;\n\n                  if (null !== v && (v = v.memoizedState, null !== v)) {\n                    A = 10 * (1073741822 - v.timedOutAt);\n                    break;\n                  }\n\n                  v = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (v) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h;\n                  l = g;\n                  var R = k.pingCache;\n                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));\n                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));\n                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);\n                  0 <= h && Mh < h && (Mh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((ic(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + jc(k));\n            }\n\n            Nh = !0;\n            m = jh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Ch(h, m, g);\n                  eh(h, g);\n                  break a;\n\n                case 1:\n                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof A.getDerivedStateFromError || null !== k && \"function\" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Eh(h, t, g);\n                    eh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = ai(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Kh = !1;\n  Hh.current = c;\n  Yg = Xg = Wg = null;\n  lg();\n  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? x(\"281\") : void 0;\n    Lh = null;\n\n    if (Nh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        ff(a, d);\n        fi(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        fi(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction sh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {\n          a = jh(b, a);\n          a = Eh(c, a, 1073741823);\n          pf(c, a);\n          qf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = jh(b, a);\n        a = Ch(c, a, 1073741823);\n        pf(c, a);\n        qf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));\n}\n\nfunction mf(a, b) {\n  var c = r.unstable_getCurrentPriorityLevel(),\n      d = void 0;\n  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {\n    switch (c) {\n      case r.unstable_ImmediatePriority:\n        d = 1073741823;\n        break;\n\n      case r.unstable_UserBlockingPriority:\n        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);\n        break;\n\n      case r.unstable_NormalPriority:\n        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);\n        break;\n\n      case r.unstable_LowPriority:\n      case r.unstable_IdlePriority:\n        d = 1;\n        break;\n\n      default:\n        x(\"313\");\n    }\n\n    null !== Lh && d === U && --d;\n  }\n  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);\n  return d;\n}\n\nfunction ei(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    df(c, a);\n    c = a.expirationTime;\n    0 !== c && Xh(a, c);\n  }\n}\n\nfunction Ah(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = lf();\n  b = mf(b, a);\n  a = hi(a, b);\n  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));\n}\n\nfunction hi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction qf(a, b) {\n  a = hi(a, b);\n  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x(\"185\")));\n}\n\nfunction ki(a, b, c, d, e) {\n  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    return a(b, c, d, e);\n  });\n}\n\nvar li = null,\n    Y = null,\n    mi = 0,\n    ni = void 0,\n    W = !1,\n    oi = null,\n    Z = 0,\n    gi = 0,\n    pi = !1,\n    qi = null,\n    X = !1,\n    ri = !1,\n    si = null,\n    ti = r.unstable_now(),\n    ui = 1073741822 - (ti / 10 | 0),\n    vi = ui,\n    ji = 50,\n    ii = 0,\n    wi = null;\n\nfunction xi() {\n  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);\n}\n\nfunction yi(a, b) {\n  if (0 !== mi) {\n    if (b < mi) return;\n    null !== ni && r.unstable_cancelCallback(ni);\n  }\n\n  mi = b;\n  a = r.unstable_now() - ti;\n  ni = r.unstable_scheduleCallback(zi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction fi(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Ai(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  xi();\n  vi = ui;\n  Bi(a, c);\n}\n\nfunction $h(a, b) {\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction lf() {\n  if (W) return vi;\n  Ci();\n  if (0 === Z || 1 === Z) xi(), vi = ui;\n  return vi;\n}\n\nfunction Xh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));\n}\n\nfunction Ci() {\n  var a = 0,\n      b = null;\n  if (null !== Y) for (var c = Y, d = li; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === Y ? x(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        li = Y = d.nextScheduledRoot = null;\n        break;\n      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {\n        Y = c;\n        Y.nextScheduledRoot = li;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === Y) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  oi = b;\n  Z = a;\n}\n\nvar Ei = !1;\n\nfunction di() {\n  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;\n}\n\nfunction zi() {\n  try {\n    if (!di() && null !== li) {\n      xi();\n      var a = li;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);\n        a = a.nextScheduledRoot;\n      } while (a !== li);\n    }\n\n    Yh(0, !0);\n  } finally {\n    Ei = !1;\n  }\n}\n\nfunction Yh(a, b) {\n  Ci();\n  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {\n    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;\n  } else for (; null !== oi && 0 !== Z && a <= Z;) {\n    Di(oi, Z, !1), Ci();\n  }\n  b && (mi = 0, ni = null);\n  0 !== Z && yi(oi, Z);\n  ii = 0;\n  wi = null;\n  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      pi || (pi = !0, qi = d);\n    }\n  }\n  if (pi) throw a = qi, qi = null, pi = !1, a;\n}\n\nfunction Bi(a, b) {\n  W ? x(\"253\") : void 0;\n  oi = a;\n  Z = b;\n  Di(a, b, !1);\n  Yh(1073741823, !1);\n}\n\nfunction Di(a, b, c) {\n  W ? x(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));\n\n  W = !1;\n}\n\nfunction Fi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === wi ? ii++ : (wi = a, ii = 0);\n  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    Zh(a, b);\n  });\n}\n\nfunction Dh(a) {\n  null === oi ? x(\"246\") : void 0;\n  oi.expirationTime = 0;\n  pi || (pi = !0, qi = a);\n}\n\nfunction Gi(a, b) {\n  var c = X;\n  X = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (X = c) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Hi(a, b) {\n  if (X && !ri) {\n    ri = !0;\n\n    try {\n      return a(b);\n    } finally {\n      ri = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ii(a, b, c) {\n  X || W || 0 === gi || (Yh(gi, !1), gi = 0);\n  var d = X;\n  X = !0;\n\n  try {\n    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {\n      return a(b, c);\n    });\n  } finally {\n    (X = d) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Ji(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === ed(c) && 1 === c.tag ? void 0 : x(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (J(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      x(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (J(h)) {\n        c = Ne(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = He;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  of();\n  pf(f, e);\n  qf(f, d);\n  return d;\n}\n\nfunction Ki(a, b, c, d) {\n  var e = b.current,\n      f = lf();\n  e = mf(f, e);\n  return Ji(a, b, c, e, d);\n}\n\nfunction Li(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Mi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: Wb,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nAb = function Ab(a, b, c) {\n  switch (b) {\n    case \"input\":\n      yc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ka(d);\n            e ? void 0 : x(\"90\");\n            Sb(d);\n            yc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      de(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ae(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Ni(a) {\n  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);\n  b >= Jh && (b = Jh - 1);\n  this._expirationTime = Jh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nNi.prototype.render = function (a) {\n  this._defer ? void 0 : x(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Oi();\n  Ji(a, b, null, c, d._onCommit);\n  return d;\n};\n\nNi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nNi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : x(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? x(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Bi(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nNi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Oi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nOi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nOi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Pi(a, b, c) {\n  b = K(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nPi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Oi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ki(a, c, null, d._onCommit);\n  return d;\n};\n\nPi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Oi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ki(null, b, null, c._onCommit);\n  return c;\n};\n\nPi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Oi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ki(b, d, a, e._onCommit);\n  return e;\n};\n\nPi.prototype.createBatch = function () {\n  var a = new Ni(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Qi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nGb = Gi;\nHb = Ii;\n\nIb = function Ib() {\n  W || 0 === gi || (Yh(gi, !1), gi = 0);\n};\n\nfunction Ri(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Pi(a, !1, b);\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = Ri(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Hi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Li(f._internalRoot);\n}\n\nfunction Ti(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Qi(b) ? void 0 : x(\"200\");\n  return Mi(a, b, null, c);\n}\n\nvar Vi = {\n  createPortal: Ti,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? x(\"188\") : x(\"268\", Object.keys(a)));\n    a = hd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Qi(c) ? void 0 : x(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? x(\"38\") : void 0;\n    return Si(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Qi(a) ? void 0 : x(\"40\");\n    return a._reactRootContainer ? (Hi(function () {\n      Si(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return Ti.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Gi,\n  unstable_interactiveUpdates: Ii,\n  flushSync: function flushSync(a, b) {\n    W ? x(\"187\") : void 0;\n    var c = X;\n    X = !0;\n\n    try {\n      return ki(a, b);\n    } finally {\n      X = c, Yh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: Ui,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = X;\n    X = !0;\n\n    try {\n      ki(a);\n    } finally {\n      (X = b) || W || Yh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {\n      ya(a, Pa);\n    }, Eb, Fb, Dd, Da]\n  }\n};\n\nfunction Ui(a, b) {\n  Qi(a) ? void 0 : x(\"299\", \"unstable_createRoot\");\n  return new Pi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Te(n({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Tb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = hd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ha,\n  bundleType: 0,\n  version: \"16.8.6\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar Wi = {\n  default: Vi\n},\n    Xi = Wi && Vi || Wi;\nmodule.exports = Xi.default || Xi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar d = null,\n    e = !1,\n    g = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = d.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = d,\n      b = d.next;\n  if (d === b) d = null;else {\n    var c = d.previous;\n    d = c.next = b;\n    b.previous = c;\n  }\n  a.next = a.previous = null;\n  c = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var f = g,\n      Q = l;\n  g = a;\n  l = b;\n\n  try {\n    var h = c();\n  } finally {\n    g = f, l = Q;\n  }\n\n  if (\"function\" === typeof h) if (h = {\n    callback: h,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === d) d = h.next = h.previous = h;else {\n    c = null;\n    a = d;\n\n    do {\n      if (a.expirationTime >= b) {\n        c = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== d);\n\n    null === c ? c = d : c === d && (d = h, p());\n    b = c.previous;\n    b.next = c.previous = h;\n    h.next = c;\n    h.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== d && 1 === d.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== d && 1 === d.priorityLevel);\n    } finally {\n      m = !1, null !== d ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = e;\n  e = a;\n\n  try {\n    if (a) for (; null !== d;) {\n      var c = exports.unstable_now();\n\n      if (d.expirationTime <= c) {\n        do {\n          u();\n        } while (null !== d && d.expirationTime <= c);\n      } else break;\n    } else if (null !== d) {\n      do {\n        u();\n      } while (null !== d && !w());\n    }\n  } finally {\n    m = !1, e = b, null !== d ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var c = exports.unstable_now(),\n        f = !1;\n    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(f);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var c = g,\n      f = k;\n  g = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_next = function (a) {\n  switch (g) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n\n    default:\n      b = g;\n  }\n\n  var c = g,\n      f = k;\n  g = b;\n  k = exports.unstable_now();\n\n  try {\n    return a();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var c = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = c + b.timeout;else switch (g) {\n    case 1:\n      b = c + -1;\n      break;\n\n    case 2:\n      b = c + 250;\n      break;\n\n    case 5:\n      b = c + 1073741823;\n      break;\n\n    case 4:\n      b = c + 1E4;\n      break;\n\n    default:\n      b = c + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: g,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === d) d = a.next = a.previous = a, p();else {\n    c = null;\n    var f = d;\n\n    do {\n      if (f.expirationTime > b) {\n        c = f;\n        break;\n      }\n\n      f = f.next;\n    } while (f !== d);\n\n    null === c ? c = d : c === d && (d = a, p());\n    b = c.previous;\n    b.next = c.previous = a;\n    a.next = c;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) d = null;else {\n      a === d && (d = b);\n      var c = a.previous;\n      c.next = b;\n      b.previous = c;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = g;\n  return function () {\n    var c = g,\n        f = k;\n    g = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      g = c, k = f, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return g;\n};\n\nexports.unstable_shouldYield = function () {\n  return !e && (null !== d && d.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== d && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return d;\n};","var win;\n\nif (typeof window !== \"undefined\") {\n  win = window;\n} else if (typeof global !== \"undefined\") {\n  win = global;\n} else if (typeof self !== \"undefined\") {\n  win = self;\n} else {\n  win = {};\n}\n\nmodule.exports = win;","module.exports = isFunction;\nvar toString = Object.prototype.toString;\n\nfunction isFunction(fn) {\n  var string = toString.call(fn);\n  return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n  fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n}\n\n;","var trim = require('string.prototype.trim'),\n    forEach = require('for-each'),\n    isArray = function isArray(arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nmodule.exports = function (headers) {\n  if (!headers) return {};\n  var result = {};\n  forEach(trim(headers).split('\\n'), function (row) {\n    var index = row.indexOf(':'),\n        key = trim(row.slice(0, index)).toLowerCase(),\n        value = trim(row.slice(index + 1));\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};","'use strict';\n\nvar bind = require('function-bind');\n\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\n\nvar getPolyfill = require('./polyfill');\n\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\ndefine(boundTrim, {\n  getPolyfill: getPolyfill,\n  implementation: implementation,\n  shim: shim\n});\nmodule.exports = boundTrim;","'use strict';\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n  var target = this;\n\n  if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + target);\n  }\n\n  var args = slice.call(arguments, 1);\n  var bound;\n\n  var binder = function binder() {\n    if (this instanceof bound) {\n      var result = target.apply(this, args.concat(slice.call(arguments)));\n\n      if (Object(result) === result) {\n        return result;\n      }\n\n      return this;\n    } else {\n      return target.apply(that, args.concat(slice.call(arguments)));\n    }\n  };\n\n  var boundLength = Math.max(0, target.length - args.length);\n  var boundArgs = [];\n\n  for (var i = 0; i < boundLength; i++) {\n    boundArgs.push('$' + i);\n  }\n\n  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n  if (target.prototype) {\n    var Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    bound.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return bound;\n};","'use strict';\n\nvar slice = Array.prototype.slice;\n\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) {\n  return origKeys(o);\n} : require('./implementation');\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n  if (Object.keys) {\n    var keysWorksWithArguments = function () {\n      // Safari 5.0 bug\n      var args = Object.keys(arguments);\n      return args && args.length === arguments.length;\n    }(1, 2);\n\n    if (!keysWorksWithArguments) {\n      Object.keys = function keys(object) {\n        // eslint-disable-line func-name-matching\n        if (isArgs(object)) {\n          return originalKeys(slice.call(object));\n        }\n\n        return originalKeys(object);\n      };\n    }\n  } else {\n    Object.keys = keysShim;\n  }\n\n  return Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;","'use strict';\n\nvar keysShim;\n\nif (!Object.keys) {\n  // modified from https://github.com/es-shims/es5-shim\n  var has = Object.prototype.hasOwnProperty;\n  var toStr = Object.prototype.toString;\n\n  var isArgs = require('./isArguments'); // eslint-disable-line global-require\n\n\n  var isEnumerable = Object.prototype.propertyIsEnumerable;\n  var hasDontEnumBug = !isEnumerable.call({\n    toString: null\n  }, 'toString');\n  var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n  var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n\n  var equalsConstructorPrototype = function equalsConstructorPrototype(o) {\n    var ctor = o.constructor;\n    return ctor && ctor.prototype === o;\n  };\n\n  var excludedKeys = {\n    $applicationCache: true,\n    $console: true,\n    $external: true,\n    $frame: true,\n    $frameElement: true,\n    $frames: true,\n    $innerHeight: true,\n    $innerWidth: true,\n    $onmozfullscreenchange: true,\n    $onmozfullscreenerror: true,\n    $outerHeight: true,\n    $outerWidth: true,\n    $pageXOffset: true,\n    $pageYOffset: true,\n    $parent: true,\n    $scrollLeft: true,\n    $scrollTop: true,\n    $scrollX: true,\n    $scrollY: true,\n    $self: true,\n    $webkitIndexedDB: true,\n    $webkitStorageInfo: true,\n    $window: true\n  };\n\n  var hasAutomationEqualityBug = function () {\n    /* global window */\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    for (var k in window) {\n      try {\n        if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n          try {\n            equalsConstructorPrototype(window[k]);\n          } catch (e) {\n            return true;\n          }\n        }\n      } catch (e) {\n        return true;\n      }\n    }\n\n    return false;\n  }();\n\n  var equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {\n    /* global window */\n    if (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n      return equalsConstructorPrototype(o);\n    }\n\n    try {\n      return equalsConstructorPrototype(o);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  keysShim = function keys(object) {\n    var isObject = object !== null && typeof object === 'object';\n    var isFunction = toStr.call(object) === '[object Function]';\n    var isArguments = isArgs(object);\n    var isString = isObject && toStr.call(object) === '[object String]';\n    var theKeys = [];\n\n    if (!isObject && !isFunction && !isArguments) {\n      throw new TypeError('Object.keys called on a non-object');\n    }\n\n    var skipProto = hasProtoEnumBug && isFunction;\n\n    if (isString && object.length > 0 && !has.call(object, 0)) {\n      for (var i = 0; i < object.length; ++i) {\n        theKeys.push(String(i));\n      }\n    }\n\n    if (isArguments && object.length > 0) {\n      for (var j = 0; j < object.length; ++j) {\n        theKeys.push(String(j));\n      }\n    } else {\n      for (var name in object) {\n        if (!(skipProto && name === 'prototype') && has.call(object, name)) {\n          theKeys.push(String(name));\n        }\n      }\n    }\n\n    if (hasDontEnumBug) {\n      var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n      for (var k = 0; k < dontEnums.length; ++k) {\n        if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n          theKeys.push(dontEnums[k]);\n        }\n      }\n    }\n\n    return theKeys;\n  };\n}\n\nmodule.exports = keysShim;","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\n\nvar $isNaN = require('./helpers/isNaN');\n\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\n\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\n\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has'); // https://es5.github.io/#x9\n\n\nvar ES5 = {\n  ToPrimitive: toPrimitive,\n  ToBoolean: function ToBoolean(value) {\n    return !!value;\n  },\n  ToNumber: function ToNumber(value) {\n    return +value; // eslint-disable-line no-implicit-coercion\n  },\n  ToInteger: function ToInteger(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number)) {\n      return 0;\n    }\n\n    if (number === 0 || !$isFinite(number)) {\n      return number;\n    }\n\n    return sign(number) * Math.floor(Math.abs(number));\n  },\n  ToInt32: function ToInt32(x) {\n    return this.ToNumber(x) >> 0;\n  },\n  ToUint32: function ToUint32(x) {\n    return this.ToNumber(x) >>> 0;\n  },\n  ToUint16: function ToUint16(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n      return 0;\n    }\n\n    var posInt = sign(number) * Math.floor(Math.abs(number));\n    return mod(posInt, 0x10000);\n  },\n  ToString: function ToString(value) {\n    return $String(value);\n  },\n  ToObject: function ToObject(value) {\n    this.CheckObjectCoercible(value);\n    return $Object(value);\n  },\n  CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n    /* jshint eqnull:true */\n    if (value == null) {\n      throw new $TypeError(optMessage || 'Cannot call method on ' + value);\n    }\n\n    return value;\n  },\n  IsCallable: IsCallable,\n  SameValue: function SameValue(x, y) {\n    if (x === y) {\n      // 0 === -0, but they are not identical.\n      if (x === 0) {\n        return 1 / x === 1 / y;\n      }\n\n      return true;\n    }\n\n    return $isNaN(x) && $isNaN(y);\n  },\n  // https://www.ecma-international.org/ecma-262/5.1/#sec-8\n  Type: function Type(x) {\n    if (x === null) {\n      return 'Null';\n    }\n\n    if (typeof x === 'undefined') {\n      return 'Undefined';\n    }\n\n    if (typeof x === 'function' || typeof x === 'object') {\n      return 'Object';\n    }\n\n    if (typeof x === 'number') {\n      return 'Number';\n    }\n\n    if (typeof x === 'boolean') {\n      return 'Boolean';\n    }\n\n    if (typeof x === 'string') {\n      return 'String';\n    }\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n    if (this.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n  IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n  IsDataDescriptor: function IsDataDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n  IsGenericDescriptor: function IsGenericDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n      return true;\n    }\n\n    return false;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n  FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return Desc;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (this.IsDataDescriptor(Desc)) {\n      return {\n        value: Desc['[[Value]]'],\n        writable: !!Desc['[[Writable]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else if (this.IsAccessorDescriptor(Desc)) {\n      return {\n        get: Desc['[[Get]]'],\n        set: Desc['[[Set]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else {\n      throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n    }\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n  ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n    if (this.Type(Obj) !== 'Object') {\n      throw new $TypeError('ToPropertyDescriptor requires an object');\n    }\n\n    var desc = {};\n\n    if (has(Obj, 'enumerable')) {\n      desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n    }\n\n    if (has(Obj, 'configurable')) {\n      desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n    }\n\n    if (has(Obj, 'value')) {\n      desc['[[Value]]'] = Obj.value;\n    }\n\n    if (has(Obj, 'writable')) {\n      desc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n    }\n\n    if (has(Obj, 'get')) {\n      var getter = Obj.get;\n\n      if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n        throw new TypeError('getter must be a function');\n      }\n\n      desc['[[Get]]'] = getter;\n    }\n\n    if (has(Obj, 'set')) {\n      var setter = Obj.set;\n\n      if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n        throw new $TypeError('setter must be a function');\n      }\n\n      desc['[[Set]]'] = setter;\n    }\n\n    if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n      throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n    }\n\n    return desc;\n  }\n};\nmodule.exports = ES5;","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n\n  console.log(predicate(ES, value), value);\n};","module.exports = Number.isNaN || function isNaN(a) {\n  return a !== a;\n};","var $isNaN = Number.isNaN || function (a) {\n  return a !== a;\n};\n\nmodule.exports = Number.isFinite || function (x) {\n  return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity;\n};","module.exports = function sign(number) {\n  return number >= 0 ? 1 : -1;\n};","module.exports = function mod(number, modulo) {\n  var remain = number % modulo;\n  return Math.floor(remain >= 0 ? remain : remain + modulo);\n};","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable'); // http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\n\n\nvar ES5internalSlots = {\n  '[[DefaultValue]]': function DefaultValue(O) {\n    var actualHint;\n\n    if (arguments.length > 1) {\n      actualHint = arguments[1];\n    } else {\n      actualHint = toStr.call(O) === '[object Date]' ? String : Number;\n    }\n\n    if (actualHint === String || actualHint === Number) {\n      var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n      var value, i;\n\n      for (i = 0; i < methods.length; ++i) {\n        if (isCallable(O[methods[i]])) {\n          value = O[methods[i]]();\n\n          if (isPrimitive(value)) {\n            return value;\n          }\n        }\n      }\n\n      throw new TypeError('No default value');\n    }\n\n    throw new TypeError('invalid [[DefaultValue]] hint supplied');\n  }\n}; // http://ecma-international.org/ecma-262/5.1/#sec-9.1\n\nmodule.exports = function ToPrimitive(input) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  if (arguments.length > 1) {\n    return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n  }\n\n  return ES5internalSlots['[[DefaultValue]]'](input);\n};","module.exports = function isPrimitive(value) {\n  return value === null || typeof value !== 'function' && typeof value !== 'object';\n};","'use strict';\n\nvar define = require('define-properties');\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n  var polyfill = getPolyfill();\n  define(String.prototype, {\n    trim: polyfill\n  }, {\n    trim: function testTrim() {\n      return String.prototype.trim !== polyfill;\n    }\n  });\n  return polyfill;\n};","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (hasOwnProperty.call(array, i)) {\n      if (receiver == null) {\n        iterator(array[i], i, array);\n      } else {\n        iterator.call(receiver, array[i], i, array);\n      }\n    }\n  }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n  for (var i = 0, len = string.length; i < len; i++) {\n    // no such thing as a sparse string.\n    if (receiver == null) {\n      iterator(string.charAt(i), i, string);\n    } else {\n      iterator.call(receiver, string.charAt(i), i, string);\n    }\n  }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n  for (var k in object) {\n    if (hasOwnProperty.call(object, k)) {\n      if (receiver == null) {\n        iterator(object[k], k, object);\n      } else {\n        iterator.call(receiver, object[k], k, object);\n      }\n    }\n  }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n  if (!isCallable(iterator)) {\n    throw new TypeError('iterator must be a function');\n  }\n\n  var receiver;\n\n  if (arguments.length >= 3) {\n    receiver = thisArg;\n  }\n\n  if (toStr.call(list) === '[object Array]') {\n    forEachArray(list, iterator, receiver);\n  } else if (typeof list === 'string') {\n    forEachString(list, iterator, receiver);\n  } else {\n    forEachObject(list, iterator, receiver);\n  }\n};\n\nmodule.exports = forEach;","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || function () {\n  function F() {}\n\n  return function (o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n\n    F.prototype = o;\n    return new F();\n  };\n}(); // Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\n\n\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\n\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n}; // Try to parse input as a time stamp.\n\nfunction parseTimeStamp(input) {\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0, m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n} // A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\n\n\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function set(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function get(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function has(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function alt(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function integer(k, v) {\n    if (/^-?\\d+$/.test(v)) {\n      // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function percent(k, v) {\n    var m;\n\n    if (m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n      v = parseFloat(v);\n\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n\n    return false;\n  }\n}; // Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\n\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n\n    var kv = groups[i].split(keyValueDelim);\n\n    if (kv.length !== 2) {\n      continue;\n    }\n\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input; // 4.1 WebVTT timestamp\n\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n    } // Remove time stamp from input.\n\n\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  } // 4.4.2 WebVTT cue settings\n\n\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n    parseOptions(input, function (k, v) {\n      switch (k) {\n        case \"region\":\n          // Find the last region we parsed with the same region id.\n          for (var i = regionList.length - 1; i >= 0; i--) {\n            if (regionList[i].id === v) {\n              settings.set(k, regionList[i].region);\n              break;\n            }\n          }\n\n          break;\n\n        case \"vertical\":\n          settings.alt(k, v, [\"rl\", \"lr\"]);\n          break;\n\n        case \"line\":\n          var vals = v.split(\",\"),\n              vals0 = vals[0];\n          settings.integer(k, vals0);\n          settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n          settings.alt(k, vals0, [\"auto\"]);\n\n          if (vals.length === 2) {\n            settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"position\":\n          vals = v.split(\",\");\n          settings.percent(k, vals[0]);\n\n          if (vals.length === 2) {\n            settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"size\":\n          settings.percent(k, v);\n          break;\n\n        case \"align\":\n          settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n          break;\n      }\n    }, /:/, /\\s/); // Apply default values for any missing fields.\n\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  } // 4.1 WebVTT cue timings.\n\n\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n  skipWhitespace();\n\n  if (input.substr(0, 3) !== \"-->\") {\n    // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n  }\n\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n  // 4.1 WebVTT cue settings list.\n\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200E\",\n  \"&rlm;\": \"\\u200F\",\n  \"&nbsp;\": \"\\xA0\"\n};\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n}; // Parse content into a document fragment.\n\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    } // Consume 'n' characters from the input.\n\n\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n\n    return consume(m[1] ? m[1] : m[2]);\n  } // Unescape a string 's'.\n\n\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n\n  function unescape(s) {\n    while (m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)) {\n      s = s.replace(m[0], unescape1);\n    }\n\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n  } // Create an element for this tag.\n\n\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n\n    if (!tagName) {\n      return null;\n    }\n\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        } // Otherwise just ignore the end tag.\n\n\n        continue;\n      }\n\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n      if (!m) {\n        continue;\n      } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n      node = createElement(m[1], m[3]);\n\n      if (!node) {\n        continue;\n      } // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n\n\n      if (!shouldAdd(current, node)) {\n        continue;\n      } // Set the class list (as a list of classes, separated by space).\n\n\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      } // Append the node to the current node, and enter the scope of the new\n      // node.\n\n\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    } // Text nodes are leaf nodes.\n\n\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n} // This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n\n      return text;\n    }\n\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n\n  while (text = nextTextNode(nodeStack)) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n    return cue.line;\n  }\n\n  if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n\n  return ++count * -1;\n}\n\nfunction StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\n\n\nStyleBox.prototype.applyStyles = function (styles, div) {\n  div = div || this.div;\n\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function (val, unit) {\n  return val === 0 ? 0 : val + unit;\n}; // Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\n\n\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n  this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n\n  var textPos = 0;\n\n  switch (cue.positionAlign) {\n    case \"start\":\n      textPos = cue.position;\n      break;\n\n    case \"middle\":\n      textPos = cue.position - cue.size / 2;\n      break;\n\n    case \"end\":\n      textPos = cue.position - cue.size;\n      break;\n  } // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n\n\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left: this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    }); // Vertical box orientation; textPos is the distance from the top edge of the\n    // area to the top edge of the box and cue.size is the height extending\n    // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function (box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\n\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\n\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n\n    lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n  }\n\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || top + (obj.height || height);\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n} // Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\n\n\nBoxPosition.prototype.move = function (axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n  switch (axis) {\n    case \"+x\":\n      this.left += toMove;\n      this.right += toMove;\n      break;\n\n    case \"-x\":\n      this.left -= toMove;\n      this.right -= toMove;\n      break;\n\n    case \"+y\":\n      this.top += toMove;\n      this.bottom += toMove;\n      break;\n\n    case \"-y\":\n      this.top -= toMove;\n      this.bottom -= toMove;\n      break;\n  }\n}; // Check if this box overlaps another box, b2.\n\n\nBoxPosition.prototype.overlaps = function (b2) {\n  return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n}; // Check if this box overlaps any other boxes in boxes.\n\n\nBoxPosition.prototype.overlapsAny = function (boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // Check if this box is within another box.\n\n\nBoxPosition.prototype.within = function (container) {\n  return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n}; // Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\n\n\nBoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n  switch (axis) {\n    case \"+x\":\n      return this.left < container.left;\n\n    case \"-x\":\n      return this.right > container.right;\n\n    case \"+y\":\n      return this.top < container.top;\n\n    case \"-y\":\n      return this.bottom > container.bottom;\n  }\n}; // Find the percentage of the area that this box is overlapping with another\n// box.\n\n\nBoxPosition.prototype.intersectPercentage = function (b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n}; // Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\n\n\nBoxPosition.prototype.toCSSCompatValues = function (reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n}; // Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\nBoxPosition.getSimpleBoxPosition = function (obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n  obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || top + (obj.height || height),\n    width: obj.width || width\n  };\n  return ret;\n}; // Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\n\n\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n        b.move(axis[i]);\n      } // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n\n\n      if (b.within(containerBox)) {\n        return b;\n      }\n\n      var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      } // Reset the box position to the specified position.\n\n\n      b = new BoxPosition(specifiedPosition);\n    }\n\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = []; // If we have a line number to align the cue to.\n\n  if (cue.snapToLines) {\n    var size;\n\n    switch (cue.vertical) {\n      case \"\":\n        axis = [\"+y\", \"-y\"];\n        size = \"height\";\n        break;\n\n      case \"rl\":\n        axis = [\"+x\", \"-x\"];\n        size = \"width\";\n        break;\n\n      case \"lr\":\n        axis = [\"-x\", \"+x\"];\n        size = \"width\";\n        break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    } // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n\n\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    } // Move the box to the specified position. This may not be its best\n    // position.\n\n\n    boxPosition.move(initialAxis, position);\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n    switch (cue.lineAlign) {\n      case \"middle\":\n        linePos -= calculatedPercentage / 2;\n        break;\n\n      case \"end\":\n        linePos -= calculatedPercentage;\n        break;\n    } // Apply initial line position to the cue box.\n\n\n    switch (cue.vertical) {\n      case \"\":\n        styleBox.applyStyles({\n          top: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"rl\":\n        styleBox.applyStyles({\n          left: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"lr\":\n        styleBox.applyStyles({\n          right: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n    }\n\n    axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n    // to it.\n\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {} // Nothing\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\nWebVTT.StringDecoder = function () {\n  return {\n    decode: function decode(data) {\n      if (!data) {\n        return \"\";\n      }\n\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function (window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\n\nWebVTT.processCues = function (window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  } // Remove all previous children.\n\n\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n\n    return false;\n  } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function () {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n\n      cue.displayState = styleBox.div;\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function (window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function reportOrThrowError(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function parse(data) {\n    var self = this; // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {\n        stream: true\n      });\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n\n      var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n\n      self.buffer = buffer.substr(pos);\n      return line;\n    } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n    function parseRegion(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"id\":\n            settings.set(k, v);\n            break;\n\n          case \"width\":\n            settings.percent(k, v);\n            break;\n\n          case \"lines\":\n            settings.integer(k, v);\n            break;\n\n          case \"regionanchor\":\n          case \"viewportanchor\":\n            var xy = v.split(',');\n\n            if (xy.length !== 2) {\n              break;\n            } // We have to make sure both x and y parse, so use a temporary\n            // settings object here.\n\n\n            var anchor = new Settings();\n            anchor.percent(\"x\", xy[0]);\n            anchor.percent(\"y\", xy[1]);\n\n            if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n              break;\n            }\n\n            settings.set(k + \"X\", anchor.get(\"x\"));\n            settings.set(k + \"Y\", anchor.get(\"y\"));\n            break;\n\n          case \"scroll\":\n            settings.alt(k, v, [\"up\"]);\n            break;\n        }\n      }, /=/, /\\s/); // Create the region, using default values for any values that were not\n      // specified.\n\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n        self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    } // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n\n\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"MPEGT\":\n            settings.integer(k + 'S', v);\n            break;\n\n          case \"LOCA\":\n            settings.set(k + 'L', parseTimeStamp(v));\n            break;\n        }\n      }, /[^\\d]:/, /,/);\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    } // 3.2 WebVTT metadata header syntax\n\n\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"X-TIMESTAMP-MAP\":\n              parseTimestampMap(v);\n              break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"Region\":\n              // 3.3 WebVTT region metadata header syntax\n              parseRegion(v);\n              break;\n          }\n        }, /:/);\n      }\n    } // 5.1 WebVTT file parsing.\n\n\n    try {\n      var line;\n\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n          case \"HEADER\":\n            // 13-18 - Allow a header (metadata) under the WEBVTT line.\n            if (/:/.test(line)) {\n              parseHeader(line);\n            } else if (!line) {\n              // An empty line terminates the header and starts the body (cues).\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"NOTE\":\n            // Ignore NOTE blocks.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"ID\":\n            // Check for the start of NOTE blocks.\n            if (/^NOTE($|[ \\t])/.test(line)) {\n              self.state = \"NOTE\";\n              break;\n            } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n            if (!line) {\n              continue;\n            }\n\n            self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n            self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n            if (line.indexOf(\"-->\") === -1) {\n              self.cue.id = line;\n              continue;\n            }\n\n          // Process line as start of a cue.\n\n          /*falls through*/\n\n          case \"CUE\":\n            // 40 - Collect cue timings and settings.\n            try {\n              parseCue(line, self.cue, self.regionList);\n            } catch (e) {\n              self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n              self.cue = null;\n              self.state = \"BADCUE\";\n              continue;\n            }\n\n            self.state = \"CUETEXT\";\n            continue;\n\n          case \"CUETEXT\":\n            var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n            // 35 - If we have the special substring '-->' then report the cue,\n            // but do not collect the line as we need to process the current\n            // one as a new cue.\n\n            if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n              // We are done parsing self cue.\n              self.oncue && self.oncue(self.cue);\n              self.cue = null;\n              self.state = \"ID\";\n              continue;\n            }\n\n            if (self.cue.text) {\n              self.cue.text += \"\\n\";\n            }\n\n            self.cue.text += line;\n            continue;\n\n          case \"BADCUE\":\n            // BADCUE\n            // 54-62 - Collect and discard the remaining cue.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n\n      self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n\n    return this;\n  },\n  flush: function flush() {\n    var self = this;\n\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      } // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n\n\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n    }\n\n    self.onflush && self.onflush();\n    return this;\n  }\n};\nmodule.exports = WebVTT;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function get() {\n        return _id;\n      },\n      set: function set(value) {\n        _id = \"\" + value;\n      }\n    },\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function get() {\n        return _pauseOnExit;\n      },\n      set: function set(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n    \"startTime\": {\n      enumerable: true,\n      get: function get() {\n        return _startTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"endTime\": {\n      enumerable: true,\n      get: function get() {\n        return _endTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"text\": {\n      enumerable: true,\n      get: function get() {\n        return _text;\n      },\n      set: function set(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"region\": {\n      enumerable: true,\n      get: function get() {\n        return _region;\n      },\n      set: function set(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"vertical\": {\n      enumerable: true,\n      get: function get() {\n        return _vertical;\n      },\n      set: function set(value) {\n        var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"snapToLines\": {\n      enumerable: true,\n      get: function get() {\n        return _snapToLines;\n      },\n      set: function set(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"line\": {\n      enumerable: true,\n      get: function get() {\n        return _line;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"lineAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _lineAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"position\": {\n      enumerable: true,\n      get: function get() {\n        return _position;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"positionAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _positionAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"size\": {\n      enumerable: true,\n      get: function get() {\n        return _size;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"align\": {\n      enumerable: true,\n      get: function get() {\n        return _align;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n  /**\n   * Other <track> spec defined properties\n   */\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n  this.displayState = undefined;\n}\n/**\n * VTTCue methods\n */\n\n\nVTTCue.prototype.getCueAsHTML = function () {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && value >= 0 && value <= 100;\n} // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function get() {\n        return _width;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function get() {\n        return _lines;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function get() {\n        return _scroll;\n      },\n      set: function set(value) {\n        var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function toUnsigned(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n  var i,\n      currentNal,\n      currentFrame = [],\n      frames = [];\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  } // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n\n\n  if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  } // Push the final frame\n\n\n  frames.push(currentFrame);\n  return frames;\n}; // Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\n\n\nvar groupFramesIntoGops = function groupFramesIntoGops(frames) {\n  var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration; // push the final Gop\n\n  gops.push(currentGop);\n  return gops;\n};\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\n\n\nvar extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\n\n\nvar createDefaultSample = function createDefaultSample() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\n\n\nvar sampleForFrame = function sampleForFrame(frame, dataOffset) {\n  var sample = createDefaultSample();\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n}; // generate the track's sample table from an array of gops\n\n\nvar generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n  var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n      sample = sampleForFrame(currentFrame, dataOffset);\n      dataOffset += sample.size;\n      samples.push(sample);\n    }\n  }\n\n  return samples;\n}; // generate the track's raw mdat data from an array of gops\n\n\nvar concatenateNalData = function concatenateNalData(gops) {\n  var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h]; // For each Frame..\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i]; // For each NAL..\n\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar coneOfSilence = require('../data/silence');\n\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\n\nvar sumFrameByteLengths = function sumFrameByteLengths(array) {\n  var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n}; // Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\n\n\nvar prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n  var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  } // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n\n\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n}; // If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\n\n\nvar trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  } // We will need to recalculate the earliest segment Dts\n\n\n  track.minSegmentDts = Infinity;\n  return adtsFrames.filter(function (currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    } // Otherwise, discard it\n\n\n    return false;\n  });\n}; // generate the track's raw mdat data from an array of frames\n\n\nvar generateSampleTable = function generateSampleTable(frames) {\n  var i,\n      currentFrame,\n      samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n    });\n  }\n\n  return samples;\n}; // generate the track's sample table from an array of frames\n\n\nvar concatenateFrameData = function concatenateFrameData(frames) {\n  var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\nvar zeroFill = function zeroFill(count) {\n  var a = [];\n\n  while (count--) {\n    a.push(0);\n  }\n\n  return a;\n};\n\nvar makeTable = function makeTable(metaTable) {\n  return Object.keys(metaTable).reduce(function (obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n}; // Frames-of-silence to use for filling in missing AAC frames\n\n\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\nmodule.exports = makeTable(coneOfSilence);","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000,\n    // 90kHz clock\nsecondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs;\n\nsecondsToVideoTs = function secondsToVideoTs(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function videoTsToSeconds(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\n\nvar collectDtsInfo = function collectDtsInfo(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\n\n\nvar clearDtsInfo = function clearDtsInfo(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\nvar calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n  var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n\n\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n  baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js'),\n    CaptionStream = require('./caption-stream'),\n    StreamTypes = require('./stream-types'),\n    TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js'); // object types\n\n\nvar _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\nvar MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\n\n_TransportPacketStream = function TransportPacketStream() {\n  var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n      bytesInBuffer = 0;\n\n  _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n\n\n  this.push = function (bytes) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    } // While we have enough data for a packet\n\n\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n\n\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n\n\n  this.flush = function () {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n\n    this.trigger('done');\n  };\n};\n\n_TransportPacketStream.prototype = new Stream();\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\n\n_TransportParseStream = function TransportParseStream() {\n  var parsePsi, parsePat, parsePmt, self;\n\n  _TransportParseStream.prototype.init.call(this);\n\n  self = this;\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function parsePsi(payload, psi) {\n    var offset = 0; // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function parsePat(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n    // skip the PSI header and parse the first PMT entry\n\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n\n\n  parsePmt = function parsePmt(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(payload[5] & 0x01)) {\n      return;\n    } // overwrite any existing program map table\n\n\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    }; // the mapping table ends at the end of the current section\n\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n    offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n\n      if (streamType === StreamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      } // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    } // record the map on the packet as well\n\n\n    pmt.programMapTable = self.programMapTable;\n  };\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n\n\n  this.push = function (packet) {\n    var result = {},\n        offset = 4;\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[offset] + 1;\n    } // parse the rest of the packet based on the type\n\n\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function (packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n    this.trigger('data', result);\n  };\n};\n\n_TransportParseStream.prototype = new Stream();\n_TransportParseStream.STREAM_TYPES = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\n\n_ElementaryStream = function ElementaryStream() {\n  var self = this,\n      // PES packet fragments\n  video = {\n    data: [],\n    size: 0\n  },\n      audio = {\n    data: [],\n    size: 0\n  },\n      timedMetadata = {\n    data: [],\n    size: 0\n  },\n      parsePes = function parsePes(payload, pes) {\n    var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n    pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n    pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n      pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    } // the data section starts immediately after the PES header.\n    // pes_header_data_length specifies the number of header bytes\n    // that follow the last byte of the field.\n\n\n    pes.data = payload.subarray(9 + payload[8]);\n  },\n\n  /**\n    * Pass completely parsed PES packets to the next stream in the pipeline\n   **/\n  flushStream = function flushStream(stream, type, forceFlush) {\n    var packetData = new Uint8Array(stream.size),\n        event = {\n      type: type\n    },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment; // do nothing if there is not enough buffered data for a complete\n    // PES header\n\n    if (!stream.data.length || stream.size < 9) {\n      return;\n    }\n\n    event.trackId = stream.data[0].pid; // reassemble the packet\n\n    for (i = 0; i < stream.data.length; i++) {\n      fragment = stream.data[i];\n      packetData.set(fragment.data, offset);\n      offset += fragment.data.byteLength;\n    } // parse assembled packet's PES header\n\n\n    parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n    // check that there is enough stream data to fill the packet\n\n    packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n    if (forceFlush || packetFlushable) {\n      stream.size = 0;\n      stream.data.length = 0;\n    } // only emit packets that are complete. this is to avoid assembling\n    // incomplete PES packets due to poor segmentation\n\n\n    if (packetFlushable) {\n      self.trigger('data', event);\n    }\n  };\n\n  _ElementaryStream.prototype.init.call(this);\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n\n\n  this.push = function (data) {\n    ({\n      pat: function pat() {// we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function pes() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n          case StreamTypes.H264_STREAM_TYPE:\n          case m2tsStreamTypes.H264_STREAM_TYPE:\n            stream = video;\n            streamType = 'video';\n            break;\n\n          case StreamTypes.ADTS_STREAM_TYPE:\n            stream = audio;\n            streamType = 'audio';\n            break;\n\n          case StreamTypes.METADATA_STREAM_TYPE:\n            stream = timedMetadata;\n            streamType = 'timed-metadata';\n            break;\n\n          default:\n            // ignore unknown stream types\n            return;\n        } // if a new packet is starting, we can flush the completed\n        // packet\n\n\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        } // buffer this fragment until we are sure we've received the\n        // complete payload\n\n\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function pmt() {\n        var event = {\n          type: 'metadata',\n          tracks: []\n        },\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n\n\n  this.flush = function () {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\n\n_ElementaryStream.prototype = new Stream();\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: _TransportPacketStream,\n  TransportParseStream: _TransportParseStream,\n  ElementaryStream: _ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\n\nvar Stream = require('../utils/stream'),\n    StreamTypes = require('./stream-types'),\n    // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\npercentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n},\n    // return the string representation of the specified byte range,\n// interpreted as UTf-8.\nparseUtf8 = function parseUtf8(bytes, start, end) {\n  return decodeURIComponent(percentEncode(bytes, start, end));\n},\n    // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nparseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n},\n    parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n},\n    tagParsers = {\n  TXXX: function TXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the text fields\n        tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n        tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n        break;\n      }\n    }\n\n    tag.data = tag.value;\n  },\n  WXXX: function WXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.description = parseUtf8(tag.data, 1, i);\n        tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n        break;\n      }\n    }\n  },\n  PRIV: function PRIV(tag) {\n    var i;\n\n    for (i = 0; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.owner = parseIso88591(tag.data, 0, i);\n        break;\n      }\n    }\n\n    tag.privateData = tag.data.subarray(i + 1);\n    tag.data = tag.privateData;\n  }\n},\n    _MetadataStream;\n\n_MetadataStream = function MetadataStream(options) {\n  var settings = {\n    debug: !!(options && options.debug),\n    // the bytes of the program-level descriptor field in MP2T\n    // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n    // program element descriptors\"\n    descriptor: options && options.descriptor\n  },\n      // the total size in bytes of the ID3 tag being parsed\n  tagSize = 0,\n      // tag data that is not complete enough to be parsed\n  buffer = [],\n      // the total number of bytes currently in the buffer\n  bufferSize = 0,\n      i;\n\n  _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function (chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    } // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n\n\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    } // ignore events that don't look like ID3 data\n\n\n    if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n\n      return;\n    } // add this chunk to the data we've collected so far\n\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n\n      tagSize += 10;\n    } // if the entire frame has not arrived, wait for more data\n\n\n    if (bufferSize < tagSize) {\n      return;\n    } // collect the entire frame so it can be parsed\n\n\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    } // find the start of the first frame and the end of the tag\n\n\n    frameStart = 10;\n\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n\n      frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n              size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n\n          this.trigger('timestamp', frame);\n        }\n      }\n\n      tag.frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n\n    this.trigger('data', tag);\n  };\n};\n\n_MetadataStream.prototype = new Stream();\nmodule.exports = _MetadataStream;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar _AdtsStream;\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\n\n_AdtsStream = function AdtsStream() {\n  var buffer;\n\n  _AdtsStream.prototype.init.call(this);\n\n  this.push = function (packet) {\n    var i = 0,\n        frameNum = 0,\n        frameLength,\n        protectionSkipBytes,\n        frameEnd,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    } // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n\n\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    } // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n    while (i + 5 < buffer.length) {\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n\n\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n\n      frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n      frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n\n      if (buffer.byteLength < frameEnd) {\n        return;\n      } // Otherwise, deliver the complete AAC frame\n\n\n      this.trigger('data', {\n        pts: packet.pts + frameNum * adtsFrameDuration,\n        dts: packet.dts + frameNum * adtsFrameDuration,\n        sampleCount: sampleCount,\n        audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n        channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      }); // If the buffer is empty, clear it and return\n\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++; // Remove the finished frame from the buffer and start the process again\n\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n\n  this.flush = function () {\n    this.trigger('done');\n  };\n};\n\n_AdtsStream.prototype = new Stream();\nmodule.exports = _AdtsStream;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar _H264Stream, _NalByteStream;\n\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\n\n_NalByteStream = function NalByteStream() {\n  var syncPoint = 0,\n      i,\n      buffer;\n\n  _NalByteStream.prototype.init.call(this);\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n\n\n  this.push = function (data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    } // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n    // advance the sync point to a NAL start, if necessary\n\n\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n        case 0:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0) {\n            i += 2;\n            break;\n          } else if (buffer[i - 2] !== 0) {\n            i++;\n            break;\n          } // deliver the NAL unit if it isn't empty\n\n\n          if (syncPoint + 3 !== i - 2) {\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          } // drop trailing zeroes\n\n\n          do {\n            i++;\n          } while (buffer[i] !== 1 && i < buffer.length);\n\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n            i += 3;\n            break;\n          } // deliver the NAL unit\n\n\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          i += 3;\n          break;\n      }\n    } // filter out the NAL units that were delivered\n\n\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function () {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    } // reset the stream state\n\n\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\n\n_NalByteStream.prototype = new Stream(); // values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\n\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\n\n_H264Stream = function H264Stream() {\n  var nalByteStream = new _NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n\n  _H264Stream.prototype.init.call(this);\n\n  self = this;\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n\n  this.push = function (packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n    nalByteStream.push(packet);\n  };\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n\n\n  nalByteStream.on('data', function (data) {\n    var event = {\n      trackId: trackId,\n      pts: currentPts,\n      dts: currentDts,\n      data: data\n    };\n\n    switch (data[0] & 0x1f) {\n      case 0x05:\n        event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n        break;\n\n      case 0x06:\n        event.nalUnitType = 'sei_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        break;\n\n      case 0x07:\n        event.nalUnitType = 'seq_parameter_set_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        event.config = readSequenceParameterSet(event.escapedRBSP);\n        break;\n\n      case 0x08:\n        event.nalUnitType = 'pic_parameter_set_rbsp';\n        break;\n\n      case 0x09:\n        event.nalUnitType = 'access_unit_delimiter_rbsp';\n        break;\n\n      default:\n        break;\n    } // This triggers data on the H264Stream\n\n\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function () {\n    self.trigger('done');\n  });\n\n  this.flush = function () {\n    nalByteStream.flush();\n  };\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n\n\n  skipScalingList = function skipScalingList(count, expGolombDecoder) {\n    var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = nextScale === 0 ? lastScale : nextScale;\n    }\n  };\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n\n  discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n\n\n  readSequenceParameterSet = function readSequenceParameterSet(data) {\n    var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        sarScale = 1,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio,\n        aspectRatioIdc,\n        i;\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // seq_scaling_matrix_present_flag\n        scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n    if (expGolombDecoder.readBoolean()) {\n      // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n        switch (aspectRatioIdc) {\n          case 1:\n            sarRatio = [1, 1];\n            break;\n\n          case 2:\n            sarRatio = [12, 11];\n            break;\n\n          case 3:\n            sarRatio = [10, 11];\n            break;\n\n          case 4:\n            sarRatio = [16, 11];\n            break;\n\n          case 5:\n            sarRatio = [40, 33];\n            break;\n\n          case 6:\n            sarRatio = [24, 11];\n            break;\n\n          case 7:\n            sarRatio = [20, 11];\n            break;\n\n          case 8:\n            sarRatio = [32, 11];\n            break;\n\n          case 9:\n            sarRatio = [80, 33];\n            break;\n\n          case 10:\n            sarRatio = [18, 11];\n            break;\n\n          case 11:\n            sarRatio = [15, 11];\n            break;\n\n          case 12:\n            sarRatio = [64, 33];\n            break;\n\n          case 13:\n            sarRatio = [160, 99];\n            break;\n\n          case 14:\n            sarRatio = [4, 3];\n            break;\n\n          case 15:\n            sarRatio = [3, 2];\n            break;\n\n          case 16:\n            sarRatio = [2, 1];\n            break;\n\n          case 255:\n            {\n              sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n              break;\n            }\n        }\n\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n    };\n  };\n};\n\n_H264Stream.prototype = new Stream();\nmodule.exports = {\n  H264Stream: _H264Stream,\n  NalByteStream: _NalByteStream\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar ExpGolomb;\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\n\nExpGolomb = function ExpGolomb(workingData) {\n  var // the number of bytes left to examine in workingData\n  workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n  workingWord = 0,\n      // :uint\n  // the number of bits left to examine in the current word\n  workingBitsAvailable = 0; // :uint;\n  // ():uint\n\n  this.length = function () {\n    return 8 * workingBytesAvailable;\n  }; // ():uint\n\n\n  this.bitsAvailable = function () {\n    return 8 * workingBytesAvailable + workingBitsAvailable;\n  }; // ():void\n\n\n  this.loadWord = function () {\n    var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position, position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  }; // (count:int):void\n\n\n  this.skipBits = function (count) {\n    var skipBytes; // :int\n\n    if (workingBitsAvailable > count) {\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n      count -= skipBytes * 8;\n      workingBytesAvailable -= skipBytes;\n      this.loadWord();\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  }; // (size:int):uint\n\n\n  this.readBits = function (size) {\n    var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n    valu = workingWord >>> 32 - bits; // :uint\n    // if size > 31, handle error\n\n    workingBitsAvailable -= bits;\n\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n\n    return valu;\n  }; // ():uint\n\n\n  this.skipLeadingZeros = function () {\n    var leadingZeroCount; // :uint\n\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    } // we exhausted workingWord and still have not found a 1\n\n\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  }; // ():void\n\n\n  this.skipUnsignedExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():void\n\n\n  this.skipExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():uint\n\n\n  this.readUnsignedExpGolomb = function () {\n    var clz = this.skipLeadingZeros(); // :uint\n\n    return this.readBits(clz + 1) - 1;\n  }; // ():int\n\n\n  this.readExpGolomb = function () {\n    var valu = this.readUnsignedExpGolomb(); // :int\n\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n    }\n\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  }; // Some convenience functions\n  // :Boolean\n\n\n  this.readBoolean = function () {\n    return this.readBits(1) === 1;\n  }; // ():int\n\n\n  this.readUnsignedByte = function () {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar aacUtils = require('./utils'); // Constants\n\n\nvar _AacStream;\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\n\n_AacStream = function AacStream() {\n  var everything = new Uint8Array(),\n      timeStamp = 0;\n\n  _AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function (timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function (bytes) {\n    var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        } // check framesize\n\n\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n\n      byteIndex++;\n    }\n\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\n_AacStream.prototype = new Stream();\nmodule.exports = _AacStream;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\n\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\n\nvar probe = require('./probe');\n\nvar inspect = require('../tools/mp4-inspector');\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar mapToSample = function mapToSample(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\n\n\nvar findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // Bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x06:\n        var data = avcStream.subarray(i + 1, i + 1 + length);\n        var matchingSample = mapToSample(i, samples);\n        seiNal = {\n          nalUnitType: 'sei_rbsp',\n          size: length,\n          data: data,\n          escapedRBSP: discardEmulationPreventionBytes(data),\n          trackId: trackId\n        };\n\n        if (matchingSample) {\n          seiNal.pts = matchingSample.pts;\n          seiNal.dts = matchingSample.dts;\n          lastMatchedSample = matchingSample;\n        } else {\n          // If a matching sample cannot be found, use the last\n          // sample's values as they should be as close as possible\n          seiNal.pts = lastMatchedSample.pts;\n          seiNal.dts = lastMatchedSample.dts;\n        }\n\n        result.push(seiNal);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return result;\n};\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n  truns.forEach(function (trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n    samples.forEach(function (sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n\n      sample.pts = currentDts + sample.compositionTimeOffset;\n      currentDts += sample.duration;\n    });\n    allSamples = allSamples.concat(samples);\n  });\n  return allSamples;\n};\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\n\n\nvar parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n  mdats.forEach(function (mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n  mdatTrafPairs.forEach(function (pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n    var baseMediaDecodeTime = tfdt.length > 0 ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals; // Only parse video data for the chosen video track\n\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n  return captionNals;\n};\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\n\n\nvar parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\n\n\nvar CaptionParser = function CaptionParser() {\n  var isInitialized = false;\n  var captionStream; // Stores segments seen before trackId and timescale are set\n\n  var segmentCache; // Stores video track ID of the track being parsed\n\n  var trackId; // Stores the timescale of the track being parsed\n\n  var timescale; // Stores captions parsed so far\n\n  var parsedCaptions;\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n\n  this.isInitialized = function () {\n    return isInitialized;\n  };\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n\n\n  this.init = function () {\n    captionStream = new CaptionStream();\n    isInitialized = true; // Collect dispatched captions\n\n    captionStream.on('data', function (event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n\n\n  this.isNewInit = function (videoTrackIds, timescales) {\n    if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n  };\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.parse = function (segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null; // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n      // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    } // Now that a timescale and trackId is set, parse cached segments\n\n\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n    this.flushStream();\n    return parsedCaptions;\n  };\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n\n\n  this.pushNals = function (nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function (nal) {\n      captionStream.push(nal);\n    });\n  };\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.flushStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n  /**\n    * Reset caption buckets for new data\n   **/\n\n\n  this.clearParsedCaptions = function () {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.resetCaptionStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.clearAllCaptions = function () {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n  /**\n    * Reset caption parser\n   **/\n\n\n  this.reset = function () {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function parsePid(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function parseAdaptionField(packet) {\n  var offset = 0; // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n\n  if ((packet[3] & 0x30) >>> 4 > 0x01) {\n    offset += packet[4] + 1;\n  }\n\n  return offset;\n};\n\nvar parseType = function parseType(packet, pmtPid) {\n  var pid = parsePid(packet);\n\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n\n  return null;\n};\n\nvar parsePat = function parsePat(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function parsePmt(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  } // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n\n\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n  var offset = 12 + programInfoLength;\n\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n\n  return programMapTable;\n};\n\nvar parsePesType = function parsePesType(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function parsePesTime(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n\n  ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n\n  if (ptsDtsFlags & 0xC0) {\n    pes = {}; // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n    pes.pts *= 4; // Left shift by 2\n\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n    pes.dts = pes.pts;\n\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n\n  return pes;\n};\n\nvar parseNalUnitType = function parseNalUnitType(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n\n    case 0x06:\n      return 'sei_rbsp';\n\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType; // advance the sync point to a NAL start, if necessary\n\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n      case 0:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0) {\n          frameI += 2;\n          break;\n        } else if (frameBuffer[frameI - 2] !== 0) {\n          frameI++;\n          break;\n        }\n\n        if (frameSyncPoint + 3 !== frameI - 2) {\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n        } // drop trailing zeroes\n\n\n        do {\n          frameI++;\n        } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      case 1:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n          frameI += 3;\n          break;\n        }\n\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        frameI += 3;\n        break;\n    }\n  }\n\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0; // parse the final nal\n\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _valueTransformer = require('./value-transformer');\n\nvar valueTransformer = _interopRequireWildcard(_valueTransformer);\n\nvar _defaultClassNames = require('./default-class-names');\n\nvar _defaultClassNames2 = _interopRequireDefault(_defaultClassNames);\n\nvar _label = require('./label');\n\nvar _label2 = _interopRequireDefault(_label);\n\nvar _rangePropType = require('./range-prop-type');\n\nvar _rangePropType2 = _interopRequireDefault(_rangePropType);\n\nvar _valuePropType = require('./value-prop-type');\n\nvar _valuePropType2 = _interopRequireDefault(_valuePropType);\n\nvar _slider = require('./slider');\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _track = require('./track');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _utils = require('../utils');\n\nvar _keyCodes = require('./key-codes');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * A React component that allows users to input numeric values within a range\n * by dragging its sliders.\n */\n\n\nvar InputRange = (_class = function (_React$Component) {\n  _inherits(InputRange, _React$Component);\n\n  _createClass(InputRange, null, [{\n    key: 'propTypes',\n\n    /**\n     * @ignore\n     * @override\n     * @return {Object}\n     */\n    get: function get() {\n      return {\n        allowSameValues: _propTypes2.default.bool,\n        ariaLabelledby: _propTypes2.default.string,\n        ariaControls: _propTypes2.default.string,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string),\n        disabled: _propTypes2.default.bool,\n        draggableTrack: _propTypes2.default.bool,\n        formatLabel: _propTypes2.default.func,\n        maxValue: _rangePropType2.default,\n        minValue: _rangePropType2.default,\n        name: _propTypes2.default.string,\n        onChangeStart: _propTypes2.default.func,\n        onChange: _propTypes2.default.func.isRequired,\n        onChangeComplete: _propTypes2.default.func,\n        step: _propTypes2.default.number,\n        value: _valuePropType2.default\n      };\n    }\n    /**\n     * @ignore\n     * @override\n     * @return {Object}\n     */\n\n  }, {\n    key: 'defaultProps',\n    get: function get() {\n      return {\n        allowSameValues: false,\n        classNames: _defaultClassNames2.default,\n        disabled: false,\n        maxValue: 10,\n        minValue: 0,\n        step: 1\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {boolean} [props.allowSameValues]\n     * @param {string} [props.ariaLabelledby]\n     * @param {string} [props.ariaControls]\n     * @param {InputRangeClassNames} [props.classNames]\n     * @param {boolean} [props.disabled = false]\n     * @param {Function} [props.formatLabel]\n     * @param {number|Range} [props.maxValue = 10]\n     * @param {number|Range} [props.minValue = 0]\n     * @param {string} [props.name]\n     * @param {string} props.onChange\n     * @param {Function} [props.onChangeComplete]\n     * @param {Function} [props.onChangeStart]\n     * @param {number} [props.step = 1]\n     * @param {number|Range} props.value\n     */\n\n  }]);\n\n  function InputRange(props) {\n    _classCallCheck(this, InputRange);\n    /**\n     * @private\n     * @type {?number}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (InputRange.__proto__ || Object.getPrototypeOf(InputRange)).call(this, props));\n\n    _this.startValue = null;\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n    _this.node = null;\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n    _this.trackNode = null;\n    /**\n     * @private\n     * @type {bool}\n     */\n\n    _this.isSliderDragging = false;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    _this.lastKeyMoved = null;\n    return _this;\n  }\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n\n\n  _createClass(InputRange, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeDocumentMouseUpListener();\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * Return the CSS class name of the component\n     * @private\n     * @return {string}\n     */\n\n  }, {\n    key: 'getComponentClassName',\n    value: function getComponentClassName() {\n      if (!this.props.disabled) {\n        return this.props.classNames.inputRange;\n      }\n\n      return this.props.classNames.disabledInputRange;\n    }\n    /**\n     * Return the bounding rect of the track\n     * @private\n     * @return {ClientRect}\n     */\n\n  }, {\n    key: 'getTrackClientRect',\n    value: function getTrackClientRect() {\n      return this.trackNode.getClientRect();\n    }\n    /**\n     * Return the slider key closest to a point\n     * @private\n     * @param {Point} position\n     * @return {string}\n     */\n\n  }, {\n    key: 'getKeyByPosition',\n    value: function getKeyByPosition(position) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n      if (this.isMultiValue()) {\n        var distanceToMin = (0, _utils.distanceTo)(position, positions.min);\n        var distanceToMax = (0, _utils.distanceTo)(position, positions.max);\n\n        if (distanceToMin < distanceToMax) {\n          return 'min';\n        }\n      }\n\n      return 'max';\n    }\n    /**\n     * Return all the slider keys\n     * @private\n     * @return {string[]}\n     */\n\n  }, {\n    key: 'getKeys',\n    value: function getKeys() {\n      if (this.isMultiValue()) {\n        return ['min', 'max'];\n      }\n\n      return ['max'];\n    }\n    /**\n     * Return true if the difference between the new and the current value is\n     * greater or equal to the step amount of the component\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasStepDifference',\n    value: function hasStepDifference(values) {\n      var currentValues = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      return (0, _utils.length)(values.min, currentValues.min) >= this.props.step || (0, _utils.length)(values.max, currentValues.max) >= this.props.step;\n    }\n    /**\n     * Return true if the component accepts a min and max value\n     * @private\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isMultiValue',\n    value: function isMultiValue() {\n      return (0, _utils.isObject)(this.props.value);\n    }\n    /**\n     * Return true if the range is within the max and min value of the component\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isWithinRange',\n    value: function isWithinRange(values) {\n      if (this.isMultiValue()) {\n        return values.min >= this.props.minValue && values.max <= this.props.maxValue && this.props.allowSameValues ? values.min <= values.max : values.min < values.max;\n      }\n\n      return values.max >= this.props.minValue && values.max <= this.props.maxValue;\n    }\n    /**\n     * Return true if the new value should trigger a render\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'shouldUpdate',\n    value: function shouldUpdate(values) {\n      return this.isWithinRange(values) && this.hasStepDifference(values);\n    }\n    /**\n     * Update the position of a slider\n     * @private\n     * @param {string} key\n     * @param {Point} position\n     * @return {void}\n     */\n\n  }, {\n    key: 'updatePosition',\n    value: function updatePosition(key, position) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n      positions[key] = position;\n      this.lastKeyMoved = key;\n      this.updatePositions(positions);\n    }\n    /**\n     * Update the positions of multiple sliders\n     * @private\n     * @param {Object} positions\n     * @param {Point} positions.min\n     * @param {Point} positions.max\n     * @return {void}\n     */\n\n  }, {\n    key: 'updatePositions',\n    value: function updatePositions(positions) {\n      var values = {\n        min: valueTransformer.getValueFromPosition(positions.min, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n        max: valueTransformer.getValueFromPosition(positions.max, this.props.minValue, this.props.maxValue, this.getTrackClientRect())\n      };\n      var transformedValues = {\n        min: valueTransformer.getStepValueFromValue(values.min, this.props.step),\n        max: valueTransformer.getStepValueFromValue(values.max, this.props.step)\n      };\n      this.updateValues(transformedValues);\n    }\n    /**\n     * Update the value of a slider\n     * @private\n     * @param {string} key\n     * @param {number} value\n     * @return {void}\n     */\n\n  }, {\n    key: 'updateValue',\n    value: function updateValue(key, value) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      values[key] = value;\n      this.updateValues(values);\n    }\n    /**\n     * Update the values of multiple sliders\n     * @private\n     * @param {Range|number} values\n     * @return {void}\n     */\n\n  }, {\n    key: 'updateValues',\n    value: function updateValues(values) {\n      if (!this.shouldUpdate(values)) {\n        return;\n      }\n\n      this.props.onChange(this.isMultiValue() ? values : values.max);\n    }\n    /**\n     * Increment the value of a slider by key name\n     * @private\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'incrementValue',\n    value: function incrementValue(key) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var value = values[key] + this.props.step;\n      this.updateValue(key, value);\n    }\n    /**\n     * Decrement the value of a slider by key name\n     * @private\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'decrementValue',\n    value: function decrementValue(key) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var value = values[key] - this.props.step;\n      this.updateValue(key, value);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Listen to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchEndListener',\n    value: function addDocumentTouchEndListener() {\n      this.removeDocumentTouchEndListener();\n      this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * Stop listening to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Stop listening to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchEndListener',\n    value: function removeDocumentTouchEndListener() {\n      this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * Handle any \"mousemove\" event received by the slider\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleSliderDrag',\n    value: function handleSliderDrag(event, key) {\n      var _this2 = this;\n\n      if (this.props.disabled) {\n        return;\n      }\n\n      var position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n      this.isSliderDragging = true;\n      requestAnimationFrame(function () {\n        return _this2.updatePosition(key, position);\n      });\n    }\n    /**\n     * Handle any \"mousemove\" event received by the track\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTrackDrag',\n    value: function handleTrackDrag(event, prevEvent) {\n      if (this.props.disabled || !this.props.draggableTrack || this.isSliderDragging) {\n        return;\n      }\n\n      var _props = this.props,\n          maxValue = _props.maxValue,\n          minValue = _props.minValue,\n          _props$value = _props.value,\n          max = _props$value.max,\n          min = _props$value.min;\n      var position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n      var value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n      var stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n      var prevPosition = valueTransformer.getPositionFromEvent(prevEvent, this.getTrackClientRect());\n      var prevValue = valueTransformer.getValueFromPosition(prevPosition, minValue, maxValue, this.getTrackClientRect());\n      var prevStepValue = valueTransformer.getStepValueFromValue(prevValue, this.props.step);\n      var offset = prevStepValue - stepValue;\n      var transformedValues = {\n        min: min - offset,\n        max: max - offset\n      };\n      this.updateValues(transformedValues);\n    }\n    /**\n     * Handle any \"keydown\" event received by the slider\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleSliderKeyDown',\n    value: function handleSliderKeyDown(event, key) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        case _keyCodes.LEFT_ARROW:\n        case _keyCodes.DOWN_ARROW:\n          event.preventDefault();\n          this.decrementValue(key);\n          break;\n\n        case _keyCodes.RIGHT_ARROW:\n        case _keyCodes.UP_ARROW:\n          event.preventDefault();\n          this.incrementValue(key);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * Handle any \"mousedown\" event received by the track\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {Point} position\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTrackMouseDown',\n    value: function handleTrackMouseDown(event, position) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      var _props2 = this.props,\n          maxValue = _props2.maxValue,\n          minValue = _props2.minValue,\n          _props2$value = _props2.value,\n          max = _props2$value.max,\n          min = _props2$value.min;\n      event.preventDefault();\n      var value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n      var stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n      if (!this.props.draggableTrack || stepValue > max || stepValue < min) {\n        this.updatePosition(this.getKeyByPosition(position), position);\n      }\n    }\n    /**\n     * Handle the start of any mouse/touch event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleInteractionStart',\n    value: function handleInteractionStart() {\n      if (this.props.onChangeStart) {\n        this.props.onChangeStart(this.props.value);\n      }\n\n      if (this.props.onChangeComplete && !(0, _utils.isDefined)(this.startValue)) {\n        this.startValue = this.props.value;\n      }\n    }\n    /**\n     * Handle the end of any mouse/touch event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleInteractionEnd',\n    value: function handleInteractionEnd() {\n      if (this.isSliderDragging) {\n        this.isSliderDragging = false;\n      }\n\n      if (!this.props.onChangeComplete || !(0, _utils.isDefined)(this.startValue)) {\n        return;\n      }\n\n      if (this.startValue !== this.props.value) {\n        this.props.onChangeComplete(this.props.value);\n      }\n\n      this.startValue = null;\n    }\n    /**\n     * Handle any \"keydown\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown(event) {\n      this.handleInteractionStart(event);\n    }\n    /**\n     * Handle any \"keyup\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyUp',\n    value: function handleKeyUp(event) {\n      this.handleInteractionEnd(event);\n    }\n    /**\n     * Handle any \"mousedown\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(event) {\n      this.handleInteractionStart(event);\n      this.addDocumentMouseUpListener();\n    }\n    /**\n     * Handle any \"mouseup\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp(event) {\n      this.handleInteractionEnd(event);\n      this.removeDocumentMouseUpListener();\n    }\n    /**\n     * Handle any \"touchstart\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart(event) {\n      this.handleInteractionStart(event);\n      this.addDocumentTouchEndListener();\n    }\n    /**\n     * Handle any \"touchend\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     */\n\n  }, {\n    key: 'handleTouchEnd',\n    value: function handleTouchEnd(event) {\n      this.handleInteractionEnd(event);\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * Return JSX of sliders\n     * @private\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'renderSliders',\n    value: function renderSliders() {\n      var _this3 = this;\n\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n      var keys = this.props.allowSameValues && this.lastKeyMoved === 'min' ? this.getKeys().reverse() : this.getKeys();\n      return keys.map(function (key) {\n        var value = values[key];\n        var percentage = percentages[key];\n        var _props3 = _this3.props,\n            maxValue = _props3.maxValue,\n            minValue = _props3.minValue;\n\n        if (key === 'min') {\n          maxValue = values.max;\n        } else {\n          minValue = values.min;\n        }\n\n        var slider = _react2.default.createElement(_slider2.default, {\n          ariaLabelledby: _this3.props.ariaLabelledby,\n          ariaControls: _this3.props.ariaControls,\n          classNames: _this3.props.classNames,\n          formatLabel: _this3.props.formatLabel,\n          key: key,\n          maxValue: maxValue,\n          minValue: minValue,\n          onSliderDrag: _this3.handleSliderDrag,\n          onSliderKeyDown: _this3.handleSliderKeyDown,\n          percentage: percentage,\n          type: key,\n          value: value\n        });\n\n        return slider;\n      });\n    }\n    /**\n     * Return JSX of hidden inputs\n     * @private\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'renderHiddenInputs',\n    value: function renderHiddenInputs() {\n      var _this4 = this;\n\n      if (!this.props.name) {\n        return [];\n      }\n\n      var isMultiValue = this.isMultiValue();\n      var values = valueTransformer.getValueFromProps(this.props, isMultiValue);\n      return this.getKeys().map(function (key) {\n        var value = values[key];\n        var name = isMultiValue ? '' + _this4.props.name + (0, _utils.captialize)(key) : _this4.props.name;\n        return _react2.default.createElement('input', {\n          key: key,\n          type: 'hidden',\n          name: name,\n          value: value\n        });\n      });\n    }\n    /**\n     * @ignore\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var componentClassName = this.getComponentClassName();\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n      return _react2.default.createElement('div', {\n        'aria-disabled': this.props.disabled,\n        ref: function ref(node) {\n          _this5.node = node;\n        },\n        className: componentClassName,\n        onKeyDown: this.handleKeyDown,\n        onKeyUp: this.handleKeyUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart\n      }, _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'min'\n      }, this.props.minValue), _react2.default.createElement(_track2.default, {\n        classNames: this.props.classNames,\n        draggableTrack: this.props.draggableTrack,\n        ref: function ref(trackNode) {\n          _this5.trackNode = trackNode;\n        },\n        percentages: percentages,\n        onTrackDrag: this.handleTrackDrag,\n        onTrackMouseDown: this.handleTrackMouseDown\n      }, this.renderSliders()), _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'max'\n      }, this.props.maxValue), this.renderHiddenInputs());\n    }\n  }]);\n\n  return InputRange;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleSliderDrag', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleSliderDrag'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTrackDrag', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTrackDrag'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleSliderKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleSliderKeyDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTrackMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTrackMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleInteractionStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleInteractionStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleInteractionEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleInteractionEnd'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchEnd'), _class.prototype)), _class);\nexports.default = InputRange;\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.getPercentageFromPosition = getPercentageFromPosition;\nexports.getValueFromPosition = getValueFromPosition;\nexports.getValueFromProps = getValueFromProps;\nexports.getPercentageFromValue = getPercentageFromValue;\nexports.getPercentagesFromValues = getPercentagesFromValues;\nexports.getPositionFromValue = getPositionFromValue;\nexports.getPositionsFromValues = getPositionsFromValues;\nexports.getPositionFromEvent = getPositionFromEvent;\nexports.getStepValueFromValue = getStepValueFromValue;\n\nvar _utils = require('../utils');\n/**\n * Convert a point into a percentage value\n * @ignore\n * @param {Point} position\n * @param {ClientRect} clientRect\n * @return {number} Percentage value\n */\n\n\nfunction getPercentageFromPosition(position, clientRect) {\n  var length = clientRect.width;\n  var sizePerc = position.x / length;\n  return sizePerc || 0;\n}\n/**\n * Convert a point into a model value\n * @ignore\n * @param {Point} position\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {number}\n */\n\n\nfunction getValueFromPosition(position, minValue, maxValue, clientRect) {\n  var sizePerc = getPercentageFromPosition(position, clientRect);\n  var valueDiff = maxValue - minValue;\n  return minValue + valueDiff * sizePerc;\n}\n/**\n * Convert props into a range value\n * @ignore\n * @param {Object} props\n * @param {boolean} isMultiValue\n * @return {Range}\n */\n\n\nfunction getValueFromProps(props, isMultiValue) {\n  if (isMultiValue) {\n    return _extends({}, props.value);\n  }\n\n  return {\n    min: props.minValue,\n    max: props.value\n  };\n}\n/**\n * Convert a model value into a percentage value\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @return {number}\n */\n\n\nfunction getPercentageFromValue(value, minValue, maxValue) {\n  var validValue = (0, _utils.clamp)(value, minValue, maxValue);\n  var valueDiff = maxValue - minValue;\n  var valuePerc = (validValue - minValue) / valueDiff;\n  return valuePerc || 0;\n}\n/**\n * Convert model values into percentage values\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @return {Range}\n */\n\n\nfunction getPercentagesFromValues(values, minValue, maxValue) {\n  return {\n    min: getPercentageFromValue(values.min, minValue, maxValue),\n    max: getPercentageFromValue(values.max, minValue, maxValue)\n  };\n}\n/**\n * Convert a value into a point\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Point} Position\n */\n\n\nfunction getPositionFromValue(value, minValue, maxValue, clientRect) {\n  var length = clientRect.width;\n  var valuePerc = getPercentageFromValue(value, minValue, maxValue);\n  var positionValue = valuePerc * length;\n  return {\n    x: positionValue,\n    y: 0\n  };\n}\n/**\n * Convert a range of values into points\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Range}\n */\n\n\nfunction getPositionsFromValues(values, minValue, maxValue, clientRect) {\n  return {\n    min: getPositionFromValue(values.min, minValue, maxValue, clientRect),\n    max: getPositionFromValue(values.max, minValue, maxValue, clientRect)\n  };\n}\n/**\n * Convert an event into a point\n * @ignore\n * @param {Event} event\n * @param {ClientRect} clientRect\n * @return {Point}\n */\n\n\nfunction getPositionFromEvent(event, clientRect) {\n  var length = clientRect.width;\n\n  var _ref = event.touches ? event.touches[0] : event,\n      clientX = _ref.clientX;\n\n  return {\n    x: (0, _utils.clamp)(clientX - clientRect.left, 0, length),\n    y: 0\n  };\n}\n/**\n * Convert a value into a step value\n * @ignore\n * @param {number} value\n * @param {number} valuePerStep\n * @return {number}\n */\n\n\nfunction getStepValueFromValue(value, valuePerStep) {\n  return Math.round(value / valuePerStep) * valuePerStep;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = captialize;\n/**\n * Captialize a string\n * @ignore\n * @param {string} string\n * @return {string}\n */\n\nfunction captialize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clamp;\n/**\n * Clamp a value between a min and max value\n * @ignore\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\n\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = distanceTo;\n/**\n * Calculate the distance between pointA and pointB\n * @ignore\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number} Distance\n */\n\nfunction distanceTo(pointA, pointB) {\n  var xDiff = Math.pow(pointB.x - pointA.x, 2);\n  var yDiff = Math.pow(pointB.y - pointA.y, 2);\n  return Math.sqrt(xDiff + yDiff);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDefined;\n/**\n * Check if a value is defined\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNumber;\n/**\n * Check if a value is a number\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = isObject;\n/**\n * Check if a value is an object\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = length;\n/**\n * Calculate the absolute difference between two numbers\n * @ignore\n * @param {number} numA\n * @param {number} numB\n * @return {number}\n */\n\nfunction length(numA, numB) {\n  return Math.abs(numA - numB);\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Default CSS class names\n * @ignore\n * @type {InputRangeClassNames}\n */\n\nvar DEFAULT_CLASS_NAMES = {\n  activeTrack: 'input-range__track input-range__track--active',\n  disabledInputRange: 'input-range input-range--disabled',\n  inputRange: 'input-range',\n  labelContainer: 'input-range__label-container',\n  maxLabel: 'input-range__label input-range__label--max',\n  minLabel: 'input-range__label input-range__label--min',\n  slider: 'input-range__slider',\n  sliderContainer: 'input-range__slider-container',\n  track: 'input-range__track input-range__track--background',\n  valueLabel: 'input-range__label input-range__label--value'\n};\nexports.default = DEFAULT_CLASS_NAMES;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rangePropType;\n\nvar _utils = require('../utils');\n/**\n * @ignore\n * @param {Object} props - React component props\n * @return {?Error} Return Error if validation fails\n */\n\n\nfunction rangePropType(props) {\n  var maxValue = props.maxValue,\n      minValue = props.minValue;\n\n  if (!(0, _utils.isNumber)(minValue) || !(0, _utils.isNumber)(maxValue)) {\n    return new Error('\"minValue\" and \"maxValue\" must be a number');\n  }\n\n  if (minValue >= maxValue) {\n    return new Error('\"minValue\" must be smaller than \"maxValue\"');\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = valuePropType;\n\nvar _utils = require('../utils');\n/**\n * @ignore\n * @param {Object} props\n * @return {?Error} Return Error if validation fails\n */\n\n\nfunction valuePropType(props, propName) {\n  var maxValue = props.maxValue,\n      minValue = props.minValue;\n  var value = props[propName];\n\n  if (!(0, _utils.isNumber)(value) && (!(0, _utils.isObject)(value) || !(0, _utils.isNumber)(value.min) || !(0, _utils.isNumber)(value.max))) {\n    return new Error('\"' + propName + '\" must be a number or a range object');\n  }\n\n  if ((0, _utils.isNumber)(value) && (value < minValue || value > maxValue)) {\n    return new Error('\"' + propName + '\" must be in between \"minValue\" and \"maxValue\"');\n  }\n\n  if ((0, _utils.isObject)(value) && (value.min < minValue || value.min > maxValue || value.max < minValue || value.max > maxValue)) {\n    return new Error('\"' + propName + '\" must be in between \"minValue\" and \"maxValue\"');\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _label = require('./label');\n\nvar _label2 = _interopRequireDefault(_label);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * @ignore\n */\n\n\nvar Slider = (_class = function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  _createClass(Slider, null, [{\n    key: 'propTypes',\n\n    /**\n     * Accepted propTypes of Slider\n     * @override\n     * @return {Object}\n     * @property {Function} ariaLabelledby\n     * @property {Function} ariaControls\n     * @property {Function} className\n     * @property {Function} formatLabel\n     * @property {Function} maxValue\n     * @property {Function} minValue\n     * @property {Function} onSliderDrag\n     * @property {Function} onSliderKeyDown\n     * @property {Function} percentage\n     * @property {Function} type\n     * @property {Function} value\n     */\n    get: function get() {\n      return {\n        ariaLabelledby: _propTypes2.default.string,\n        ariaControls: _propTypes2.default.string,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n        formatLabel: _propTypes2.default.func,\n        maxValue: _propTypes2.default.number,\n        minValue: _propTypes2.default.number,\n        onSliderDrag: _propTypes2.default.func.isRequired,\n        onSliderKeyDown: _propTypes2.default.func.isRequired,\n        percentage: _propTypes2.default.number.isRequired,\n        type: _propTypes2.default.string.isRequired,\n        value: _propTypes2.default.number.isRequired\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {string} [props.ariaLabelledby]\n     * @param {string} [props.ariaControls]\n     * @param {InputRangeClassNames} props.classNames\n     * @param {Function} [props.formatLabel]\n     * @param {number} [props.maxValue]\n     * @param {number} [props.minValue]\n     * @param {Function} props.onSliderKeyDown\n     * @param {Function} props.onSliderDrag\n     * @param {number} props.percentage\n     * @param {number} props.type\n     * @param {number} props.value\n     */\n\n  }]);\n\n  function Slider(props) {\n    _classCallCheck(this, Slider);\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));\n\n    _this.node = null;\n    return _this;\n  }\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n\n\n  _createClass(Slider, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n      this.removeDocumentTouchEndListener();\n      this.removeDocumentTouchMoveListener();\n    }\n    /**\n     * @private\n     * @return {Object}\n     */\n\n  }, {\n    key: 'getStyle',\n    value: function getStyle() {\n      var perc = (this.props.percentage || 0) * 100;\n      var style = {\n        position: 'absolute',\n        left: perc + '%'\n      };\n      return style;\n    }\n    /**\n     * Listen to mousemove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseMoveListener',\n    value: function addDocumentMouseMoveListener() {\n      this.removeDocumentMouseMoveListener();\n      this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Listen to touchmove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchMoveListener',\n    value: function addDocumentTouchMoveListener() {\n      this.removeDocumentTouchMoveListener();\n      this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);\n    }\n    /**\n     * Listen to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchEndListener',\n    value: function addDocumentTouchEndListener() {\n      this.removeDocumentTouchEndListener();\n      this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseMoveListener',\n    value: function removeDocumentMouseMoveListener() {\n      this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchMoveListener',\n    value: function removeDocumentTouchMoveListener() {\n      this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchEndListener',\n    value: function removeDocumentTouchEndListener() {\n      this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown() {\n      this.addDocumentMouseMoveListener();\n      this.addDocumentMouseUpListener();\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp() {\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(event) {\n      this.props.onSliderDrag(event, this.props.type);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart() {\n      this.addDocumentTouchEndListener();\n      this.addDocumentTouchMoveListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchMove',\n    value: function handleTouchMove(event) {\n      this.props.onSliderDrag(event, this.props.type);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchEnd',\n    value: function handleTouchEnd() {\n      this.removeDocumentTouchMoveListener();\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown(event) {\n      this.props.onSliderKeyDown(event, this.props.type);\n    }\n    /**\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var style = this.getStyle();\n      return _react2.default.createElement('span', {\n        className: this.props.classNames.sliderContainer,\n        ref: function ref(node) {\n          _this2.node = node;\n        },\n        style: style\n      }, _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'value'\n      }, this.props.value), _react2.default.createElement('div', {\n        'aria-labelledby': this.props.ariaLabelledby,\n        'aria-controls': this.props.ariaControls,\n        'aria-valuemax': this.props.maxValue,\n        'aria-valuemin': this.props.minValue,\n        'aria-valuenow': this.props.value,\n        className: this.props.classNames.slider,\n        draggable: 'false',\n        onKeyDown: this.handleKeyDown,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        role: 'slider',\n        tabIndex: '0'\n      }));\n    }\n  }]);\n\n  return Slider;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchEnd'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyDown'), _class.prototype)), _class);\nexports.default = Slider;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * @ignore\n */\n\n\nvar Track = (_class = function (_React$Component) {\n  _inherits(Track, _React$Component);\n\n  _createClass(Track, null, [{\n    key: 'propTypes',\n\n    /**\n     * @override\n     * @return {Object}\n     * @property {Function} children\n     * @property {Function} classNames\n     * @property {Boolean} draggableTrack\n     * @property {Function} onTrackDrag\n     * @property {Function} onTrackMouseDown\n     * @property {Function} percentages\n     */\n    get: function get() {\n      return {\n        children: _propTypes2.default.node.isRequired,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n        draggableTrack: _propTypes2.default.bool,\n        onTrackDrag: _propTypes2.default.func,\n        onTrackMouseDown: _propTypes2.default.func.isRequired,\n        percentages: _propTypes2.default.objectOf(_propTypes2.default.number).isRequired\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {InputRangeClassNames} props.classNames\n     * @param {Boolean} props.draggableTrack\n     * @param {Function} props.onTrackDrag\n     * @param {Function} props.onTrackMouseDown\n     * @param {number} props.percentages\n     */\n\n  }]);\n\n  function Track(props) {\n    _classCallCheck(this, Track);\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (Track.__proto__ || Object.getPrototypeOf(Track)).call(this, props));\n\n    _this.node = null;\n    _this.trackDragEvent = null;\n    return _this;\n  }\n  /**\n   * @private\n   * @return {ClientRect}\n   */\n\n\n  _createClass(Track, [{\n    key: 'getClientRect',\n    value: function getClientRect() {\n      return this.node.getBoundingClientRect();\n    }\n    /**\n     * @private\n     * @return {Object} CSS styles\n     */\n\n  }, {\n    key: 'getActiveTrackStyle',\n    value: function getActiveTrackStyle() {\n      var width = (this.props.percentages.max - this.props.percentages.min) * 100 + '%';\n      var left = this.props.percentages.min * 100 + '%';\n      return {\n        left: left,\n        width: width\n      };\n    }\n    /**\n     * Listen to mousemove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseMoveListener',\n    value: function addDocumentMouseMoveListener() {\n      this.removeDocumentMouseMoveListener();\n      this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseMoveListener',\n    value: function removeDocumentMouseMoveListener() {\n      this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(event) {\n      if (!this.props.draggableTrack) {\n        return;\n      }\n\n      if (this.trackDragEvent !== null) {\n        this.props.onTrackDrag(event, this.trackDragEvent);\n      }\n\n      this.trackDragEvent = event;\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp() {\n      if (!this.props.draggableTrack) {\n        return;\n      }\n\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n      this.trackDragEvent = null;\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event - User event\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(event) {\n      var clientX = event.touches ? event.touches[0].clientX : event.clientX;\n      var trackClientRect = this.getClientRect();\n      var position = {\n        x: clientX - trackClientRect.left,\n        y: 0\n      };\n      this.props.onTrackMouseDown(event, position);\n\n      if (this.props.draggableTrack) {\n        this.addDocumentMouseMoveListener();\n        this.addDocumentMouseUpListener();\n      }\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event - User event\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart(event) {\n      event.preventDefault();\n      this.handleMouseDown(event);\n    }\n    /**\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var activeTrackStyle = this.getActiveTrackStyle();\n      return _react2.default.createElement('div', {\n        className: this.props.classNames.track,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        ref: function ref(node) {\n          _this2.node = node;\n        }\n      }, _react2.default.createElement('div', {\n        style: activeTrackStyle,\n        className: this.props.classNames.activeTrack\n      }), this.props.children);\n    }\n  }]);\n\n  return Track;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype)), _class);\nexports.default = Track;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** @ignore */\n\nvar DOWN_ARROW = exports.DOWN_ARROW = 40;\n/** @ignore */\n\nvar LEFT_ARROW = exports.LEFT_ARROW = 37;\n/** @ignore */\n\nvar RIGHT_ARROW = exports.RIGHT_ARROW = 39;\n/** @ignore */\n\nvar UP_ARROW = exports.UP_ARROW = 38;"],"sourceRoot":""}